// <auto-generated />
using System;
using Data.Migration.Models.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataMigration.Migrations
{
    [DbContext(typeof(CertificateDBContext))]
    partial class CertificateDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Migration.Models.ATestTable", b =>
                {
                    b.Property<string>("Char1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Int1")
                        .HasColumnType("int");

                    b.ToTable("A_TestTable", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Acc", b =>
                {
                    b.Property<string>("F1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToTable("acc", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Admin", b =>
                {
                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<int?>("AdminRoleId")
                        .HasColumnType("int")
                        .HasColumnName("AdminRoleID");

                    b.Property<string>("Annex")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Bgid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BGID")
                        .HasDefaultValueSql("((10))");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<string>("Ext")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsJudge")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("PowerType")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AdminRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdminRoleId")
                        .HasColumnType("int")
                        .HasColumnName("AdminRoleID");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AdminRole", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AllEmployeeNo", b =>
                {
                    b.Property<string>("EmployeeName")
                        .HasMaxLength(240)
                        .IsUnicode(false)
                        .HasColumnType("varchar(240)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable((string)null);

                    b.ToView("AllEmployeeNo", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AndroidUserLoading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Passworld")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("Android_UserLoading", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ApexsqlLogConnectionMonitorSession", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SESSION_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<string>("ServerName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("SERVER_NAME");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("START_TIME");

                    b.Property<DateTime?>("StopTime")
                        .HasColumnType("datetime")
                        .HasColumnName("STOP_TIME");

                    b.HasKey("SessionId")
                        .HasName("PK__APEXSQL_LOG_CONN__34ADA24A");

                    b.ToTable("APEXSQL_LOG_CONNECTION_MONITOR_SESSION", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ApexsqlLogLogin", b =>
                {
                    b.Property<string>("ApplicationName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("APPLICATION_NAME");

                    b.Property<string>("ClientHost")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("CLIENT_HOST");

                    b.Property<string>("LoginName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("LOGIN_NAME");

                    b.Property<DateTime?>("LoginTime")
                        .HasColumnType("datetime")
                        .HasColumnName("LOGIN_TIME");

                    b.Property<string>("ServerName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("SERVER_NAME");

                    b.Property<int>("Spid")
                        .HasColumnType("int")
                        .HasColumnName("SPID");

                    b.HasIndex(new[] { "Spid", "LoginTime", "ServerName" }, "IX_APEXSQL_LOG_LOGIN_2010");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex(new[] { "Spid", "LoginTime", "ServerName" }, "IX_APEXSQL_LOG_LOGIN_2010"));

                    b.ToTable("APEXSQL_LOG_LOGIN", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ApexsqlLogString", b =>
                {
                    b.Property<int>("ColType")
                        .HasColumnType("int")
                        .HasColumnName("COL_TYPE");

                    b.Property<string>("ColName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("COL_NAME");

                    b.Property<string>("ServerName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("SERVER_NAME");

                    b.HasKey("ColType", "ColName");

                    b.ToTable("APEXSQL_LOG_STRINGS", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AppUserBeforeLoding", b =>
                {
                    b.Property<int>("AppUserBeforeLodingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("App_UserBeforeLodingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppUserBeforeLodingId"));

                    b.Property<int>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("AppUserBeforeLodingId");

                    b.ToTable("App_UserBeforeLoding", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ApplicationDoor", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("BgledName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BGLedName");

                    b.Property<string>("BgledNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BGLedNo");

                    b.Property<string>("Bgpost")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BGPost");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<string>("File")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("ApplicationId")
                        .HasName("PK_APPLICATIONDOOR");

                    b.ToTable("ApplicationDoor", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ApplicationSignoff", b =>
                {
                    b.Property<DateTime?>("ApplicationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ApplicationEmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ApplicationEmployeeNO");

                    b.Property<bool>("ApplicationPass")
                        .HasColumnType("bit");

                    b.Property<int>("ApplicationSignoffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ApplicationSignoffID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationSignoffId"));

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable("ApplicationSignoff", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AppointPerson", b =>
                {
                    b.Property<string>("ApplicationNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("AppointId")
                        .HasColumnType("int");

                    b.Property<string>("AuditName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("AuditNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("AuditNote")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.ToTable("AppointPeople");
                });

            modelBuilder.Entity("Data.Migration.Models.AppointmentAddress", b =>
                {
                    b.Property<string>("AppointmentAddressGuid")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("AppointmentAddressGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("AppointmentAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppointmentAddressID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentAddressId"));

                    b.Property<string>("AppointmentAddressName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("AppointmentAddressGuid");

                    b.ToTable("AppointmentAddress", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AppointmentCount", b =>
                {
                    b.Property<string>("AppointmentCountGuid")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("AppointmentCountGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("AppointmentCount1")
                        .HasColumnType("int")
                        .HasColumnName("AppointmentCount");

                    b.Property<int>("AppointmentCountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppointmentCountID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentCountId"));

                    b.Property<string>("AppointmentPeopleNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AppointmentCountGuid");

                    b.ToTable("AppointmentCount", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AppointmentDate", b =>
                {
                    b.Property<string>("AppointmentDateGuid")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("AppointmentDateGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("AppointmentDateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppointmentDateID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentDateId"));

                    b.Property<DateTime>("AppointmentDateName")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("AppointmentDateGuid");

                    b.ToTable("AppointmentDate", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AppointmentDateTime", b =>
                {
                    b.Property<string>("AppointmentDateTimeGuid")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("AppointmentDateTimeGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AppointmentAddressGuid")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("AppointmentAddressGUID");

                    b.Property<string>("AppointmentDateGuid")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("AppointmentDateGUID");

                    b.Property<int>("AppointmentDateTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppointmentDateTimeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentDateTimeId"));

                    b.Property<string>("AppointmentTimeGuid")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("AppointmentTimeGUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("AppointmentDateTimeGuid");

                    b.ToTable("AppointmentDateTime", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AppointmentLog", b =>
                {
                    b.Property<int>("AppointmentLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppointmentLogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentLogId"));

                    b.Property<string>("AppointmentAddressName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("AppointmentDateName")
                        .HasColumnType("datetime");

                    b.Property<string>("AppointmentPeopleNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AppointmentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AppointmentTimeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("AppointmentLogId");

                    b.ToTable("AppointmentLog", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AppointmentPerson", b =>
                {
                    b.Property<string>("AppointmentPeopleGuid")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("AppointmentPeopleGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AppointmentDateTimeGuid")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("AppointmentDateTimeGUID");

                    b.Property<int>("AppointmentPeopleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppointmentPeopleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentPeopleId"));

                    b.Property<string>("AppointmentPeopleNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Mã số công việc");

                    b.Property<int>("AppointmentStatus")
                        .HasColumnType("int")
                        .HasComment("Trạng thái cuộc hẹn: 0 đã đặt trước, 3 đã hủy");

                    b.HasKey("AppointmentPeopleGuid");

                    b.ToTable("AppointmentPeople");
                });

            modelBuilder.Entity("Data.Migration.Models.AppointmentTime", b =>
                {
                    b.Property<string>("AppointmentTimeGuid")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("AppointmentTimeGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AppointmentTimeBeginTime")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("Thời gian bắt đầu thời điểm cuộc hẹn");

                    b.Property<string>("AppointmentTimeEndTime")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("Thời gian kết thúc thời điểm cuộc hẹn");

                    b.Property<int>("AppointmentTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppointmentTimeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentTimeId"));

                    b.Property<string>("AppointmentTimeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("\r\nTên vị trí cuộc hẹn");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<int>("PeopleCount")
                        .HasColumnType("int")
                        .HasComment("Số người");

                    b.HasKey("AppointmentTimeGuid");

                    b.ToTable("AppointmentTime", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Area", b =>
                {
                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("AreaMeno")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ListIndex")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("Area", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AreaCard", b =>
                {
                    b.Property<string>("AreaCard1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AreaCard");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Meno")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable("AreaCard", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AreaDetail", b =>
                {
                    b.Property<int?>("AreaRegionId")
                        .HasColumnType("int")
                        .HasColumnName("AreaRegionID");

                    b.Property<string>("DetailAreaName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.ToTable("AreaDetail", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AreaPowerManager", b =>
                {
                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    b.Property<string>("AreaId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AreaID");

                    b.Property<string>("AreaName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("BuCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BuName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ExtTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int?>("Job")
                        .HasColumnType("int");

                    b.Property<int?>("M01")
                        .HasColumnType("int");

                    b.Property<int?>("M02")
                        .HasColumnType("int");

                    b.Property<int?>("M02a")
                        .HasColumnType("int")
                        .HasColumnName("M02A");

                    b.Property<int?>("M02b")
                        .HasColumnType("int")
                        .HasColumnName("M02B");

                    b.Property<int?>("M02c")
                        .HasColumnType("int")
                        .HasColumnName("M02C");

                    b.Property<int?>("M02d")
                        .HasColumnType("int")
                        .HasColumnName("M02D");

                    b.Property<int?>("M02e")
                        .HasColumnType("int")
                        .HasColumnName("M02E");

                    b.Property<int?>("M02f")
                        .HasColumnType("int")
                        .HasColumnName("M02F");

                    b.Property<int?>("M02g")
                        .HasColumnType("int")
                        .HasColumnName("M02G");

                    b.Property<int?>("M03")
                        .HasColumnType("int");

                    b.Property<int?>("M04")
                        .HasColumnType("int");

                    b.Property<int?>("M05")
                        .HasColumnType("int");

                    b.Property<int?>("M06")
                        .HasColumnType("int");

                    b.Property<int?>("M07")
                        .HasColumnType("int");

                    b.Property<int?>("M08")
                        .HasColumnType("int");

                    b.Property<int?>("M09")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("W01")
                        .HasColumnType("int");

                    b.Property<int?>("W01a")
                        .HasColumnType("int")
                        .HasColumnName("W01A");

                    b.Property<int?>("W01b")
                        .HasColumnType("int")
                        .HasColumnName("W01B");

                    b.Property<int?>("W01c")
                        .HasColumnType("int")
                        .HasColumnName("W01C");

                    b.Property<int?>("W01d")
                        .HasColumnType("int")
                        .HasColumnName("W01D");

                    b.Property<int?>("W02")
                        .HasColumnType("int");

                    b.Property<int?>("W02a")
                        .HasColumnType("int")
                        .HasColumnName("W02A");

                    b.Property<int?>("W02b")
                        .HasColumnType("int")
                        .HasColumnName("W02B");

                    b.Property<int?>("W02c")
                        .HasColumnType("int")
                        .HasColumnName("W02C");

                    b.Property<int?>("W02d")
                        .HasColumnType("int")
                        .HasColumnName("W02D");

                    b.Property<int?>("W02e")
                        .HasColumnType("int")
                        .HasColumnName("W02E");

                    b.Property<int?>("W03")
                        .HasColumnType("int");

                    b.Property<int?>("W03a")
                        .HasColumnType("int")
                        .HasColumnName("W03A");

                    b.Property<int?>("W03b")
                        .HasColumnType("int")
                        .HasColumnName("W03B");

                    b.Property<int?>("W04")
                        .HasColumnType("int");

                    b.Property<int?>("W05")
                        .HasColumnType("int");

                    b.Property<int?>("W06")
                        .HasColumnType("int");

                    b.Property<int?>("W07")
                        .HasColumnType("int");

                    b.Property<int?>("W08")
                        .HasColumnType("int");

                    b.Property<int?>("W09")
                        .HasColumnType("int");

                    b.Property<int?>("W10")
                        .HasColumnType("int");

                    b.Property<int?>("W11")
                        .HasColumnType("int");

                    b.ToTable("AreaPowerManager", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AreaPowerManagerApplication", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable("AreaPowerManagerApplication", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AreaPowerManagerApprove", b =>
                {
                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    b.Property<string>("AreaId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AreaID");

                    b.Property<string>("AreaName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("BuCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BuName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ExtTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int?>("Job")
                        .HasColumnType("int");

                    b.Property<int?>("M01")
                        .HasColumnType("int");

                    b.Property<int?>("M02")
                        .HasColumnType("int");

                    b.Property<int?>("M02a")
                        .HasColumnType("int")
                        .HasColumnName("M02A");

                    b.Property<int?>("M02b")
                        .HasColumnType("int")
                        .HasColumnName("M02B");

                    b.Property<int?>("M02c")
                        .HasColumnType("int")
                        .HasColumnName("M02C");

                    b.Property<int?>("M02d")
                        .HasColumnType("int")
                        .HasColumnName("M02D");

                    b.Property<int?>("M02e")
                        .HasColumnType("int")
                        .HasColumnName("M02E");

                    b.Property<int?>("M02f")
                        .HasColumnType("int")
                        .HasColumnName("M02F");

                    b.Property<int?>("M02g")
                        .HasColumnType("int")
                        .HasColumnName("M02G");

                    b.Property<int?>("M03")
                        .HasColumnType("int");

                    b.Property<int?>("M04")
                        .HasColumnType("int");

                    b.Property<int?>("M05")
                        .HasColumnType("int");

                    b.Property<int?>("M06")
                        .HasColumnType("int");

                    b.Property<int?>("M07")
                        .HasColumnType("int");

                    b.Property<int?>("M08")
                        .HasColumnType("int");

                    b.Property<int?>("M09")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("W01")
                        .HasColumnType("int");

                    b.Property<int?>("W01a")
                        .HasColumnType("int")
                        .HasColumnName("W01A");

                    b.Property<int?>("W01b")
                        .HasColumnType("int")
                        .HasColumnName("W01B");

                    b.Property<int?>("W01c")
                        .HasColumnType("int")
                        .HasColumnName("W01C");

                    b.Property<int?>("W01d")
                        .HasColumnType("int")
                        .HasColumnName("W01D");

                    b.Property<int?>("W02")
                        .HasColumnType("int");

                    b.Property<int?>("W02a")
                        .HasColumnType("int")
                        .HasColumnName("W02A");

                    b.Property<int?>("W02b")
                        .HasColumnType("int")
                        .HasColumnName("W02B");

                    b.Property<int?>("W02c")
                        .HasColumnType("int")
                        .HasColumnName("W02C");

                    b.Property<int?>("W02d")
                        .HasColumnType("int")
                        .HasColumnName("W02D");

                    b.Property<int?>("W02e")
                        .HasColumnType("int")
                        .HasColumnName("W02E");

                    b.Property<int?>("W03")
                        .HasColumnType("int");

                    b.Property<int?>("W03a")
                        .HasColumnType("int")
                        .HasColumnName("W03A");

                    b.Property<int?>("W03b")
                        .HasColumnType("int")
                        .HasColumnName("W03B");

                    b.Property<int?>("W04")
                        .HasColumnType("int");

                    b.Property<int?>("W05")
                        .HasColumnType("int");

                    b.Property<int?>("W06")
                        .HasColumnType("int");

                    b.Property<int?>("W07")
                        .HasColumnType("int");

                    b.Property<int?>("W08")
                        .HasColumnType("int");

                    b.Property<int?>("W09")
                        .HasColumnType("int");

                    b.Property<int?>("W10")
                        .HasColumnType("int");

                    b.Property<int?>("W11")
                        .HasColumnType("int");

                    b.ToTable("AreaPowerManagerApprove", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AreaPowerManagerProc", b =>
                {
                    b.Property<int?>("Act")
                        .HasColumnType("int");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Memo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProcID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcId"));

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<DateTime?>("WordTime")
                        .HasColumnType("datetime");

                    b.ToTable("AreaPowerManagerProc", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AreaPowerManagerStatus", b =>
                {
                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Leavel")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<string>("ParameterCode")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<DateTime?>("WordDate")
                        .HasColumnType("datetime");

                    b.ToTable("AreaPowerManagerStatus", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AreaPowerManagerType", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("JurisdisctionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("JurisdisctionTypeID");

                    b.Property<string>("Memo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("AreaPowerManagerType", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AreaRegion", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int>("AreaRegionId")
                        .HasColumnType("int")
                        .HasColumnName("AreaRegionID");

                    b.Property<long?>("RegionId")
                        .HasColumnType("bigint")
                        .HasColumnName("RegionID");

                    b.ToTable("AreaRegion", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AreaRegionCertificate", b =>
                {
                    b.Property<int?>("AreaRegionId")
                        .HasColumnType("int")
                        .HasColumnName("AreaRegionID");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Meno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable("AreaRegionCertificate", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AreaRegionHistory", b =>
                {
                    b.Property<int?>("AreaRegionId")
                        .HasColumnType("int")
                        .HasColumnName("AreaRegionID");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Meno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable("AreaRegionHistory", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AreaRegionValid", b =>
                {
                    b.Property<int?>("AreaRegionId")
                        .HasColumnType("int")
                        .HasColumnName("AreaRegionID");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Meno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable("AreaRegionValid", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AreaRegionVehiclePeriod", b =>
                {
                    b.Property<int?>("AreaRegionId")
                        .HasColumnType("int")
                        .HasColumnName("AreaRegionID");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Meno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable("AreaRegionVehiclePeriod", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AreaRelation", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("AreaRid")
                        .HasColumnType("int")
                        .HasColumnName("AreaRID");

                    b.ToTable("AreaRelation", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AreaforImExProduct", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("AreaName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AreaNameT")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ShortName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("Areafor_ImExProduct", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.AuditProcess", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AuditID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("AuditMeno")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("AuditPeople")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AuditResult")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("AuditTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Employee")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<double?>("Leavel")
                        .HasColumnType("float")
                        .HasColumnName("leavel");

                    b.HasKey("AuditId");

                    b.ToTable("AuditProcess", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Bg", b =>
                {
                    b.Property<int>("Bgid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Bgid"));

                    b.Property<string>("Bgname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BGName");

                    b.Property<bool>("IsAll")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Bgid");

                    b.ToTable("BG", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Bgmatch", b =>
                {
                    b.Property<int>("BgmatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BGMatchID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BgmatchId"));

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("BgmatchName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BGMatchName");

                    b.HasKey("BgmatchId");

                    b.ToTable("BGMatch", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.BlackList", b =>
                {
                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Memo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumberCar")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PeopleId")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("PeopleID");

                    b.Property<DateTime?>("TimeApplication")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeBlock")
                        .HasColumnType("datetime");

                    b.ToTable("BlackList", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Building", b =>
                {
                    b.Property<int>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BuildingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildingId"));

                    b.Property<string>("BuildingName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BuildingId");

                    b.ToTable("Building", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Byf", b =>
                {
                    b.Property<string>("Carlicense")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("carlicense");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime")
                        .HasColumnName("time");

                    b.ToTable("byf", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Byf1", b =>
                {
                    b.Property<DateTime?>("Audittime")
                        .HasColumnType("datetime")
                        .HasColumnName("audittime");

                    b.Property<string>("Carlicense")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("carlicense");

                    b.Property<string>("Cause")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cause");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int")
                        .HasColumnName("isdeleted");

                    b.Property<int?>("Num")
                        .HasColumnType("int")
                        .HasColumnName("num");

                    b.ToTable("byf_1", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Byf2", b =>
                {
                    b.Property<string>("Carlicense")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("carlicense");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Phone1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("phone1");

                    b.Property<string>("Phone2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("phone2");

                    b.ToTable("byf_2", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Byf3", b =>
                {
                    b.Property<DateTime?>("Audittime")
                        .HasColumnType("datetime")
                        .HasColumnName("audittime");

                    b.Property<string>("Carlicense")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("carlicense");

                    b.Property<string>("Cause")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cause");

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int")
                        .HasColumnName("isdeleted");

                    b.Property<int?>("Num")
                        .HasColumnType("int")
                        .HasColumnName("num");

                    b.ToTable("byf_3", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Camera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("CheckData")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("EmpTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int?>("Monitor")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Position")
                        .HasColumnType("int");

                    b.Property<int?>("Result")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeApplication")
                        .HasColumnType("datetime");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Camera", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CameraStatus", b =>
                {
                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Leavel")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<DateTime?>("WorkDate")
                        .HasColumnType("datetime");

                    b.ToTable("CameraStatus", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CarID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarId"));

                    b.Property<string>("CarColor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CarType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("RemandTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("VisitorsId")
                        .HasColumnType("int")
                        .HasColumnName("VisitorsID");

                    b.HasKey("CarId");

                    b.ToTable("Car", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CarInoutRecord", b =>
                {
                    b.Property<string>("Bak")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bak");

                    b.Property<string>("CarNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("car_no");

                    b.Property<string>("CarNum")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("car_num");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Imagepath")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("imagepath");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("place");

                    b.Property<string>("SDir")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("s_dir");

                    b.Property<string>("Stime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("stime");

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("style");

                    b.ToTable("car_inout_record", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CarPass", b =>
                {
                    b.Property<int>("Idve")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDVe");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idve"));

                    b.Property<string>("CapBac")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CarColor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("CarType")
                        .HasColumnType("int");

                    b.Property<string>("CarTypeOther")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CardArea")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("FileAddendum")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Idlicer")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IDLicer");

                    b.Property<string>("Idpeople")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("IDPeople");

                    b.Property<string>("ImageCar")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InureStartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("IsJob")
                        .HasColumnType("int");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NameCn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NameCN");

                    b.Property<string>("NameVn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NameVN");

                    b.Property<int?>("NoExecl")
                        .HasColumnType("int");

                    b.Property<string>("PosisionCar")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeApplication")
                        .HasColumnType("datetime");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.Property<int?>("WeightReal")
                        .HasColumnType("int");

                    b.HasKey("Idve");

                    b.ToTable("CarPass", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CarPassBill", b =>
                {
                    b.Property<int>("Idbill")
                        .HasColumnType("int")
                        .HasColumnName("IDBill");

                    b.Property<int?>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("BillNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("FileBill")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Memo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.HasKey("Idbill");

                    b.ToTable("CarPassBill", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CarPassProc", b =>
                {
                    b.Property<int>("ProcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProcID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcId"));

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Leavel")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ParaCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<DateTime?>("WorkDate")
                        .HasColumnType("datetime");

                    b.HasKey("ProcId");

                    b.ToTable("CarPassProc", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CarPassStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Ip")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IP");

                    b.Property<int?>("Leavel")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ParaCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("WorkDate")
                        .HasColumnType("datetime");

                    b.HasKey("StatusId");

                    b.ToTable("CarPassStatus", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CarToStop", b =>
                {
                    b.Property<string>("CarBrand")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CarCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CarType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable((string)null);

                    b.ToView("CarToStop", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CarToStop01", b =>
                {
                    b.Property<string>("CarBrand")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CarCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CarType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("CarToStop01", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CarTypePass", b =>
                {
                    b.Property<int>("CarType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarType"));

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CarType");

                    b.ToTable("CarTypePass", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CarVip", b =>
                {
                    b.Property<int>("CarVipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CarVipID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarVipId"));

                    b.Property<int?>("BrushType")
                        .HasColumnType("int");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("CardType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DepartMent")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Meno")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("TelePhone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CarVipId");

                    b.ToTable("CarVip", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CarVipProc", b =>
                {
                    b.Property<int>("ProcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProcID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcId"));

                    b.Property<string>("Act")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Meno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<DateTime?>("WorkDate")
                        .HasColumnType("datetime");

                    b.HasKey("ProcId");

                    b.ToTable("CarVipProc", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CarVipStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<double?>("Leavel")
                        .HasColumnType("float");

                    b.Property<string>("Meno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Worktime")
                        .HasColumnType("datetime");

                    b.HasKey("StatusId");

                    b.ToTable("CarVipStatus", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Card", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<string>("CardGuid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CardGUID")
                        .HasComment("證件補辦使用，相同的CardGuID表示同一個證件的卡");

                    b.Property<int?>("CardModelId")
                        .HasColumnType("int")
                        .HasColumnName("CardModelID");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("color");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ControlType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("MadeTime")
                        .HasColumnType("datetime");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("WorkType")
                        .HasColumnType("int");

                    b.HasKey("CardId")
                        .HasName("PK_CARD");

                    b.ToTable("Card", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CardAdded", b =>
                {
                    b.Property<int>("CardAddedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CardAddedID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardAddedId"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<int?>("CardAddedStatus")
                        .HasColumnType("int")
                        .HasComment("1 待收取資料，2待審核，3產生新卡");

                    b.Property<int?>("CardAddedType")
                        .HasColumnType("int")
                        .HasComment("1 卡損壞補辦，2卡遺失補辦");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Ext")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IP");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Mac")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MAC");

                    b.Property<string>("Reasons")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("CardAddedId");

                    b.ToTable("CardAdded", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CardBorrow", b =>
                {
                    b.Property<int>("CardBorrowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CardBorrowID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardBorrowId"));

                    b.Property<string>("CardId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CardID");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable("CardBorrow", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CardChangeHistory", b =>
                {
                    b.Property<int?>("CardChangeId")
                        .HasColumnType("int")
                        .HasColumnName("CardChangeID");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("TimeChange")
                        .HasColumnType("datetime");

                    b.ToTable("CardChangeHistory", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CardCompanyHistory", b =>
                {
                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<int?>("CompanyIdnew")
                        .HasColumnType("int")
                        .HasColumnName("CompanyIDnew");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CreateId")
                        .HasColumnType("int")
                        .HasColumnName("CreateID");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.ToTable("CardCompanyHistory", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CardCreateTable", b =>
                {
                    b.Property<string>("TableName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable("CardCreateTables");
                });

            modelBuilder.Entity("Data.Migration.Models.CardHistoryDatum", b =>
                {
                    b.Property<int>("CardHistoryDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CardHistoryDataID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardHistoryDataId"));

                    b.Property<string>("CardStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DataTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("EcardNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ECardNo");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IP");

                    b.Property<string>("Mac")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MAC");

                    b.Property<string>("Reason")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("TransferTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CardHistoryDataId")
                        .HasName("PK_SwipingCadrData");

                    b.ToTable("CardHistoryData");
                });

            modelBuilder.Entity("Data.Migration.Models.CardModel", b =>
                {
                    b.Property<int>("CardModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CardModelID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardModelId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ModelImg")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ModelName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.HasKey("CardModelId");

                    b.ToTable("CardModel", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CardSwipe", b =>
                {
                    b.Property<string>("AreaId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("AreaID");

                    b.Property<DateTime?>("DateSwipe")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Images")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Latitude")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Longtitude")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("TimeSwipe")
                        .HasColumnType("datetime");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable("CardSwipe", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CardTest", b =>
                {
                    b.Property<int>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<string>("CardGuid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CardGUID");

                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardId"));

                    b.Property<int?>("CardModelId")
                        .HasColumnType("int")
                        .HasColumnName("CardModelID");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("color");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ControlType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("MadeTime")
                        .HasColumnType("datetime");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("WorkType")
                        .HasColumnType("int");

                    b.ToTable("Card_Test", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CardText", b =>
                {
                    b.Property<int>("CardTextId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CardTextID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardTextId"));

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("TextName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CardTextId");

                    b.ToTable("CardText", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CardVendor", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardId"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<string>("CardArea")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CardType")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateChange")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("FileBill")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("WorkType")
                        .HasColumnType("int");

                    b.HasKey("CardId");

                    b.ToTable("CardVendor", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CertificateDb", b =>
                {
                    b.Property<string>("Area")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGid");

                    b.Property<string>("Date")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Dvsn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DVSN");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Namvien")
                        .HasColumnType("int");

                    b.Property<int?>("Nhiem")
                        .HasColumnType("int");

                    b.Property<int?>("RaKtx")
                        .HasColumnType("int")
                        .HasColumnName("RaKTX");

                    b.Property<int?>("Ravien")
                        .HasColumnType("int");

                    b.Property<int?>("Sot")
                        .HasColumnType("int");

                    b.Property<int?>("TheodoiKtx")
                        .HasColumnType("int")
                        .HasColumnName("TheodoiKTX");

                    b.ToTable("CertificateDB", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CertificateDelay", b =>
                {
                    b.Property<int>("DelayApplyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DelayApplyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DelayApplyId"));

                    b.Property<string>("Certificate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CertificateType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Certificate_Type");

                    b.Property<DateTime?>("DelayDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NewExpirationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("New_ExpirationDate");

                    b.Property<DateTime?>("OldExpirationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Old_ExpirationDate");

                    b.Property<string>("TableName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("DelayApplyId");

                    b.ToTable("Certificate_Delay", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CertificatesDelay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplyPeople")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OnworkFile")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.HasKey("Id");

                    b.ToTable("CertificatesDelay", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ChargeRecord", b =>
                {
                    b.Property<int>("ChargeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ChargeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChargeId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Bill")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("BillAmountTotal")
                        .HasColumnType("int");

                    b.Property<string>("BillNumber")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("billNumber")
                        .HasDefaultValueSql("('')");

                    b.Property<int?>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CardID")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Compensation")
                        .HasColumnType("int");

                    b.Property<string>("DamageCard")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("IsCompensation")
                        .HasColumnType("int");

                    b.Property<string>("Meno")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Receipts")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SenderPeople")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("SenderTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SenderUnit")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("ChargeId")
                        .HasName("PK_CHARGERECORDS");

                    b.ToTable("ChargeRecords");
                });

            modelBuilder.Entity("Data.Migration.Models.CheckTemp", b =>
                {
                    b.Property<DateTime?>("Comfromtime")
                        .HasColumnType("datetime")
                        .HasColumnName("comfromtime");

                    b.Property<string>("Controlname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("controlname");

                    b.Property<string>("Credentialsnumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("credentialsnumber");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("reason");

                    b.ToTable("CheckTemp", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CheckTime", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("MerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MerId"));

                    b.Property<string>("TimeIn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("TimeOut")
                        .HasColumnType("datetime");

                    b.ToTable("CheckTime", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ChemistryAuthorityChangeEmail", b =>
                {
                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Email1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeesId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeesID");

                    b.Property<string>("EmployeesId2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeesName2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.ToTable("ChemistryAuthority_ChangeEmail", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ChemistryAuthorityHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("AuthorityId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("DeparmentSnid")
                        .HasColumnType("int")
                        .HasColumnName("DeparmentSNID");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeesId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeesID");

                    b.Property<string>("EmployeesNameT")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeesNameV")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Chemistry_Authority_History", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ChemistryDocforMaterial", b =>
                {
                    b.Property<int?>("ChemistryFormId")
                        .HasColumnType("int")
                        .HasColumnName("ChemistryFormID");

                    b.Property<string>("GpVanchuyen")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gpkinhdoanh")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("GPKinhdoanh");

                    b.Property<string>("GpsxKinhdoanh")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MaterialId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MaterialID");

                    b.Property<string>("Msds")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MSDS");

                    b.Property<string>("TlThue")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TucachngVanchuyen")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("XacnhanttHoachat")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("Chemistry_DocforMaterial", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ChemistryForm", b =>
                {
                    b.Property<string>("Applicant")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfApplication")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateOfExpectedEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateOfExpectedStart")
                        .HasColumnType("datetime");

                    b.Property<string>("DepartmentBuy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentRequitision")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DepartmentSn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DepartmentSN");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeBuy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Export")
                        .HasColumnType("int");

                    b.Property<string>("FactoryGate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IsShow")
                        .HasColumnType("int");

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<string>("LocationAndTech")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MinistrySn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MinistrySN");

                    b.Property<int?>("Needtodec")
                        .HasColumnType("int");

                    b.Property<string>("PhoneofEmpBuy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StoreLocation")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable("ChemistryForm", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ChemistryForm1", b =>
                {
                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfApplication")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateOfExpectedEnd")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateOfExpectedStart")
                        .HasColumnType("date");

                    b.Property<string>("DepartmentBuy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentRequitision")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DepartmentSn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DepartmentSN");

                    b.Property<string>("EmployeeBuy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Export")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LocationAndTech")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MinistrySn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MinistrySN");

                    b.Property<int?>("Needtodec")
                        .HasColumnType("int");

                    b.Property<int?>("PhoneofEmpBuy")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StoreLocation")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable("ChemistryForm", "faceid");
                });

            modelBuilder.Entity("Data.Migration.Models.ChemistryFormAuthority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("AuthorityId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("DeparmentSnid")
                        .HasColumnType("int")
                        .HasColumnName("DeparmentSNID");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeesId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeesID");

                    b.Property<string>("EmployeesNameT")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeesNameV")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("IsImposition")
                        .HasColumnType("int");

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("PosOrder")
                        .HasColumnType("int");

                    b.Property<string>("PositionName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ChemistryForm_Authority", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ChrCode", b =>
                {
                    b.Property<string>("CodeDesc")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("code_desc");

                    b.Property<string>("CodeGroup")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("code_group");

                    b.Property<string>("CodeId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("code_id");

                    b.Property<string>("CodeStatus")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("code_status");

                    b.Property<string>("CodeType")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("code_type");

                    b.Property<string>("Lasteditby")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("lasteditby");

                    b.Property<DateTime?>("Lasteditdt")
                        .HasColumnType("datetime")
                        .HasColumnName("lasteditdt");

                    b.ToTable((string)null);

                    b.ToView("Chr_Code", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ChrEmpCardinfo", b =>
                {
                    b.Property<string>("Cardid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cardid");

                    b.Property<string>("Empmemo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("empmemo");

                    b.Property<string>("Empno")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("empno");

                    b.Property<string>("Softno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("softno");

                    b.ToTable("Chr_EmpCardinfo", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ChrEmpCardinfoTemp", b =>
                {
                    b.Property<string>("Cardid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cardid");

                    b.Property<string>("Empmemo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("empmemo");

                    b.Property<string>("Empno")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("empno");

                    b.Property<string>("Softno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("softno");

                    b.ToTable("Chr_EmpCardinfo_temp", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ChrEmployee", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("BgCode")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("bg_code");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasColumnName("birthday");

                    b.Property<string>("ClassNo")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("class_no");

                    b.Property<string>("Cos")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("cos");

                    b.Property<string>("DepartNo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("depart_no");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("emp_id");

                    b.Property<string>("EmpName")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("emp_name");

                    b.Property<string>("EmpNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("emp_no");

                    b.Property<string>("EmpType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("emp_type");

                    b.Property<string>("FactoryCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("factory_code");

                    b.Property<double?>("Id")
                        .HasColumnType("float")
                        .HasColumnName("id");

                    b.Property<DateTime?>("InDate")
                        .HasColumnType("datetime")
                        .HasColumnName("in_date");

                    b.Property<string>("InitSiteid")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("init_siteid");

                    b.Property<string>("JobCode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("job_code");

                    b.Property<string>("JobSituation")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("job_situation");

                    b.Property<DateTime?>("KeyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("key_date");

                    b.Property<DateTime?>("Lasteditdt")
                        .HasColumnType("datetime")
                        .HasColumnName("lasteditdt");

                    b.Property<DateTime?>("LevDate")
                        .HasColumnType("datetime")
                        .HasColumnName("lev_date");

                    b.Property<string>("Married")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("married");

                    b.Property<string>("Oldhome")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("oldhome");

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("photo");

                    b.Property<string>("Sex")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("sex");

                    b.Property<string>("Siteid")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("siteid");

                    b.Property<string>("StatusNo")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("status_no");

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("datetime")
                        .HasColumnName("transfer_date");

                    b.Property<string>("Urgtel")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("urgtel");

                    b.HasIndex(new[] { "EmpNo" }, "IX_Chr_employee_No");

                    b.ToTable("Chr_Employee", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ChrEmployee0228", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("BgCode")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("bg_code");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasColumnName("birthday");

                    b.Property<string>("ClassNo")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("class_no");

                    b.Property<string>("Cos")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("cos");

                    b.Property<string>("DepartNo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("depart_no");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("emp_id");

                    b.Property<string>("EmpName")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("emp_name");

                    b.Property<string>("EmpNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("emp_no");

                    b.Property<double?>("Id")
                        .HasColumnType("float")
                        .HasColumnName("id");

                    b.Property<DateTime?>("InDate")
                        .HasColumnType("datetime")
                        .HasColumnName("in_date");

                    b.Property<string>("InitSiteid")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("init_siteid");

                    b.Property<string>("JobSituation")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("job_situation");

                    b.Property<DateTime?>("KeyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("key_date");

                    b.Property<DateTime?>("Lasteditdt")
                        .HasColumnType("datetime")
                        .HasColumnName("lasteditdt");

                    b.Property<DateTime?>("LevDate")
                        .HasColumnType("datetime")
                        .HasColumnName("lev_date");

                    b.Property<string>("Married")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("married");

                    b.Property<string>("Oldhome")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("oldhome");

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("photo");

                    b.Property<string>("Sex")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("sex");

                    b.Property<string>("Siteid")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("siteid");

                    b.Property<string>("StatusNo")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("status_no");

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("datetime")
                        .HasColumnName("transfer_date");

                    b.Property<string>("Urgtel")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("urgtel");

                    b.ToTable((string)null);

                    b.ToView("Chr_Employee0228", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ChrEmployeeImage", b =>
                {
                    b.Property<string>("BgCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpIdentity")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<DateTime?>("ImgUpTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("IsImage")
                        .HasColumnType("int");

                    b.Property<int?>("IsService")
                        .HasColumnType("int");

                    b.Property<int?>("IsUpImg")
                        .HasColumnType("int");

                    b.Property<string>("Md5val")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("MD5Val");

                    b.Property<DateTime?>("OutTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.ToTable("Chr_Employee_Image", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ChrEmployeeSwitch", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("BgCode")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("bg_code");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasColumnName("birthday");

                    b.Property<string>("ClassNo")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("class_no");

                    b.Property<string>("Cos")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("cos");

                    b.Property<string>("DepartNo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("depart_no");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("emp_id");

                    b.Property<string>("EmpName")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("emp_name");

                    b.Property<string>("EmpNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("emp_no");

                    b.Property<double?>("Id")
                        .HasColumnType("float")
                        .HasColumnName("id");

                    b.Property<DateTime?>("InDate")
                        .HasColumnType("datetime")
                        .HasColumnName("in_date");

                    b.Property<string>("InitSiteid")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("init_siteid");

                    b.Property<string>("JobSituation")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("job_situation");

                    b.Property<DateTime?>("KeyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("key_date");

                    b.Property<DateTime?>("Lasteditdt")
                        .HasColumnType("datetime")
                        .HasColumnName("lasteditdt");

                    b.Property<DateTime?>("LevDate")
                        .HasColumnType("datetime")
                        .HasColumnName("lev_date");

                    b.Property<string>("Married")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("married");

                    b.Property<string>("Oldhome")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("oldhome");

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("photo");

                    b.Property<string>("Sex")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("sex");

                    b.Property<string>("Siteid")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("siteid");

                    b.Property<string>("StatusNo")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("status_no");

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("datetime")
                        .HasColumnName("transfer_date");

                    b.Property<string>("Urgtel")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("urgtel");

                    b.ToTable("chr_employee_switch", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ChrEmployeeTmp", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("BgCode")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("bg_code");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasColumnName("birthday");

                    b.Property<string>("ClassNo")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("class_no");

                    b.Property<string>("Cos")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("cos");

                    b.Property<string>("DepartNo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("depart_no");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("emp_id");

                    b.Property<string>("EmpName")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("emp_name");

                    b.Property<string>("EmpNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("emp_no");

                    b.Property<double?>("Id")
                        .HasColumnType("float")
                        .HasColumnName("id");

                    b.Property<DateTime?>("InDate")
                        .HasColumnType("datetime")
                        .HasColumnName("in_date");

                    b.Property<string>("InitSiteid")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("init_siteid");

                    b.Property<string>("JobSituation")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("job_situation");

                    b.Property<DateTime?>("KeyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("key_date");

                    b.Property<DateTime?>("Lasteditdt")
                        .HasColumnType("datetime")
                        .HasColumnName("lasteditdt");

                    b.Property<DateTime?>("LevDate")
                        .HasColumnType("datetime")
                        .HasColumnName("lev_date");

                    b.Property<string>("Married")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("married");

                    b.Property<string>("Oldhome")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("oldhome");

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("photo");

                    b.Property<string>("Sex")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("sex");

                    b.Property<string>("Siteid")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("siteid");

                    b.Property<string>("StatusNo")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("status_no");

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("datetime")
                        .HasColumnName("transfer_date");

                    b.Property<string>("Urgtel")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("urgtel");

                    b.ToTable("chr_employee_tmp", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ChrEmployeeTransit", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("BgCode")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("bg_code");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasColumnName("birthday");

                    b.Property<string>("ClassNo")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("class_no");

                    b.Property<string>("Cos")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("cos");

                    b.Property<string>("DepartNo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("depart_no");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("emp_id");

                    b.Property<string>("EmpName")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("emp_name");

                    b.Property<string>("EmpNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("emp_no");

                    b.Property<string>("EmpType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("emp_type");

                    b.Property<string>("FactoryCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("factory_code");

                    b.Property<double?>("Id")
                        .HasColumnType("float")
                        .HasColumnName("id");

                    b.Property<DateTime?>("InDate")
                        .HasColumnType("datetime")
                        .HasColumnName("in_date");

                    b.Property<string>("InitSiteid")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("init_siteid");

                    b.Property<string>("JobCode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("job_code");

                    b.Property<string>("JobSituation")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("job_situation");

                    b.Property<DateTime?>("KeyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("key_date");

                    b.Property<DateTime?>("Lasteditdt")
                        .HasColumnType("datetime")
                        .HasColumnName("lasteditdt");

                    b.Property<DateTime?>("LevDate")
                        .HasColumnType("datetime")
                        .HasColumnName("lev_date");

                    b.Property<string>("Married")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("married");

                    b.Property<string>("Oldhome")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("oldhome");

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("photo");

                    b.Property<string>("Sex")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("sex");

                    b.Property<string>("Siteid")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("siteid");

                    b.Property<string>("StatusNo")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("status_no");

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("datetime")
                        .HasColumnName("transfer_date");

                    b.Property<string>("Urgtel")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("urgtel");

                    b.HasIndex(new[] { "EmpNo" }, "IX_Chr_employee_Transit_NO");

                    b.ToTable("Chr_employee_Transit", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ChrEmployeeUpdate", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("BgCode")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("bg_code");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasColumnName("birthday");

                    b.Property<string>("ClassNo")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("class_no");

                    b.Property<string>("Cos")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("cos");

                    b.Property<string>("DepartNo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("depart_no");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("emp_id");

                    b.Property<string>("EmpName")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("emp_name");

                    b.Property<string>("EmpNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("emp_no");

                    b.Property<double?>("Id")
                        .HasColumnType("float")
                        .HasColumnName("id");

                    b.Property<DateTime?>("InDate")
                        .HasColumnType("datetime")
                        .HasColumnName("in_date");

                    b.Property<string>("InitSiteid")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("init_siteid");

                    b.Property<string>("JobSituation")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("job_situation");

                    b.Property<DateTime?>("KeyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("key_date");

                    b.Property<DateTime?>("Lasteditdt")
                        .HasColumnType("datetime")
                        .HasColumnName("lasteditdt");

                    b.Property<DateTime?>("LevDate")
                        .HasColumnType("datetime")
                        .HasColumnName("lev_date");

                    b.Property<string>("Married")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("married");

                    b.Property<string>("Oldhome")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("oldhome");

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("photo");

                    b.Property<string>("Sex")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("sex");

                    b.Property<string>("Siteid")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("siteid");

                    b.Property<string>("StatusNo")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("status_no");

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("datetime")
                        .HasColumnName("transfer_date");

                    b.Property<string>("Urgtel")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("urgtel");

                    b.ToTable("Chr_EmployeeUpdate", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ChrEmployeeVv", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("address");

                    b.Property<string>("BgCode")
                        .HasMaxLength(164)
                        .IsUnicode(false)
                        .HasColumnType("varchar(164)")
                        .HasColumnName("bg_code");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasColumnName("birthday");

                    b.Property<string>("ClassNo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("class_no");

                    b.Property<string>("Cos")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("cos");

                    b.Property<string>("DepartNo")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("depart_no");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("emp_id");

                    b.Property<string>("EmpName")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("emp_name");

                    b.Property<string>("EmpNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("emp_no");

                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("InDate")
                        .HasColumnType("datetime")
                        .HasColumnName("in_date");

                    b.Property<string>("InitSiteId")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Init_SiteID");

                    b.Property<string>("JobSituation")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("job_situation");

                    b.Property<DateTime?>("KeyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("key_date");

                    b.Property<DateTime?>("Lasteditdt")
                        .HasColumnType("datetime")
                        .HasColumnName("lasteditdt");

                    b.Property<DateTime?>("LevDate")
                        .HasColumnType("datetime")
                        .HasColumnName("lev_date");

                    b.Property<string>("Married")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("married");

                    b.Property<string>("Oldhome")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("oldhome");

                    b.Property<string>("Photo")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("photo");

                    b.Property<string>("Sex")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("sex");

                    b.Property<string>("SiteId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("siteID");

                    b.Property<string>("StatusNo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("status_no");

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("datetime")
                        .HasColumnName("transfer_date");

                    b.Property<string>("Urgtel")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("urgtel");

                    b.ToTable((string)null);

                    b.ToView("chr_employee_vv", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ChrEmployeeVvc", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("BgCode")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("bg_code");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasColumnName("birthday");

                    b.Property<string>("ClassNo")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("class_no");

                    b.Property<string>("Cos")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("cos");

                    b.Property<string>("DepartNo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("depart_no");

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("emp_id");

                    b.Property<string>("EmpName")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("emp_name");

                    b.Property<string>("EmpNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("emp_no");

                    b.Property<double?>("Id")
                        .HasColumnType("float")
                        .HasColumnName("id");

                    b.Property<DateTime?>("InDate")
                        .HasColumnType("datetime")
                        .HasColumnName("in_date");

                    b.Property<string>("InitSiteid")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("init_siteid");

                    b.Property<string>("JobSituation")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("job_situation");

                    b.Property<DateTime?>("KeyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("key_date");

                    b.Property<DateTime?>("Lasteditdt")
                        .HasColumnType("datetime")
                        .HasColumnName("lasteditdt");

                    b.Property<DateTime?>("LevDate")
                        .HasColumnType("datetime")
                        .HasColumnName("lev_date");

                    b.Property<string>("Married")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("married");

                    b.Property<string>("Oldhome")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("oldhome");

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("photo");

                    b.Property<string>("Sex")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("sex");

                    b.Property<string>("Siteid")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("siteid");

                    b.Property<string>("StatusNo")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("status_no");

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("datetime")
                        .HasColumnName("transfer_date");

                    b.Property<string>("Urgtel")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("urgtel");

                    b.ToTable((string)null);

                    b.ToView("chr_employee_vvc", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ChrInFactoryImage", b =>
                {
                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("InFactoryId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("InFactoryID");

                    b.Property<string>("InFactoryName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("InFactoryNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("IsImage")
                        .HasColumnType("int");

                    b.Property<string>("Md5val")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("MD5Val");

                    b.Property<string>("Url")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.ToTable("Chr_InFactory_Image", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CivetIntentList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("AreaName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Bu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BU");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("NameSend")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Posision")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CivetIntentList", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CivetIntentListMail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("AreaName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Bu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BU");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("NameSend")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Posision")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CivetIntentListMail", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CivetListMail", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("AreaName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ListMail")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.ToTable("CivetListMail", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CivetSendMess", b =>
                {
                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<string>("FormType")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Idapp")
                        .HasColumnType("int")
                        .HasColumnName("IDApp");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<DateTime?>("TimeAdd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeSend")
                        .HasColumnType("datetime");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable("CivetSendMess", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Cmc812log", b =>
                {
                    b.Property<int>("Cmc812logId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CMC812logID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cmc812logId"));

                    b.Property<DateTime?>("Cmc812logCreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CMC812logCreateTime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Cmc812logMsg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CMC812logMsg");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IP");

                    b.Property<string>("Mac")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MAC");

                    b.HasKey("Cmc812logId");

                    b.ToTable("CMC812log", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Code", b =>
                {
                    b.Property<string>("CodeDesc")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("code_desc");

                    b.Property<string>("CodeGroup")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("code_group");

                    b.Property<string>("CodeId")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("code_id");

                    b.Property<string>("CodeStatus")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("code_status");

                    b.Property<string>("CodeType")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("code_type");

                    b.Property<string>("Lasteditby")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("lasteditby");

                    b.Property<DateTime?>("Lasteditdt")
                        .HasColumnType("datetime")
                        .HasColumnName("lasteditdt");

                    b.ToTable("code", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ColorTypeCard", b =>
                {
                    b.Property<int?>("ColorType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Idcard")
                        .HasColumnType("int")
                        .HasColumnName("IDCard");

                    b.Property<int?>("TypeCard")
                        .HasColumnType("int");

                    b.ToTable("ColorTypeCard", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("Acknowledgment")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CompanyAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CompanyCheckingFile")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CompanyPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ControlMsg")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ControlStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("ControlTag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("CooperationProjects")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<string>("File")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("FlowType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InureStartDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAbbreviation")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Responsible")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("CompanyId");

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CompanyControlHistory", b =>
                {
                    b.Property<int>("CompanyControlHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CompanyControlHistoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyControlHistoryId"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("ControlMsg")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("ControlTag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OperatTime")
                        .HasColumnType("datetime");

                    b.HasKey("CompanyControlHistoryId");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyControlHistory", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Construction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<int?>("Assent")
                        .HasColumnType("int");

                    b.Property<string>("AuditVendor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Can")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Can1")
                        .HasColumnType("int");

                    b.Property<int?>("Can2")
                        .HasColumnType("int");

                    b.Property<int?>("Can3")
                        .HasColumnType("int");

                    b.Property<int?>("Can4")
                        .HasColumnType("int");

                    b.Property<string>("Chemistry")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Condition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeffType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Ehsin")
                        .HasColumnType("int")
                        .HasColumnName("EHSIN");

                    b.Property<int?>("Ehsout")
                        .HasColumnType("int")
                        .HasColumnName("EHSOUT");

                    b.Property<string>("EmpNameApp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpNoApp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ExtTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FileBvmt")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FileBVMT");

                    b.Property<string>("FileUnit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FileVendor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ImageAtld")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ImageATLD");

                    b.Property<string>("ImageAudit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IsChe")
                        .HasColumnType("int");

                    b.Property<int?>("IsMoc")
                        .HasColumnType("int");

                    b.Property<string>("MemberAudit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Moc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameContrus")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NoAtld")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NoATLD");

                    b.Property<string>("NotesApp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Office")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PeoPleList")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Put1")
                        .HasColumnType("int");

                    b.Property<int?>("Put2")
                        .HasColumnType("int");

                    b.Property<int?>("Put3")
                        .HasColumnType("int");

                    b.Property<int?>("Put4")
                        .HasColumnType("int");

                    b.Property<string>("Special")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Special1")
                        .HasColumnType("int");

                    b.Property<int?>("Special2")
                        .HasColumnType("int");

                    b.Property<int?>("Special3")
                        .HasColumnType("int");

                    b.Property<int?>("Special4")
                        .HasColumnType("int");

                    b.Property<int?>("Special5")
                        .HasColumnType("int");

                    b.Property<int?>("Special6")
                        .HasColumnType("int");

                    b.Property<int?>("Special7")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeApplication")
                        .HasColumnType("datetime");

                    b.Property<int?>("TimeOut")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("TypeCondi")
                        .HasColumnType("int");

                    b.Property<string>("UnitApplication")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Construction", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ContolstatusInformation", b =>
                {
                    b.Property<int?>("Contolstatus")
                        .HasColumnType("int")
                        .HasColumnName("contolstatus");

                    b.Property<string>("Information")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("information");

                    b.ToTable("contolstatus_information", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ControlCar", b =>
                {
                    b.Property<int>("ControlCarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ControlCarID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ControlCarId"));

                    b.Property<string>("CarNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("ControlName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Reason")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("ControlCarId");

                    b.ToTable("ControlCar", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ControlCarN", b =>
                {
                    b.Property<int>("ControlCarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ControlCarID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ControlCarId"));

                    b.Property<string>("CarNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("ControlName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Reason")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("ControlCarId");

                    b.ToTable("ControlCarN", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ControlPeopleBackup", b =>
                {
                    b.Property<int>("ControlPeopleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ControlPeopleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ControlPeopleId"));

                    b.Property<DateTime?>("ComfromTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ControlName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEffective")
                        .HasColumnType("bit");

                    b.Property<string>("Reason")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("SourceTag")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Source_tag");

                    b.HasKey("ControlPeopleId")
                        .HasName("PK__ControlP__6F1719A0E93D13E2");

                    b.ToTable("ControlPeopleBackup", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ControlPeopleN", b =>
                {
                    b.Property<int>("ControlPeopleNid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ControlPeopleNID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ControlPeopleNid"));

                    b.Property<string>("ControlName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEffective")
                        .HasColumnType("bit");

                    b.Property<string>("Reason")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("ControlPeopleNid");

                    b.ToTable("ControlPeopleN", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ControlPerson", b =>
                {
                    b.Property<int>("ControlPeopleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ControlPeopleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ControlPeopleId"));

                    b.Property<DateTime?>("ComfromTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ControlName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEffective")
                        .HasColumnType("bit");

                    b.Property<string>("Reason")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("SourceTag")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Source_tag")
                        .HasDefaultValueSql("('CertificateDB')");

                    b.HasKey("ControlPeopleId")
                        .HasName("PK_CONTROLPEOPLE");

                    b.HasIndex(new[] { "ControlPeopleId" }, "NIDX_CONTROLPEOPLEID01");

                    b.HasIndex(new[] { "CredentialsNumber" }, "NIDX_CREDENTIALSNUMBER01");

                    b.ToTable("ControlPeople");
                });

            modelBuilder.Entity("Data.Migration.Models.ControlRecord", b =>
                {
                    b.Property<int>("ControlRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ControlRecordID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ControlRecordId"));

                    b.Property<string>("Action")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ControlMsg")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("ControlRecordId");

                    b.ToTable("ControlRecord", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ContrucProc", b =>
                {
                    b.Property<int?>("Act")
                        .HasColumnType("int");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IP");

                    b.Property<int?>("Leavel")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int?>("Over")
                        .HasColumnType("int");

                    b.Property<int>("ProcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProcID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcId"));

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<DateTime?>("WorkTime")
                        .HasColumnType("datetime");

                    b.ToTable("ContrucProc", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ContrucStatus", b =>
                {
                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Leavel")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Over")
                        .HasColumnType("int");

                    b.Property<string>("Para")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("WorkDate")
                        .HasColumnType("datetime");

                    b.ToTable("ContrucStatus", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CostSign", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int?>("Leavel")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.ToTable("CostSign", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CredentialContinu", b =>
                {
                    b.Property<int>("CredentialContinuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CredentialContinuID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CredentialContinuId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<string>("Annex")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<DateTime?>("ApplyDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CredentialId")
                        .HasColumnType("int")
                        .HasColumnName("CredentialID");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("CredentialContinuId");

                    b.ToTable("CredentialContinu", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CredentialDelayNew", b =>
                {
                    b.Property<string>("Applicant")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("ContactDeparmentId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ContactDeparmentID");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactPersonId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ContactPersonID");

                    b.Property<int?>("ContactPhoneNum")
                        .HasColumnType("int");

                    b.Property<string>("DocforCredentialDelay")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("EndTimeNew")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("OldNewTable")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable("Credential_DelayNew", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CredentialDelayNewSigStatus", b =>
                {
                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<int>("CredentialDelayNewId")
                        .HasColumnType("int")
                        .HasColumnName("CredentialDelayNewID");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("LevelSigne")
                        .HasColumnType("float");

                    b.Property<string>("Meno")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Paracode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("SignedStDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SignerId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SignerID");

                    b.Property<string>("SignerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.ToTable("CredentialDelayNew_SigStatus", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CredentialDelaynewListCardNum", b =>
                {
                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("AreaCard")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CredentialdelayNewId")
                        .HasColumnType("int")
                        .HasColumnName("CredentialdelayNewID");

                    b.Property<DateTime?>("EndTimeNew")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.ToTable("CredentialDelaynew_ListCardNum", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CredentialDelaynewListCardNumNew", b =>
                {
                    b.Property<DateTime?>("AdminCreateCardTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AdminSignTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("AreaCard")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("AreaCardNew")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ColorCard")
                        .HasColumnType("int");

                    b.Property<string>("CompanyNewName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyOldName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CredentialdelayNewId")
                        .HasColumnType("int")
                        .HasColumnName("CredentialdelayNewID");

                    b.Property<DateTime?>("EndTimeNew")
                        .HasColumnType("datetime");

                    b.Property<string>("FileAttack")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("FormType")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageFile")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NotesForSign")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReceivedName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ReceivedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Signer")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TableType")
                        .HasColumnType("int");

                    b.ToTable("CredentialDelaynew_ListCardNum_New", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CustCardRecord", b =>
                {
                    b.Property<string>("Applyname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("applyname");

                    b.Property<string>("Areaname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("areaname");

                    b.Property<string>("Cardno")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cardno");

                    b.Property<string>("Cardstatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cardstatus");

                    b.Property<DateTime>("Datatime")
                        .HasColumnType("datetime")
                        .HasColumnName("datatime");

                    b.Property<string>("Ecardno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ecardno");

                    b.Property<string>("Fullname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fullname");

                    b.Property<string>("Machinename")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("machinename");

                    b.Property<string>("Reason")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("reason");

                    b.Property<string>("Type")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("type");

                    b.ToTable("CustCardRecord", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CustList", b =>
                {
                    b.Property<int>("CustListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustListID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustListId"));

                    b.Property<string>("DiscussMatters")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<bool?>("IsFristVisit")
                        .HasColumnType("bit");

                    b.Property<string>("Level")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Position")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("ReceiverID");

                    b.Property<string>("ReceiverNo")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .IsFixedLength();

                    b.Property<DateTime?>("ReceiverTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Relationship")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("RemandTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("ReturnId")
                        .HasColumnType("int")
                        .HasColumnName("ReturnID");

                    b.Property<string>("ReturnReason")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ReturnTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit");

                    b.Property<int?>("VisitCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitCustID");

                    b.Property<string>("VisitImage")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("VisitNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("VisitTime")
                        .HasColumnType("datetime");

                    b.HasKey("CustListId");

                    b.ToTable("CustList", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CustNotList", b =>
                {
                    b.Property<int>("CustNotListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustNotListID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustNotListId"));

                    b.Property<string>("DiscussItem")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Position")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("ReceiverID");

                    b.Property<string>("ReceiverNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ReceiverTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("RemandTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("ReturnId")
                        .HasColumnType("int")
                        .HasColumnName("ReturnID");

                    b.Property<string>("ReturnReason")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ReturnTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit");

                    b.Property<string>("Specialty")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("VisitImage")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("VisitNotCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitNotCustID");

                    b.Property<string>("VisitNumber")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("CustNotListId");

                    b.ToTable("CustNotList", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CustTravel", b =>
                {
                    b.Property<int>("CustTravelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustTravelID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustTravelId"));

                    b.Property<DateTime?>("ArrivalTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Flight")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GoBackFlight")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("LeaveTime")
                        .HasColumnType("datetime");

                    b.Property<string>("StartPlace")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("VisitCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitCustID");

                    b.HasKey("CustTravelId");

                    b.ToTable("CustTravel", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CustTravelDetail", b =>
                {
                    b.Property<int>("CustTravelDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustTravelDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustTravelDetailId"));

                    b.Property<int?>("CustTravelId")
                        .HasColumnType("int")
                        .HasColumnName("CustTravelID");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("TravelAim")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("CustTravelDetailId");

                    b.HasIndex("CustTravelId");

                    b.ToTable("CustTravelDetail", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CustWorCredentsLastInserted", b =>
                {
                    b.Property<int?>("CustWorCredentsLastInsertId")
                        .HasColumnType("int")
                        .HasColumnName("CustWorCredentsLastInsertID");

                    b.Property<int?>("IdlastInsert")
                        .HasColumnType("int")
                        .HasColumnName("IDLastInsert");

                    b.ToTable("CustWorCredentsLastInserted", "faceid");
                });

            modelBuilder.Entity("Data.Migration.Models.CustWorkCredential", b =>
                {
                    b.Property<int>("CustWorkCredentialsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustWorkCredentialsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustWorkCredentialsId"));

                    b.Property<string>("AreaCard")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<int>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("CensusAddress")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("ContactUnit")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactUnitExtension")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ContactUnitPerson")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ContactUnitPhone")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("ControlStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmergencyContact")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmergencyContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<string>("File")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InureStartDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameCn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NameCN");

                    b.Property<string>("NowAddress")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit");

                    b.Property<string>("Signoff")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Signoff2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("WorkCaption")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WorkType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CustWorkCredentialsId")
                        .HasName("PK_CUSTWORKCREDENTIALS");

                    b.ToTable("CustWorkCredentials");
                });

            modelBuilder.Entity("Data.Migration.Models.CustWorkCredentialsDelay", b =>
                {
                    b.Property<string>("CompanyName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ContactPersonEmployee")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("ContactUnitExtension")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("ContactUnitPersonBg")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("ContactUnitPersonBG");

                    b.Property<string>("ContactUnitPersonName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("ContactUnitPersonphone")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("CustWorkCredentialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustWorkCredentialID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustWorkCredentialId"));

                    b.Property<DateTime?>("DelDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmergencyContact")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Emergencyphone")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime?>("IndureEndate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Nation")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("nation");

                    b.Property<string>("NewAddress")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("OnWorkFile")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Phone")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("Pid")
                        .HasColumnType("int")
                        .HasColumnName("PID");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("Sex")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.Property<string>("VeNumber")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("WorkCaption")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("Zid")
                        .HasColumnType("int")
                        .HasColumnName("ZID");

                    b.ToTable("CustWorkCredentialsDelay", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CustWorkHistory", b =>
                {
                    b.Property<string>("AreaCard")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("CensusAddress")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("ContactUnit")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactUnitExtension")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactUnitPerson")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactUnitPhone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ControlStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CustWorkCredentialsId")
                        .HasColumnType("int")
                        .HasColumnName("CustWorkCredentialsID");

                    b.Property<string>("EmergencyContact")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmergencyContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<string>("File")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InureStartDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NameCn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NameCN");

                    b.Property<string>("NowAddress")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit");

                    b.Property<string>("Signoff")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Signoff2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("WorkCaption")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WorkType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("CustWorkHistory", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CustWorkInFactory", b =>
                {
                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("CreateBuname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateBUName");

                    b.Property<string>("CreateEmpName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreateEmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("EndValidTimeFirst")
                        .HasColumnType("date");

                    b.Property<string>("ExcTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FileExcel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable("CustWorkInFactory", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CustWorkInFactoryAdminProc", b =>
                {
                    b.Property<int?>("CustInfacPersonId")
                        .HasColumnType("int")
                        .HasColumnName("CustInfacPersonID");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Leavel")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProcAdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProcAdminID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcAdminId"));

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("WorkDate")
                        .HasColumnType("datetime");

                    b.ToTable("CustWorkInFactoryAdmin_Proc", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CustWorkInFactoryPerSon", b =>
                {
                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("AreaCard")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<int?>("ComanyId")
                        .HasColumnType("int")
                        .HasColumnName("ComanyID");

                    b.Property<int?>("CustWorkInFactoryId")
                        .HasColumnType("int")
                        .HasColumnName("CustWorkInFactoryID");

                    b.Property<DateTime?>("EndValidDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FileAttach")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePeople")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int?>("IsJob")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength();

                    b.Property<string>("NameAbeviation")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("NameCn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NameCN");

                    b.Property<string>("NameVn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NameVN");

                    b.Property<int?>("NoExcel")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PeoPleId")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("PeoPleID");

                    b.Property<string>("Receipt")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("StartValidDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.Property<int?>("WorkTypeId")
                        .HasColumnType("int")
                        .HasColumnName("WorkTypeID");

                    b.ToTable("CustWorkInFactory_PerSon", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CustWorkInFactoryProc", b =>
                {
                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Leavel")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ParaCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ProcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProcID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcId"));

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<DateTime?>("WorkDate")
                        .HasColumnType("datetime");

                    b.ToTable("CustWorkInFactoryProc", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CustWorkInFactoryStatus", b =>
                {
                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Leavel")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ParaCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<DateTime?>("WorkDate")
                        .HasColumnType("datetime");

                    b.ToTable("CustWorkInFactoryStatus", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CustWorkValid", b =>
                {
                    b.Property<string>("AreaCard")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<int?>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CardID")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("CensusAddress")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("ContactUnit")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactUnitExtension")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactUnitPerson")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactUnitPhone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ControlStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CustWorkCredentialsId")
                        .HasColumnType("int")
                        .HasColumnName("CustWorkCredentialsID");

                    b.Property<string>("EmergencyContact")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmergencyContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<string>("File")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InureStartDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NameCn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NameCN");

                    b.Property<string>("NowAddress")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit");

                    b.Property<string>("Signoff")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Signoff2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("WorkCaption")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WorkType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("CustWorkValid", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CustWorkValidNew", b =>
                {
                    b.Property<string>("AreaCard")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("CensusAddress")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("ContactUnit")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactUnitExtension")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactUnitPerson")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactUnitPhone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ControlStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CustWorkCredentialsId")
                        .HasColumnType("int")
                        .HasColumnName("CustWorkCredentialsID");

                    b.Property<string>("EmergencyContact")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmergencyContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<string>("File")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InureStartDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NowAddress")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit");

                    b.Property<string>("Signoff")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Signoff2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("WorkCaption")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WorkType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("CustWorkValidNew", "faceid");
                });

            modelBuilder.Entity("Data.Migration.Models.DboChrEmployee2", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("address");

                    b.Property<string>("BgCode")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("bg_code");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime")
                        .HasColumnName("birthday");

                    b.Property<string>("ClassNo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("class_no")
                        .IsFixedLength();

                    b.Property<string>("Cos")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("cos")
                        .IsFixedLength();

                    b.Property<string>("EmpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("emp_id")
                        .IsFixedLength();

                    b.Property<string>("EmpName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("emp_name");

                    b.Property<string>("EmpNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("emp_no");

                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("InDate")
                        .HasColumnType("datetime")
                        .HasColumnName("in_date");

                    b.Property<string>("InitSiteId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("Init_SiteID")
                        .IsFixedLength();

                    b.Property<string>("JobSituation")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("job_situation")
                        .IsFixedLength();

                    b.Property<DateTime?>("KeyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("key_date");

                    b.Property<DateTime?>("Lasteditdt")
                        .HasColumnType("datetime")
                        .HasColumnName("lasteditdt");

                    b.Property<DateTime?>("LevDate")
                        .HasColumnType("datetime")
                        .HasColumnName("lev_date");

                    b.Property<string>("Married")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("married")
                        .IsFixedLength();

                    b.Property<string>("Oldhome")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("oldhome");

                    b.Property<string>("Photo")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("photo");

                    b.Property<string>("Sex")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("sex")
                        .IsFixedLength();

                    b.Property<string>("SiteId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("siteID")
                        .IsFixedLength();

                    b.Property<string>("StatusNo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("status_no")
                        .IsFixedLength();

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("datetime")
                        .HasColumnName("transfer_date");

                    b.Property<string>("Urgtel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("urgtel");

                    b.ToTable("dbo.Chr_employee2", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DealType", b =>
                {
                    b.Property<int>("DealTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DealTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DealTypeId"));

                    b.Property<string>("DealType1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DealType");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Meno")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("DealTypeId");

                    b.ToTable("DealType", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DefaultCardInfo", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.ToTable("DefaultCardInfo", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("Information")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DepartmentAuditPerson", b =>
                {
                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<int>("DepartmentAuditId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentAuditID");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("DepartmentAuditPerson", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DietAttention", b =>
                {
                    b.Property<int>("DietAttentionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DietAttentionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DietAttentionId"));

                    b.Property<string>("Eat")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Other")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Preferences")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("VegetarianFoodNum")
                        .HasColumnType("int");

                    b.Property<int?>("VisitCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitCustID");

                    b.HasKey("DietAttentionId");

                    b.ToTable("DietAttention", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DiffTimeLess", b =>
                {
                    b.Property<int?>("DiffTime")
                        .HasColumnType("int");

                    b.Property<string>("Extention")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiveCards")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("ReceiverID");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("DiffTimeLess", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DiffTimeMore", b =>
                {
                    b.Property<int?>("DiffTime")
                        .HasColumnType("int");

                    b.Property<string>("Extention")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiveCards")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("ReceiverID");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("VisitNumber")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.ToTable((string)null);

                    b.ToView("DiffTimeMore", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DimissionUserBeforeLoding", b =>
                {
                    b.Property<int>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserBeforeLodingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserBeforeLodingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserBeforeLodingId"));

                    b.ToTable("DimissionUserBeforeLoding", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DispatchRecord", b =>
                {
                    b.Property<int>("DispatchRecordsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DispatchRecordsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DispatchRecordsId"));

                    b.Property<int?>("BackMileage")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BackTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Destination")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Dispatcher")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LogDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Meno")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("OutMileage")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OutTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("SpareCarId")
                        .HasColumnType("int")
                        .HasColumnName("SpareCarID");

                    b.Property<string>("UsePeople")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UseReason")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("DispatchRecordsId")
                        .HasName("PK_DISPATCHRECORDS");

                    b.HasIndex("SpareCarId");

                    b.ToTable("DispatchRecords");
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManage", b =>
                {
                    b.Property<int>("DoorPowerManageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DoorPowerManageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoorPowerManageId"));

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Bu")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Dept")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("EndTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("EnglishPicture")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("File")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsFind")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsOverTime")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("MailSendDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("OldApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("Old_Application_ID");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Picture")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Position")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("RePwdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("WhetherJob")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("DoorPowerManageId");

                    b.ToTable("DoorPowerManage", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageApplication", b =>
                {
                    b.Property<int>("DoorPowerManageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DoorPowerManageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoorPowerManageId"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    b.Property<string>("BackMeno")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Bu")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Dept")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EnglishPicture")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("File")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsFind")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Picture")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Position")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("DoorPowerManageId")
                        .HasName("PK_DOORPOWERMANAGEAPPLICATION");

                    b.HasIndex("ApplicationId");

                    b.ToTable("DoorPowerManageApplication", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageArea", b =>
                {
                    b.Property<int?>("AreaRegionId")
                        .HasColumnType("int")
                        .HasColumnName("AreaRegionID");

                    b.Property<int?>("DoorPowerManageId")
                        .HasColumnType("int")
                        .HasColumnName("DoorPowerManageID");

                    b.HasIndex("DoorPowerManageId");

                    b.ToTable("DoorPowerManageArea", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageAreaApplication", b =>
                {
                    b.Property<int?>("AreaRegionId")
                        .HasColumnType("int")
                        .HasColumnName("AreaRegionID");

                    b.Property<int?>("DoorPowerManageId")
                        .HasColumnType("int")
                        .HasColumnName("DoorPowerManageID");

                    b.HasIndex("DoorPowerManageId");

                    b.ToTable("DoorPowerManageAreaApplication", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageAreaVer", b =>
                {
                    b.Property<int?>("AreaRegionId")
                        .HasColumnType("int")
                        .HasColumnName("AreaRegionID");

                    b.Property<int?>("DoorPowerManageVerId")
                        .HasColumnType("int")
                        .HasColumnName("DoorPowerManageVerID");

                    b.HasIndex("DoorPowerManageVerId");

                    b.ToTable("DoorPowerManageAreaVer", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageBgsetup", b =>
                {
                    b.Property<int>("BgsetupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BGSetupID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BgsetupId"));

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreateUserID");

                    b.Property<DateTime?>("DelDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DelUserId")
                        .HasColumnType("int")
                        .HasColumnName("DelUserID");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("BgsetupId");

                    b.ToTable("DoorPowerManageBGSetup", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageBgsetupItem", b =>
                {
                    b.Property<int>("BgsetupItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BGSetupItemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BgsetupItemId"));

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreateUserID");

                    b.Property<DateTime?>("DelDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DelUserId")
                        .HasColumnType("int")
                        .HasColumnName("DelUserID");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyUserId")
                        .HasColumnType("int")
                        .HasColumnName("ModifyUserID");

                    b.Property<int?>("PowerAdminId")
                        .HasColumnType("int")
                        .HasColumnName("PowerAdminID");

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BgsetupItemId");

                    b.ToTable("DoorPowerManageBGSetupItem", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageBgsignSetup", b =>
                {
                    b.Property<int>("BgsignSetupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BGSignSetupID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BgsignSetupId"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FirstSignDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstSignMeno")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("FirstSignUserId")
                        .HasColumnType("int")
                        .HasColumnName("FirstSignUserID");

                    b.Property<int?>("FirstStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("IsUse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("BgsignSetupId");

                    b.ToTable("DoorPowerManageBGSignSetup", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageBgsignSetupItem", b =>
                {
                    b.Property<int>("BgsignSetupItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BGSignSetupItemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BgsignSetupItemId"));

                    b.Property<int?>("BgsignSetupId")
                        .HasColumnType("int")
                        .HasColumnName("BGSignSetupID");

                    b.Property<bool?>("IsSign")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("SignAdminId")
                        .HasColumnType("int")
                        .HasColumnName("SignAdminID");

                    b.Property<DateTime?>("SignDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SignMeno")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("SignOrderId")
                        .HasColumnType("int")
                        .HasColumnName("SignOrderID");

                    b.Property<string>("SignRole")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SignStatusId")
                        .HasColumnType("int")
                        .HasColumnName("SignStatusID");

                    b.HasKey("BgsignSetupItemId");

                    b.HasIndex("BgsignSetupId");

                    b.ToTable("DoorPowerManageBGSignSetupItem", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageModify", b =>
                {
                    b.Property<int>("DoorPowerManageModifyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DoorPowerManageModifyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoorPowerManageModifyId"));

                    b.Property<int>("ActionAdminId")
                        .HasColumnType("int")
                        .HasColumnName("ActionAdminID");

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ActionMeno")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("DoorPowerManageId")
                        .HasColumnType("int")
                        .HasColumnName("DoorPowerManageID");

                    b.Property<string>("Files")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IP");

                    b.Property<string>("Mac")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("DoorPowerManageModifyId");

                    b.ToTable("DoorPowerManageModify", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageModifyList", b =>
                {
                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("AreaRegionId")
                        .HasColumnType("int")
                        .HasColumnName("AreaRegionID");

                    b.Property<int?>("DoorPowerManageId")
                        .HasColumnType("int")
                        .HasColumnName("DoorPowerManageID");

                    b.Property<int>("DoorPowerManageModifyId")
                        .HasColumnType("int")
                        .HasColumnName("DoorPowerManageModifyID");

                    b.Property<int?>("JurisdictionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("JurisdictionTypeID");

                    b.Property<string>("Meno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasIndex("DoorPowerManageModifyId");

                    b.ToTable("DoorPowerManageModifyList", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageType", b =>
                {
                    b.Property<int>("DoorPowerManageTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DoorPowerManageTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoorPowerManageTypeId"));

                    b.Property<int?>("DoorPowerManageId")
                        .HasColumnType("int")
                        .HasColumnName("DoorPowerManageID");

                    b.Property<int?>("JurisdictionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("JurisdictionTypeID");

                    b.Property<string>("Meno")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.HasKey("DoorPowerManageTypeId");

                    b.HasIndex("DoorPowerManageId");

                    b.ToTable("DoorPowerManageType", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageTypeApplication", b =>
                {
                    b.Property<int>("DoorPowerManageTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DoorPowerManageTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoorPowerManageTypeId"));

                    b.Property<int?>("DoorPowerManageId")
                        .HasColumnType("int")
                        .HasColumnName("DoorPowerManageID");

                    b.Property<int?>("JurisdictionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("JurisdictionTypeID");

                    b.Property<string>("Meno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("DoorPowerManageTypeId")
                        .HasName("PK_DOORPOWERMANAGETYPEAPPLICAT");

                    b.HasIndex("DoorPowerManageId");

                    b.ToTable("DoorPowerManageTypeApplication", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageTypeVer", b =>
                {
                    b.Property<int>("DoorPowerManageTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DoorPowerManageTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoorPowerManageTypeId"));

                    b.Property<int?>("DoorPowerManageVerId")
                        .HasColumnType("int")
                        .HasColumnName("DoorPowerManageVerID");

                    b.Property<int?>("JurisdictionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("JurisdictionTypeID");

                    b.Property<string>("Meno")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("DoorPowerManageTypeId")
                        .HasName("PK_DOORPOWERMANAGETYPEVER");

                    b.HasIndex("DoorPowerManageVerId");

                    b.ToTable("DoorPowerManageTypeVer", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageVer", b =>
                {
                    b.Property<int>("DoorPowerManageVerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DoorPowerManageVerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoorPowerManageVerId"));

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Bu")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeleteAdminId")
                        .HasColumnType("int")
                        .HasColumnName("DeleteAdminID");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteReason")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Dept")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("DoorPowerManageId")
                        .HasColumnType("int")
                        .HasColumnName("DoorPowerManageID");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EnglishPicture")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("File")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FilesForDelete")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsFind")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("OldApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("Old_Application_ID");

                    b.Property<string>("Picture")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Position")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("WhetherJob")
                        .HasColumnType("bit");

                    b.HasKey("DoorPowerManageVerId");

                    b.ToTable("DoorPowerManageVer", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DoorReplace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpNameReplace")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpNoReplace")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Extel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ExtelReplace")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Mobi")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MobiReplace")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NotesReplace")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DoorReplace", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DoorReplaceBg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpNameReplace")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpNoReplace")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NotesReplace")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DoorReplaceBG", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DrawAllList", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("ArrangeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ArrangeNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ArrangeTelephone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Caption")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("CarBrand")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CarType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("ContactUnit")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ContractEndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ControlStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CredentialsType")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("DriverEmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DriverName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmergencyContact")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmergencyContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("Expr1")
                        .HasColumnType("bit");

                    b.Property<int?>("Expr2")
                        .HasColumnType("int");

                    b.Property<string>("Ext")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("File")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InureStartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("IsBeChecked")
                        .HasColumnType("int");

                    b.Property<bool>("IsFind")
                        .HasColumnType("bit");

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<string>("LicenseNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("LotNumberDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OrtherContact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PhotoId")
                        .HasColumnType("int")
                        .HasColumnName("PhotoID");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Signoff")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Signoff2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("VehiclePeriodId")
                        .HasColumnType("int")
                        .HasColumnName("VehiclePeriodID");

                    b.Property<string>("VehiclePeriodNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("VehiclePermitId")
                        .HasColumnType("int")
                        .HasColumnName("VehiclePermitID");

                    b.Property<string>("WorkType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("DrawAllList", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Driver", b =>
                {
                    b.Property<string>("DriverGuid")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("DriverGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CredentialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DriverID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverId"));

                    b.Property<string>("EmployeeCardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PeopleType")
                        .HasColumnType("int");

                    b.HasKey("DriverGuid");

                    b.ToTable("Driver", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DriverCompanyMatch", b =>
                {
                    b.Property<string>("DriverCompanyMatchGuid")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("DriverCompanyMatchGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DriverCompanyMatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DriverCompanyMatchID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverCompanyMatchId"));

                    b.Property<int?>("DriverId")
                        .HasColumnType("int")
                        .HasColumnName("DriverID");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("MatchDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("DriverCompanyMatchGuid");

                    b.ToTable("DriverCompanyMatch", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.DriverVehicleMatch", b =>
                {
                    b.Property<string>("VehicleDriverMatchGuid")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("VehicleDriverMatchGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("DeleteMeno")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DriverId")
                        .HasColumnType("int")
                        .HasColumnName("DriverID");

                    b.Property<int>("DriverVehicleMatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DriverVehicleMatchID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverVehicleMatchId"));

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("MatchDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("VehiclePermitId")
                        .HasColumnType("int")
                        .HasColumnName("VehiclePermitID");

                    b.HasKey("VehicleDriverMatchGuid");

                    b.ToTable("DriverVehicleMatch", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.EconConfig", b =>
                {
                    b.Property<int>("EconConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EconConfigID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EconConfigId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<int>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("EconConfigId");

                    b.ToTable("EconConfig", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.EhsSign", b =>
                {
                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNameV")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int?>("Leave")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.ToTable("EhsSign", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ElectricUse", b =>
                {
                    b.Property<string>("ActionMember")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Af1")
                        .HasColumnType("int")
                        .HasColumnName("AF1");

                    b.Property<int?>("Af2")
                        .HasColumnType("int")
                        .HasColumnName("AF2");

                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<int?>("Assent")
                        .HasColumnType("int");

                    b.Property<string>("Atld3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ATLD3");

                    b.Property<int?>("Bf1")
                        .HasColumnType("int")
                        .HasColumnName("BF1");

                    b.Property<int?>("Bf2")
                        .HasColumnType("int")
                        .HasColumnName("BF2");

                    b.Property<int?>("Bf3")
                        .HasColumnType("int")
                        .HasColumnName("BF3");

                    b.Property<int?>("Bf4")
                        .HasColumnType("int")
                        .HasColumnName("BF4");

                    b.Property<int?>("Bf5")
                        .HasColumnType("int")
                        .HasColumnName("BF5");

                    b.Property<int?>("Bf6")
                        .HasColumnType("int")
                        .HasColumnName("BF6");

                    b.Property<int?>("Bf7")
                        .HasColumnType("int")
                        .HasColumnName("BF7");

                    b.Property<string>("ContentAction")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Defer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ElecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ElecID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ElecId"));

                    b.Property<string>("EmpNameApp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNoApp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ExtTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FacAudit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileClother")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FileDevices")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FileFac")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FileMember")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FileVendor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("In1")
                        .HasColumnType("int")
                        .HasColumnName("IN1");

                    b.Property<int?>("In2")
                        .HasColumnType("int")
                        .HasColumnName("IN2");

                    b.Property<int?>("In3")
                        .HasColumnType("int")
                        .HasColumnName("IN3");

                    b.Property<int?>("In4")
                        .HasColumnType("int")
                        .HasColumnName("IN4");

                    b.Property<int?>("In5")
                        .HasColumnType("int")
                        .HasColumnName("IN5");

                    b.Property<int?>("In6")
                        .HasColumnType("int")
                        .HasColumnName("IN6");

                    b.Property<string>("NameConstruc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameVendor")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NotesApp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Office")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Pec")
                        .HasColumnType("int");

                    b.Property<int?>("Spe1")
                        .HasColumnType("int");

                    b.Property<int?>("Spe2")
                        .HasColumnType("int");

                    b.Property<int?>("Spe3")
                        .HasColumnType("int");

                    b.Property<int?>("Spe4")
                        .HasColumnType("int");

                    b.Property<int?>("Spe5")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeAplication")
                        .HasColumnType("datetime");

                    b.Property<string>("UnitApplication")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VendorAudit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("ElectricUse", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.EnviEnclosedSpace", b =>
                {
                    b.Property<string>("ActionPossition")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Applicant")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("Assent")
                        .HasColumnType("int");

                    b.Property<int?>("ContructionId")
                        .HasColumnType("int")
                        .HasColumnName("ContructionID");

                    b.Property<string>("ContructorName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DepartApplicant")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("EhsSign")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("FileClother")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FileDevices")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FileUnit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FileUploadMccatldn2gsnt")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FileUpload_Mccatldn2gsnt");

                    b.Property<string>("FileUploadMccgstc1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FileUpload_Mccgstc1");

                    b.Property<string>("FileUploadMccgstc2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FileUpload_Mccgstc2");

                    b.Property<string>("FileUploadNvgsdv")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FileUpload_Nvgsdv");

                    b.Property<string>("FileUploadNvgsnt")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FileUpload_Nvgsnt");

                    b.Property<string>("FileVendor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Hangmuctn1")
                        .HasColumnType("int");

                    b.Property<int?>("Hangmuctn2")
                        .HasColumnType("int");

                    b.Property<int?>("Hangmuctn3")
                        .HasColumnType("int");

                    b.Property<int?>("Hangmuctn4")
                        .HasColumnType("int");

                    b.Property<int?>("Hangmuctn5")
                        .HasColumnType("int");

                    b.Property<int?>("Hangmuctn6")
                        .HasColumnType("int");

                    b.Property<int?>("Hangmuctn7")
                        .HasColumnType("int");

                    b.Property<int?>("Hangmuctn8")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Ketluan")
                        .HasColumnType("int");

                    b.Property<string>("Mccatldn2gsnt")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Mccgstc1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Mccgstc2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NameNvgsnt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ndthct")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NongdoCh4")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NongdoCH4");

                    b.Property<string>("NongdoCo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NongdoCO");

                    b.Property<string>("NongdoH2s")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NongdoH2S");

                    b.Property<string>("NongdoO2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nvgsdvx")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nvtntcnt")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Quanche")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("Sautn1")
                        .HasColumnType("int");

                    b.Property<int?>("Sautn2")
                        .HasColumnType("int");

                    b.Property<int?>("Sautn3")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Trongtn1")
                        .HasColumnType("int");

                    b.Property<int?>("Trongtn10")
                        .HasColumnType("int");

                    b.Property<int?>("Trongtn11")
                        .HasColumnType("int");

                    b.Property<int?>("Trongtn2")
                        .HasColumnType("int");

                    b.Property<int?>("Trongtn3")
                        .HasColumnType("int");

                    b.Property<int?>("Trongtn4")
                        .HasColumnType("int");

                    b.Property<int?>("Trongtn5")
                        .HasColumnType("int");

                    b.Property<int?>("Trongtn6")
                        .HasColumnType("int");

                    b.Property<int?>("Trongtn7")
                        .HasColumnType("int");

                    b.Property<int?>("Trongtn8")
                        .HasColumnType("int");

                    b.Property<int?>("Trongtn9")
                        .HasColumnType("int");

                    b.Property<int?>("Truoctn1")
                        .HasColumnType("int");

                    b.Property<int?>("Truoctn2")
                        .HasColumnType("int");

                    b.Property<int?>("Truoctn3")
                        .HasColumnType("int");

                    b.Property<string>("Vttnct")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToTable("Envi_EnclosedSpace", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.EnviHighAction", b =>
                {
                    b.Property<string>("Anhmccatld")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Anhmccgstc1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Anhmccgstc2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Anhnvgscnt")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Anhnvgsdvx")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Applicant")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("Assent")
                        .HasColumnType("int");

                    b.Property<string>("Dvxin")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("EhsSign")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Endtime")
                        .HasColumnType("datetime");

                    b.Property<string>("FileClother")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FileDevices")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FileUnit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Khac")
                        .HasColumnType("int");

                    b.Property<int?>("Lapdatthietbi")
                        .HasColumnType("int");

                    b.Property<string>("Maccantoanld")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Machungchigsthicong1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Machungchigsthicong2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Madonthicong")
                        .HasColumnType("int");

                    b.Property<string>("Nhanviengscuanhathau")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nhanviengsdvx")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nhanvientntcnhathau")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Noidungtnct")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Quanche")
                        .HasColumnType("int");

                    b.Property<int?>("Sautn1")
                        .HasColumnType("int");

                    b.Property<int?>("Sautn2")
                        .HasColumnType("int");

                    b.Property<int?>("Sonba")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Starttime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Suachuathietbi")
                        .HasColumnType("int");

                    b.Property<string>("Tencongtrinh")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Tennhathau")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Thaydoiketcauxuong")
                        .HasColumnType("int");

                    b.Property<int?>("Tieuchuan1")
                        .HasColumnType("int");

                    b.Property<int?>("Tieuchuan2")
                        .HasColumnType("int");

                    b.Property<int?>("Tieuchuan3")
                        .HasColumnType("int");

                    b.Property<int?>("Tieuchuan4")
                        .HasColumnType("int");

                    b.Property<int?>("Tieuchuan5")
                        .HasColumnType("int");

                    b.Property<int?>("Tieuchuan6")
                        .HasColumnType("int");

                    b.Property<int?>("Tieuchuan7")
                        .HasColumnType("int");

                    b.Property<int?>("Trongtn1")
                        .HasColumnType("int");

                    b.Property<int?>("Trongtn2")
                        .HasColumnType("int");

                    b.Property<int?>("Trongtn3")
                        .HasColumnType("int");

                    b.Property<int?>("Trongtn4")
                        .HasColumnType("int");

                    b.Property<int?>("Trongtn5")
                        .HasColumnType("int");

                    b.Property<int?>("Trongtn6")
                        .HasColumnType("int");

                    b.Property<int?>("Trongtn7")
                        .HasColumnType("int");

                    b.Property<string>("Vitritacnghiep")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Vitritacnghiepcuthe")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Vitritoanha")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToTable("EnviHighAction", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ExemptionCar", b =>
                {
                    b.Property<string>("Bgname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CarColor")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CarType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DeleteDdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DeleteDseason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("Id")
                        .HasColumnType("float")
                        .HasColumnName("ID");

                    b.Property<double?>("IsDeleteD")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToTable("Exemption_Car", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ExpCar", b =>
                {
                    b.Property<string>("Carnumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ExpCarid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpCarid"));

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int")
                        .HasColumnName("isdeleted");

                    b.Property<DateTime?>("TravelEndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TravelStartTime")
                        .HasColumnType("datetime");

                    b.ToTable("ExpCar", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.FingerPrint", b =>
                {
                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("FingerNumber")
                        .HasColumnType("int");

                    b.Property<int>("FingerPrintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FingerPrintID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FingerPrintId"));

                    b.Property<byte[]>("FingerprintMode")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("FingerprintPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.ToTable("FingerPrint", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.FireEngine", b =>
                {
                    b.Property<int?>("Af1")
                        .HasColumnType("int")
                        .HasColumnName("AF1");

                    b.Property<int?>("Af2")
                        .HasColumnType("int")
                        .HasColumnName("AF2");

                    b.Property<int?>("Af3")
                        .HasColumnType("int")
                        .HasColumnName("AF3");

                    b.Property<int?>("Af4")
                        .HasColumnType("int")
                        .HasColumnName("AF4");

                    b.Property<int?>("Af5")
                        .HasColumnType("int")
                        .HasColumnName("AF5");

                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<int?>("Assent")
                        .HasColumnType("int");

                    b.Property<string>("Atld3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ATLD3");

                    b.Property<string>("AuditFile")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AuditVendor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Bf1")
                        .HasColumnType("int")
                        .HasColumnName("BF1");

                    b.Property<int?>("Bf10")
                        .HasColumnType("int")
                        .HasColumnName("BF10");

                    b.Property<int?>("Bf11")
                        .HasColumnType("int")
                        .HasColumnName("BF11");

                    b.Property<int?>("Bf2")
                        .HasColumnType("int")
                        .HasColumnName("BF2");

                    b.Property<int?>("Bf3")
                        .HasColumnType("int")
                        .HasColumnName("BF3");

                    b.Property<int?>("Bf4")
                        .HasColumnType("int")
                        .HasColumnName("BF4");

                    b.Property<int?>("Bf5")
                        .HasColumnType("int")
                        .HasColumnName("BF5");

                    b.Property<int?>("Bf6")
                        .HasColumnType("int")
                        .HasColumnName("BF6");

                    b.Property<int?>("Bf7")
                        .HasColumnType("int")
                        .HasColumnName("BF7");

                    b.Property<int?>("Bf8")
                        .HasColumnType("int")
                        .HasColumnName("BF8");

                    b.Property<int?>("Bf9")
                        .HasColumnType("int")
                        .HasColumnName("BF9");

                    b.Property<string>("ContenAction")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Defer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EhsSign")
                        .HasColumnType("int");

                    b.Property<string>("EmpNameApp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpNoApp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ExtTel")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("FileClother")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FileDevices")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FilePeople")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FileUnit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FileVenDor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("FireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FireID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FireId"));

                    b.Property<int?>("FireType1")
                        .HasColumnType("int");

                    b.Property<int?>("FireType2")
                        .HasColumnType("int");

                    b.Property<int?>("FireType3")
                        .HasColumnType("int");

                    b.Property<int?>("FireType4")
                        .HasColumnType("int");

                    b.Property<int?>("FireType5")
                        .HasColumnType("int");

                    b.Property<int?>("FireType6")
                        .HasColumnType("int");

                    b.Property<int?>("FireType7")
                        .HasColumnType("int");

                    b.Property<int?>("FireType8")
                        .HasColumnType("int");

                    b.Property<int?>("FireType9")
                        .HasColumnType("int");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Idatld")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IDATLD");

                    b.Property<string>("ImageAtld")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ImageATLD");

                    b.Property<string>("ImageAudit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("In1")
                        .HasColumnType("int")
                        .HasColumnName("IN1");

                    b.Property<int?>("In2")
                        .HasColumnType("int")
                        .HasColumnName("IN2");

                    b.Property<int?>("In3")
                        .HasColumnType("int")
                        .HasColumnName("IN3");

                    b.Property<int?>("In4")
                        .HasColumnType("int")
                        .HasColumnName("IN4");

                    b.Property<int?>("In5")
                        .HasColumnType("int")
                        .HasColumnName("IN5");

                    b.Property<string>("MemberAudit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberFire")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NameConstruc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameVendor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NotesApp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Office")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PeopleAction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SendMess")
                        .HasColumnType("int");

                    b.Property<int?>("Special")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeAplication")
                        .HasColumnType("datetime");

                    b.Property<string>("UnitApplication")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToTable("FireEngine", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Form", b =>
                {
                    b.Property<int>("FormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormId"));

                    b.Property<string>("FormName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FormTable")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("FormType")
                        .HasColumnType("int");

                    b.Property<string>("KeyName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Url")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("FormId");

                    b.ToTable("Form", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.FormBack", b =>
                {
                    b.Property<int?>("FormIdback")
                        .HasColumnType("int")
                        .HasColumnName("FormIDback");

                    b.Property<string>("FormNameback")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FormTableback")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("FormTypeback")
                        .HasColumnType("int");

                    b.Property<string>("KeyName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Urlback")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("FormBack", "faceid");
                });

            modelBuilder.Entity("Data.Migration.Models.FormStatus", b =>
                {
                    b.Property<int>("FormStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormStatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormStatusId"));

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FlowImage")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("FlowNum")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<string>("FormMeno")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<double?>("Leavel")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("ToZc")
                        .HasColumnType("bit")
                        .HasColumnName("ToZC");

                    b.Property<DateTime?>("WorkTime")
                        .HasColumnType("datetime");

                    b.HasKey("FormStatusId")
                        .HasName("PK_FORMSTATUS");

                    b.ToTable("FormStatus", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.FormWorkProc", b =>
                {
                    b.Property<int>("FormWorkProcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormWorkProcID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormWorkProcId"));

                    b.Property<string>("Act")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<int?>("FormStatusId")
                        .HasColumnType("int")
                        .HasColumnName("FormStatusID");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Meno")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("WorkDate")
                        .HasColumnType("datetime");

                    b.HasKey("FormWorkProcId")
                        .HasName("PK_FORMWORKPROC");

                    b.ToTable("FormWorkProc", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.FormbackTest", b =>
                {
                    b.Property<int?>("FormIdback")
                        .HasColumnType("int")
                        .HasColumnName("FormIDback");

                    b.Property<string>("FormNameback")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("FormTypeback")
                        .HasColumnType("int");

                    b.Property<string>("Formtableback")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KeyNameback")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Urlback")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("FormbackTest", "faceid");
                });

            modelBuilder.Entity("Data.Migration.Models.FourCompanyAll", b =>
                {
                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ApplicationUnit")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BackstageStatus")
                        .HasColumnType("int");

                    b.Property<int>("FormType")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ReceiverNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("VipCardId")
                        .HasColumnType("int")
                        .HasColumnName("VipCardID");

                    b.Property<int>("VisitCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitCustID");

                    b.Property<string>("VisitUnits")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("FourCompanyAll", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.FourVisitor", b =>
                {
                    b.Property<int>("CustListId")
                        .HasColumnType("int")
                        .HasColumnName("CustListID");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("ReceiverID");

                    b.Property<int?>("VisitCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitCustID");

                    b.Property<string>("VisitNumber")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.ToTable((string)null);

                    b.ToView("FourVisitors", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.FourVisitorAll", b =>
                {
                    b.Property<int>("CustListId")
                        .HasColumnType("int")
                        .HasColumnName("CustListID");

                    b.Property<int>("FormType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("ReceiverID");

                    b.Property<DateTime?>("ReceiverTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("RemandTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("ReturnId")
                        .HasColumnType("int")
                        .HasColumnName("ReturnID");

                    b.Property<DateTime?>("ReturnTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit");

                    b.Property<int?>("VisitCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitCustID");

                    b.Property<string>("VisitNumber")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.ToTable((string)null);

                    b.ToView("FourVisitorAll", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.GoingOut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("AreaRegionId")
                        .HasColumnType("int")
                        .HasColumnName("AreaRegionID");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Bu")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("BU");

                    b.Property<string>("Destination")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNameApp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpNoApp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NotesApp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneApp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeApplication")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeInPlan")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeInReal")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeOut")
                        .HasColumnType("datetime");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoingOut", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Gongyingshang", b =>
                {
                    b.Property<string>("CorpName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NChnname")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("N_CHNName");

                    b.Property<string>("StatusId")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("StatusID");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VendorCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("gongyingshang", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.GroupChiefExecutive", b =>
                {
                    b.Property<int>("GroupChiefExecutiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GroupChiefExecutiveID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupChiefExecutiveId"));

                    b.Property<string>("AuthorizationFile")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SignatureFile")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("GroupChiefExecutiveId");

                    b.ToTable("GroupChiefExecutive", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.GroupType", b =>
                {
                    b.Property<int>("GroupTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GroupTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupTypeId"));

                    b.Property<int?>("AreaGroupId")
                        .HasColumnType("int")
                        .HasColumnName("AreaGroupID");

                    b.Property<string>("GroupTypeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("GroupTypeId");

                    b.ToTable("GroupType", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.GuardStationAbout", b =>
                {
                    b.Property<string>("Area")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ArriveNum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ArriveTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Azimuth")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Building")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ClassType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("FirstId")
                        .HasColumnType("int")
                        .HasColumnName("FirstID");

                    b.Property<string>("Floor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("GuardServerReportTwoId")
                        .HasColumnType("int")
                        .HasColumnName("GuardServerReportTwoID");

                    b.Property<int>("GuardStationAboutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GuardStationAboutID");

                    b.Property<bool?>("IsStationDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("OldId")
                        .HasColumnType("int")
                        .HasColumnName("OldID");

                    b.Property<string>("Other")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("PersonNum")
                        .HasColumnType("int");

                    b.Property<string>("Place")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("PostAdminId")
                        .HasColumnType("int")
                        .HasColumnName("PostAdmin_id");

                    b.Property<string>("PostAdminSelect")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("PostAdmin_Select")
                        .IsFixedLength();

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("StationCode")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("StationLeavel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StationMeno")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("StationName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StationType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("GuardStationAbout", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.GuiBinAudit", b =>
                {
                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ApplicationUnit")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AreaHh")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AreaHH");

                    b.Property<int?>("BackstageStatus")
                        .HasColumnType("int");

                    b.Property<string>("Bgname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BGName");

                    b.Property<string>("Extension")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Number")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ReceptionBg")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ReceptionBG");

                    b.Property<string>("ReceptionPeople")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VisitEndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("VisitStartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("VisitUnits")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("GuiBinAudit", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.GuiBinManage", b =>
                {
                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ApplicationUnit")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("BackstageStatus")
                        .HasColumnType("int");

                    b.Property<string>("CardNum")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("CardStatus")
                        .HasColumnType("int");

                    b.Property<int>("CustListId")
                        .HasColumnType("int")
                        .HasColumnName("CustListID");

                    b.Property<string>("EcardNum")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ECardNum");

                    b.Property<int>("FormType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Number")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("ReceiverID");

                    b.Property<string>("ReceiverNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ReceiverTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("RemandTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("ReturnId")
                        .HasColumnType("int")
                        .HasColumnName("ReturnID");

                    b.Property<DateTime?>("ReturnTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("VipCardId")
                        .HasColumnType("int")
                        .HasColumnName("VipCardID");

                    b.Property<int?>("VisitCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitCustID");

                    b.Property<string>("VisitNumber")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("VisitUnits")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("GuiBinManage", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.GuiBinOutCall", b =>
                {
                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ApplicationUnit")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BackstageStatus")
                        .HasColumnType("int");

                    b.Property<string>("Bgname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BGName");

                    b.Property<DateTime?>("Calldate")
                        .HasColumnType("datetime")
                        .HasColumnName("calldate");

                    b.Property<int?>("Days")
                        .HasColumnType("int")
                        .HasColumnName("days");

                    b.Property<string>("Extension")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Number")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ReceptionBg")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ReceptionBG");

                    b.Property<string>("ReceptionPeople")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VisitEndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("VisitStartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("VisitUnits")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("GuiBinOutCall", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.GuiBinReceive", b =>
                {
                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ApplicationUnit")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AreaHh")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AreaHH");

                    b.Property<int?>("BackstageStatus")
                        .HasColumnType("int");

                    b.Property<string>("Bgname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BGName");

                    b.Property<int?>("CardNum")
                        .HasColumnType("int");

                    b.Property<string>("Extention")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Number")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("PeopleNum")
                        .HasColumnType("int");

                    b.Property<string>("ReceiveCards")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ReceiveTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ReceptionPeople")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("VipCardId")
                        .HasColumnType("int")
                        .HasColumnName("VipCardID");

                    b.Property<int?>("VisitCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitCustID");

                    b.Property<DateTime?>("VisitEndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("VisitStartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("VisitUnits")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToTable((string)null);

                    b.ToView("GuiBinReceive", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.GuiBinReturnSin", b =>
                {
                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ApplicationUnit")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AreaHh")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AreaHH");

                    b.Property<int?>("BackstageStatus")
                        .HasColumnType("int");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Bgname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BGName");

                    b.Property<string>("CardNum")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("CardStatus")
                        .HasColumnType("int");

                    b.Property<int>("CustListId")
                        .HasColumnType("int")
                        .HasColumnName("CustListID");

                    b.Property<string>("EcardNum")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ECardNum");

                    b.Property<string>("FormName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IsDelete")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Position")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("ReceiverID");

                    b.Property<DateTime?>("ReceiverTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ReceptionDept")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReceptionPeople")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("RemandTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("ReturnId")
                        .HasColumnType("int")
                        .HasColumnName("ReturnID");

                    b.Property<DateTime?>("ReturnTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubmitName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("VisitCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitCustID");

                    b.Property<DateTime?>("VisitEndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("VisitStartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("VisitUnits")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("VisitorCardId")
                        .HasColumnType("int")
                        .HasColumnName("VisitorCardID");

                    b.ToTable((string)null);

                    b.ToView("GuiBinReturnSin", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.HandleResult", b =>
                {
                    b.Property<int?>("Active")
                        .HasColumnType("int");

                    b.Property<string>("ContentResult")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Idtrouble")
                        .HasColumnType("int")
                        .HasColumnName("IDTrouble");

                    b.Property<string>("Memo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TimeHandle")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("HandleResult", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.HandleTrouble", b =>
                {
                    b.Property<int?>("Active")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("EmpNameApp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNameArr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNameRece")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNoApp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpNoArr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNoRece")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HandEmpNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HandExt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("HandMemo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("HandMobile")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("HandNameCn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("HandNameCN");

                    b.Property<string>("HandNameVn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("HandNameVN");

                    b.Property<string>("HandNotes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HandResult")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("HandTime")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Memo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("MethodRece")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MothodArr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OtherTrouble")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReceTime")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeSend")
                        .HasColumnType("datetime");

                    b.Property<string>("TroubleContent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("TroubleType")
                        .HasColumnType("int");

                    b.ToTable("HandleTrouble", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.HangleSign", b =>
                {
                    b.Property<string>("AreaId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AreaID");

                    b.Property<string>("EmpNameCn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EmpNameCN");

                    b.Property<string>("EmpNameVn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EmpNameVN");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ext")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("HangleSign", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Help", b =>
                {
                    b.Property<int>("HelpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HelpID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HelpId"));

                    b.Property<double?>("Arrangement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("HelpContent")
                        .HasMaxLength(6000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6000)");

                    b.Property<string>("HelpTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("HelpId");

                    b.ToTable("Help", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.HgcarInfo", b =>
                {
                    b.Property<int>("HgcarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HGCarID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HgcarId"));

                    b.Property<string>("CarNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Idno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IDNO");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TranCom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("HgcarId");

                    b.ToTable("HGCarInfo", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Hinhvv", b =>
                {
                    b.Property<string>("Hello")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Test")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("Hinhvv", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.HoanCong", b =>
                {
                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Memo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Para")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("WorkDate")
                        .HasColumnType("datetime");

                    b.ToTable("HoanCong", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Hoisting", b =>
                {
                    b.Property<int?>("Af1")
                        .HasColumnType("int")
                        .HasColumnName("AF1");

                    b.Property<int?>("Af2")
                        .HasColumnType("int")
                        .HasColumnName("AF2");

                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<int?>("Assent")
                        .HasColumnType("int");

                    b.Property<string>("Atld2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ATLD2");

                    b.Property<string>("Atld3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ATLD3");

                    b.Property<string>("AuditFile")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Bf1")
                        .HasColumnType("int")
                        .HasColumnName("BF1");

                    b.Property<int?>("Bf2")
                        .HasColumnType("int")
                        .HasColumnName("BF2");

                    b.Property<int?>("Bf3")
                        .HasColumnType("int")
                        .HasColumnName("BF3");

                    b.Property<int?>("Bf4")
                        .HasColumnType("int")
                        .HasColumnName("BF4");

                    b.Property<int?>("Bf5")
                        .HasColumnType("int")
                        .HasColumnName("BF5");

                    b.Property<string>("ContentAction")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("EhsSign")
                        .HasColumnType("int");

                    b.Property<string>("EmpNameApp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpNoApp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ExtTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FileClother")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FileDevices")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FileUnit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FileVendor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("HoiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HoiID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HoiId"));

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("ImageAtld2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ImageATLD2");

                    b.Property<string>("ImageAudit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ImageChart")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ImageCheck")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ImageDriving")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ImageMember")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("In1")
                        .HasColumnType("int")
                        .HasColumnName("IN1");

                    b.Property<int?>("In10")
                        .HasColumnType("int")
                        .HasColumnName("IN10");

                    b.Property<int?>("In11")
                        .HasColumnType("int")
                        .HasColumnName("IN11");

                    b.Property<int?>("In2")
                        .HasColumnType("int")
                        .HasColumnName("IN2");

                    b.Property<int?>("In3")
                        .HasColumnType("int")
                        .HasColumnName("IN3");

                    b.Property<int?>("In4")
                        .HasColumnType("int")
                        .HasColumnName("IN4");

                    b.Property<int?>("In5")
                        .HasColumnType("int")
                        .HasColumnName("IN5");

                    b.Property<int?>("In6")
                        .HasColumnType("int")
                        .HasColumnName("IN6");

                    b.Property<int?>("In7")
                        .HasColumnType("int")
                        .HasColumnName("IN7");

                    b.Property<int?>("In8")
                        .HasColumnType("int")
                        .HasColumnName("IN8");

                    b.Property<int?>("In9")
                        .HasColumnType("int")
                        .HasColumnName("IN9");

                    b.Property<string>("MemberAudit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameContruc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameDriver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameTie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameTurn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameVendor")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NotesApp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumberCar")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Office")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PositionAction")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Special")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeApplication")
                        .HasColumnType("datetime");

                    b.Property<string>("UnitApplication")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorAudit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Weight")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.ToTable("Hoisting", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.HouseLayer", b =>
                {
                    b.Property<int>("HouseLayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HouseLayerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HouseLayerId"));

                    b.Property<int?>("LayerId")
                        .HasColumnType("int")
                        .HasColumnName("LayerID");

                    b.Property<int?>("RegionHouseId")
                        .HasColumnType("int")
                        .HasColumnName("RegionHouseID");

                    b.HasKey("HouseLayerId");

                    b.ToTable("HouseLayer", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.IcivetLogin", b =>
                {
                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Userid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("IcivetLogin", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ImExPortProduct", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("CardId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CardID");

                    b.Property<string>("ComporationId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ComporationID");

                    b.Property<DateTime?>("DatetimeUse")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImExPortProductId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ImExPortProductID");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IP");

                    b.Property<string>("MacId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MacID");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PartPass")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Weights")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("ImExPortProduct", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ImExPortProductDriverInfor", b =>
                {
                    b.Property<string>("CarNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ComporationId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ComporationID");

                    b.Property<string>("DriverId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DriverID");

                    b.Property<string>("DriverName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImExPortProductId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ImExPortProductID");

                    b.Property<string>("TransportType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToTable("ImExPortProduct_DriverInfor", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ImExPortProductProductInfor", b =>
                {
                    b.Property<int?>("Amounts")
                        .HasColumnType("int");

                    b.Property<string>("ComporationId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ComporationID");

                    b.Property<string>("ImExPortProductId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ImExPortProductID");

                    b.Property<string>("ProductType")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UnitType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("ImExPortProduct_ProductInfor", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Intermittent", b =>
                {
                    b.Property<int?>("Af1")
                        .HasColumnType("int")
                        .HasColumnName("AF1");

                    b.Property<int?>("Af2")
                        .HasColumnType("int")
                        .HasColumnName("AF2");

                    b.Property<int?>("Af3")
                        .HasColumnType("int")
                        .HasColumnName("AF3");

                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<int?>("Assent")
                        .HasColumnType("int");

                    b.Property<string>("Atld2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ATLD2");

                    b.Property<string>("Atld3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ATLD3");

                    b.Property<string>("AuditFile")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AuditVendor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Bf1")
                        .HasColumnType("int")
                        .HasColumnName("BF1");

                    b.Property<int?>("Bf2")
                        .HasColumnType("int")
                        .HasColumnName("BF2");

                    b.Property<int?>("Bf3")
                        .HasColumnType("int")
                        .HasColumnName("BF3");

                    b.Property<int?>("Bf4")
                        .HasColumnType("int")
                        .HasColumnName("BF4");

                    b.Property<int?>("Bf5")
                        .HasColumnType("int")
                        .HasColumnName("BF5");

                    b.Property<int?>("Con1")
                        .HasColumnType("int");

                    b.Property<int?>("Con10")
                        .HasColumnType("int");

                    b.Property<int?>("Con11")
                        .HasColumnType("int");

                    b.Property<int?>("Con2")
                        .HasColumnType("int");

                    b.Property<int?>("Con3")
                        .HasColumnType("int");

                    b.Property<int?>("Con4")
                        .HasColumnType("int");

                    b.Property<int?>("Con5")
                        .HasColumnType("int");

                    b.Property<int?>("Con6")
                        .HasColumnType("int");

                    b.Property<int?>("Con7")
                        .HasColumnType("int");

                    b.Property<int?>("Con8")
                        .HasColumnType("int");

                    b.Property<int?>("Con9")
                        .HasColumnType("int");

                    b.Property<string>("ConDefe")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContentInter")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("EhsSign")
                        .HasColumnType("int");

                    b.Property<string>("EmpNameApp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNoApp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ExtTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FileClother")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FileDevices")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Idinter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDInter");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idinter"));

                    b.Property<string>("ImageAtld2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ImageATLD2");

                    b.Property<string>("ImageAudit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ImageMember")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("In1")
                        .HasColumnType("int")
                        .HasColumnName("IN1");

                    b.Property<int?>("In2")
                        .HasColumnType("int")
                        .HasColumnName("IN2");

                    b.Property<int?>("In3")
                        .HasColumnType("int")
                        .HasColumnName("IN3");

                    b.Property<int?>("In4")
                        .HasColumnType("int")
                        .HasColumnName("IN4");

                    b.Property<int?>("In5")
                        .HasColumnType("int")
                        .HasColumnName("IN5");

                    b.Property<string>("MemberAudit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameContruc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NameVendor")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NotesApp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Office")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("SendMess")
                        .HasColumnType("int");

                    b.Property<int?>("Special")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeApplication")
                        .HasColumnType("datetime");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("TypeDefe")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UnitApplication")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToTable("Intermittent", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.InteruptInfrared", b =>
                {
                    b.Property<string>("ActionContent")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ActionDepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionLocation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ActionType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ApplicantEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ApplicantExt")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ApplicationDepart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("ContructionId")
                        .HasColumnType("int")
                        .HasColumnName("ContructionID");

                    b.Property<string>("EmpIdcreate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpIDCreate");

                    b.Property<string>("FromDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InfraredLampOff")
                        .HasColumnType("int");

                    b.Property<int?>("IsDisplay")
                        .HasColumnType("int");

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<int?>("OffCamera")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SpecialPhone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Todate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("InteruptInfrared", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.InvalidRecord", b =>
                {
                    b.Property<int>("InvalidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InvalidID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvalidId"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<bool?>("Effective")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("Invalid")
                        .HasColumnType("datetime");

                    b.Property<string>("InvalidReasons")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("QuitApplyId")
                        .HasColumnType("int")
                        .HasColumnName("QuitApplyID");

                    b.Property<int>("RecoveryType")
                        .HasColumnType("int")
                        .HasComment("0為作廢未處理，1為證件收回，2為交賠償金，3為補卡");

                    b.HasKey("InvalidId")
                        .HasName("PK_INVALIDRECORDS");

                    b.HasIndex("CardId");

                    b.ToTable("InvalidRecords");
                });

            modelBuilder.Entity("Data.Migration.Models.ItDevice", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("BgIduse")
                        .HasColumnType("int")
                        .HasColumnName("BgIDUse");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreaterDepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreaterEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreaterEmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CreaterEmpID");

                    b.Property<string>("CreaterName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreaterPhoneNum")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreaterSpecialPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IpPass")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LocationDetail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PartPass")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ReasonType")
                        .HasColumnType("int");

                    b.Property<int?>("RequirementType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UseDepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UseEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UseEmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UseEmpID");

                    b.Property<string>("UseName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsePhoneNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UseSpecialPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UseTime")
                        .HasColumnType("datetime");

                    b.ToTable("ItDevices");
                });

            modelBuilder.Entity("Data.Migration.Models.ItDeviceInfo", b =>
                {
                    b.Property<string>("AssetType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DeviceType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("HaveWifi")
                        .HasColumnType("int");

                    b.Property<int?>("ItDeviceId")
                        .HasColumnType("int")
                        .HasColumnName("ItDeviceID");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Picture")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ProductId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ProductID");

                    b.Property<string>("Sn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SN");

                    b.Property<string>("Specifications")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("ItDevice_Info", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ItdevicesListPass", b =>
                {
                    b.Property<string>("IpPass")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ItdeviceId")
                        .HasColumnType("int")
                        .HasColumnName("ItdeviceID");

                    b.Property<string>("MacPass")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PartPass")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimePass")
                        .HasColumnType("datetime");

                    b.ToTable("ITDevices_ListPass", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Itinerary", b =>
                {
                    b.Property<int>("ItineraryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ItineraryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItineraryId"));

                    b.Property<string>("BriefAddress")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BriefMeno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BriefType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LtineraryStress")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Person")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("VisitCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitCustID");

                    b.HasKey("ItineraryId");

                    b.ToTable("Itinerary", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.JoinDrawDatum", b =>
                {
                    b.Property<int?>("IsBeChecked")
                        .HasColumnType("int");

                    b.Property<string>("VehiclePeriodNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("VehiclePermitId")
                        .HasColumnType("int")
                        .HasColumnName("VehiclePermitID");

                    b.ToTable((string)null);

                    b.ToView("JoinDrawData", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.JurisdictionType", b =>
                {
                    b.Property<int>("JurisdictionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JurisdictionTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JurisdictionTypeId"));

                    b.Property<string>("Arrangement")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<bool?>("IsBegin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JurisdictionType1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("JurisdictionType");

                    b.Property<string>("Meno")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("JurisdictionTypeId");

                    b.ToTable("JurisdictionType", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Layer", b =>
                {
                    b.Property<int>("LayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LayerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LayerId"));

                    b.Property<string>("LayerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LayerId");

                    b.ToTable("Layer", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.LeaseContract", b =>
                {
                    b.Property<int>("LeaseContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LeaseContractID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaseContractId"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ContractNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("FactoryName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("File")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("HouseNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Monthly")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("PayNum")
                        .HasColumnType("float");

                    b.Property<int?>("PayStatus")
                        .HasColumnType("int")
                        .HasComment("0 未交  1 未交清  2 已交清");

                    b.Property<string>("PayYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Rate")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RentName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReportName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasComment("0 在租  1 停租  2 續租");

                    b.Property<string>("Tel")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Tenant")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("TotalArea")
                        .HasColumnType("float");

                    b.Property<int?>("Type")
                        .HasColumnType("int")
                        .HasComment("內部 \r\n   外部");

                    b.HasKey("LeaseContractId");

                    b.ToTable("LeaseContract", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Link", b =>
                {
                    b.Property<int>("LinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LinkID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkId"));

                    b.Property<double?>("Arrangement")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreatTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Url")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("LinkId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("Data.Migration.Models.List", b =>
                {
                    b.Property<int>("ListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ListID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ListId"));

                    b.Property<double?>("Arrangement")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("File")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ListName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ListId");

                    b.ToTable("List", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ListCamera", b =>
                {
                    b.Property<string>("Area")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Floor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("House")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Idlist")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDList");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idlist"));

                    b.Property<string>("Kvcc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("KVCC");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Time")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("ListCamera", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ListCarMer", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Idcar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDCar");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idcar"));

                    b.Property<string>("ImageCar")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NumberCar")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Weigh")
                        .HasColumnType("int");

                    b.ToTable("ListCarMer", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ListCarPass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ExtTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FileExcel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeApplication")
                        .HasColumnType("datetime");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ListCarPass", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ListMer", b =>
                {
                    b.Property<int>("IdItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItem"));

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direct")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NameMer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Relation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("IdItem");

                    b.ToTable("ListMer", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ListOutPl", b =>
                {
                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IP");

                    b.Property<string>("Mac")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("TimeOut")
                        .HasColumnType("datetime");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.ToTable("ListOutPL", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ListPosisionCar", b =>
                {
                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("PossionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.ToTable("ListPosisionCar", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Location", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LocationDetail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LocationId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LocationID");

                    b.Property<string>("LocationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToTable("Location", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Lodging", b =>
                {
                    b.Property<int>("LodgingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("lodgingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LodgingId"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("DoubleRoom")
                        .HasColumnType("int");

                    b.Property<int?>("LodgingNum")
                        .HasColumnType("int")
                        .HasColumnName("lodgingNum");

                    b.Property<int?>("SingleRoom")
                        .HasColumnType("int");

                    b.Property<int?>("VisitCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitCustID");

                    b.HasKey("LodgingId");

                    b.ToTable("lodging", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Ip")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IP");

                    b.Property<string>("Mac")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("New")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Old")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("OperTime")
                        .HasColumnType("datetime");

                    b.Property<string>("OperType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TableName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("LogId")
                        .HasName("PK_LOG");

                    b.ToTable("log", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.MachineIppairing", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("AreaName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Mac")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MAC");

                    b.Property<int>("MachineIppairingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MachineIPPairingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MachineIppairingId"));

                    b.Property<string>("MachineName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("MachineIPPairing", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.MachineIppairingInfo", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("AreaName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IP");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MachineName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("MachineIPPairingInfo", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.MakeCardArea", b =>
                {
                    b.Property<int>("MakeCardAreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MakeCardAreaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MakeCardAreaId"));

                    b.Property<int?>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AreaID")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Meno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MakeCardAreaId");

                    b.ToTable("MakeCardArea", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.MakeCardDataError", b =>
                {
                    b.Property<DateTime?>("ErrorDate")
                        .HasColumnType("datetime")
                        .HasComment("出錯異常記錄時間");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasComment("證件ID,");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Meno")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasComment("備註");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID")
                        .HasComment("證件類型,1表車輛通行證,2表客戶駐廠證或駐廠工作證");

                    b.ToTable("MakeCardDataError", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.MaterialforChemistry", b =>
                {
                    b.Property<string>("Amount")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CategoryUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ChemistryFormId")
                        .HasColumnType("int")
                        .HasColumnName("ChemistryFormID");

                    b.Property<string>("Doccument")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FireTemp")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mass")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MassUsingofMaterialeveryday")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MassofAllMaterialInStore")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MassofMaterialInStore")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MaterialId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MaterialID");

                    b.Property<string>("MaterialName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StoreMaxCapacity")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TotalMass")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable("MaterialforChemistry", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.MaterialforChemistry1", b =>
                {
                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("CategoryUnit")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int>("ChemistryFormId")
                        .HasColumnType("int")
                        .HasColumnName("ChemistryFormID");

                    b.Property<string>("Doccument")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FireTemp")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Mass")
                        .HasColumnType("float");

                    b.Property<double?>("MassUsingofMaterialeveryday")
                        .HasColumnType("float");

                    b.Property<double?>("MassofAllMaterialInStore")
                        .HasColumnType("float");

                    b.Property<double?>("MassofMaterialInStore")
                        .HasColumnType("float");

                    b.Property<string>("MaterialId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MaterialID");

                    b.Property<string>("MaterialName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("StoreMaxCapacity")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMass")
                        .HasColumnType("float");

                    b.ToTable("MaterialforChemistry", "faceid");
                });

            modelBuilder.Entity("Data.Migration.Models.Meal", b =>
                {
                    b.Property<int>("MealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MealID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealId"));

                    b.Property<string>("AccompanyManagers")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AccompanyManagers1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AccompanyManagers2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DiningTime")
                        .HasColumnType("datetime");

                    b.Property<string>("MealAddress")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("MealCustNum")
                        .HasColumnType("int");

                    b.Property<string>("MealLeavel")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("MealNum")
                        .HasColumnType("int");

                    b.Property<int?>("VisitCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitCustID");

                    b.HasKey("MealId");

                    b.ToTable("Meal", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.MerCheProc", b =>
                {
                    b.Property<int?>("Act")
                        .HasColumnType("int");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Memo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ProcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProcID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcId"));

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<DateTime?>("WorkDate")
                        .HasColumnType("datetime");

                    b.ToTable("MerCheProc", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.MerCheStatus", b =>
                {
                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Leavel")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Para")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<DateTime?>("WordTime")
                        .HasColumnType("datetime");

                    b.ToTable("MerCheStatus", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.MerProc", b =>
                {
                    b.Property<int>("ProcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProcID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcId"));

                    b.Property<int?>("Act")
                        .HasColumnType("int");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Memo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<DateTime?>("WorkDate")
                        .HasColumnType("datetime");

                    b.HasKey("ProcId");

                    b.ToTable("MerProc", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.MerStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("Emp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Memo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("StatusId");

                    b.ToTable("MerStatus", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.MerTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Applicationtime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CarType")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeNameApp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeeNoApp")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("ExtTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NameTool")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserTime")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MerTransfer", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.MerTransferProc", b =>
                {
                    b.Property<int?>("Act")
                        .HasColumnType("int");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Memo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ProcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProcID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcId"));

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<DateTime?>("WordDate")
                        .HasColumnType("datetime");

                    b.ToTable("MerTransferProc", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.MerTrasferStatus", b =>
                {
                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Leavel")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Over")
                        .HasColumnType("int");

                    b.Property<string>("Para")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<DateTime?>("WorkTime")
                        .HasColumnType("datetime");

                    b.ToTable("MerTrasferStatus", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Merchandise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<int?>("Bg")
                        .HasColumnType("int")
                        .HasColumnName("BG");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CarType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeNameApp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("EmployeeNoApp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ExtTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Image1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("Image1Bye")
                        .HasColumnType("image");

                    b.Property<string>("Image2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("Image2Bye")
                        .HasColumnType("image");

                    b.Property<string>("Image3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("Image3Bye")
                        .HasColumnType("image");

                    b.Property<string>("Image4")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("Image4Bye")
                        .HasColumnType("image");

                    b.Property<string>("ImageIn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("ImageInBye")
                        .HasColumnType("image");

                    b.Property<string>("ImageOut")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("ImageOutBye")
                        .HasColumnType("image");

                    b.Property<string>("Mobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("NameTool")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Secur")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserTime")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Merchandise", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.MessSenLog", b =>
                {
                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<string>("FormType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("MessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MessID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessId"));

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("TimeAdd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeSend")
                        .HasColumnType("datetime");

                    b.Property<string>("Url")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UserID");

                    b.ToTable("MessSenLog", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MessageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<double?>("Arrangement")
                        .HasColumnType("float");

                    b.Property<string>("Cotent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MessageTypeId")
                        .HasColumnType("int")
                        .HasColumnName("MessageTypeID");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("MessageId");

                    b.ToTable("Message", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.MessageType", b =>
                {
                    b.Property<int>("MessageTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MessageTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageTypeId"));

                    b.Property<bool?>("IsDleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("MessageType1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MessageType");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("MessageTypeId");

                    b.ToTable("MessageType", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.MfCarRental", b =>
                {
                    b.Property<int>("MfCarRentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MfCarRentalID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MfCarRentalId"));

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contacter")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContacterPhone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CredentalsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("datetime");

                    b.Property<string>("MfAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MfCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("MfCarRentalId");

                    b.ToTable("MfCarRental", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Mqq", b =>
                {
                    b.Property<double?>("Areaid")
                        .HasColumnType("float")
                        .HasColumnName("areaid");

                    b.Property<string>("Buildingname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("buildingname");

                    b.Property<string>("F10")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("F7")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("F8")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("F9")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Layer")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("layer");

                    b.Property<double?>("No")
                        .HasColumnType("float")
                        .HasColumnName("NO");

                    b.Property<string>("Region")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("region");

                    b.Property<string>("Regionname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("regionname");

                    b.ToTable("mqq", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Mqq1", b =>
                {
                    b.Property<double?>("AreaRegionid")
                        .HasColumnType("float");

                    b.Property<double?>("Buildingid")
                        .HasColumnType("float");

                    b.ToTable("mqq1", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Mqq3", b =>
                {
                    b.Property<double?>("LayerId")
                        .HasColumnType("float")
                        .HasColumnName("LayerID");

                    b.Property<double?>("RegionHouseId")
                        .HasColumnType("float")
                        .HasColumnName("RegionHouseID");

                    b.ToTable("mqq3", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.NighAction", b =>
                {
                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<string>("ContenAction")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmpNameApp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpNoApp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ExtTel")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Idnight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDNight");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idnight"));

                    b.Property<int?>("IsAsse")
                        .HasColumnType("int");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("NameContrucs")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameRes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameVendor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Normal")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NotesApp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Office")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Special")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TelRes")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime?>("TimeAplication")
                        .HasColumnType("datetime");

                    b.Property<string>("UnitApplication")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UnitAuditName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitAuditNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UnitAuditTc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UnitAuditTC");

                    b.Property<string>("UnitAuditTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("VendorAuditName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendorAuditTc")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("VendorAuditTC");

                    b.Property<string>("VendorAuditTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Zone")
                        .HasColumnType("int");

                    b.ToTable("NighAction", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.NoJoinByCar", b =>
                {
                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("carNumber");

                    b.Property<int?>("Num")
                        .HasColumnType("int")
                        .HasColumnName("num");

                    b.ToTable((string)null);

                    b.ToView("NoJoinByCar", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.NoJoinByMan", b =>
                {
                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Num")
                        .HasColumnType("int")
                        .HasColumnName("num");

                    b.ToTable((string)null);

                    b.ToView("NoJoinByMen", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.NotesSendLog", b =>
                {
                    b.Property<int>("NotesLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotesLogId"));

                    b.Property<string>("BccaddressList")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("BCCAddressList");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CcaddressList")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("CCAddressList");

                    b.Property<string>("FormName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("FormstatusId")
                        .HasColumnType("int")
                        .HasColumnName("FormstatusID");

                    b.Property<string>("FromDisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('FOXCONN110')");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool?>("IsBodyHtml")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NotesTypeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Result")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(800)
                        .IsUnicode(false)
                        .HasColumnType("varchar(800)")
                        .HasDefaultValueSql("('未發送')");

                    b.Property<bool?>("ReturnReceipt")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SendTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Subject")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("SysTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ToAddressList")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Url")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("NotesLogId")
                        .HasName("PK_NOTESSENDLOG");

                    b.ToTable("NotesSendLog", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.NvipcardFrom165", b =>
                {
                    b.Property<string>("Cardname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("cardname");

                    b.Property<string>("Cardno")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("cardno");

                    b.Property<string>("Carid")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("carid");

                    b.Property<string>("Depart")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("depart");

                    b.Property<string>("Ecardno")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ecardno");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<Guid>("MsreplTranVersion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("msrepl_tran_version");

                    b.Property<string>("Tel")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tel");

                    b.ToTable("nvipcard_From165", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.OilRecord", b =>
                {
                    b.Property<int>("OilRecordsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OilRecordsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OilRecordsId"));

                    b.Property<int?>("BeforeOilMileage")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FuelDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FuelPeople")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("OilNum")
                        .HasColumnType("int");

                    b.Property<int?>("SpareCarId")
                        .HasColumnType("int")
                        .HasColumnName("SpareCarID");

                    b.HasKey("OilRecordsId")
                        .HasName("PK_OILRECORDS");

                    b.HasIndex("SpareCarId");

                    b.ToTable("OilRecords");
                });

            modelBuilder.Entity("Data.Migration.Models.OndutyForAttwApprove", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<DateTime?>("DateSign")
                        .HasColumnType("date");

                    b.Property<int?>("Frametime")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameCheck")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeUpdate")
                        .HasColumnType("datetime");

                    b.ToTable("OndutyForATTW_Approve", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.OndutyForAttwListAuthor", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ParaCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.ToTable("OndutyForATTW_ListAuthor", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.OndutyForAttwListLocation", b =>
                {
                    b.Property<string>("LocationId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LocationID");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("latitude");

                    b.Property<string>("LocationAbrevationName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LocationDetailName")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("longitude");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("X")
                        .HasColumnType("int");

                    b.Property<int?>("Y")
                        .HasColumnType("int");

                    b.HasKey("LocationId");

                    b.ToTable("OndutyForAttw_ListLocations", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.OndutyForAttwListLocationsSign", b =>
                {
                    b.Property<int?>("FrameTime")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IsOke")
                        .HasColumnType("int");

                    b.Property<int?>("Isdelete")
                        .HasColumnType("int");

                    b.Property<string>("LocationId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LocationID");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("OndutyOfAttwDepartId")
                        .HasColumnType("int")
                        .HasColumnName("OndutyOfAttwDepartID");

                    b.Property<DateTime?>("TimeCheck")
                        .HasColumnType("datetime");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable("OndutyForAttw_ListLocationsSign", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.OndutyForAttwRulesForAllLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Isdeleted")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("LocationId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LocationID");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RuleDetailName")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("RuleId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RuleID");

                    b.Property<DateTime?>("Timeupdate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable("OndutyForAttw_RulesForAllLocation", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.OndutyForAttwStatusSign", b =>
                {
                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Leavel")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ParaCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<DateTime?>("WorkTime")
                        .HasColumnType("datetime");

                    b.ToTable("OndutyForATTW_StatusSign", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.OndutyListLocation", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<string>("LocationAbrevationName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LocationDetailName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LocationId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LocationID");

                    b.Property<int?>("X")
                        .HasColumnType("int");

                    b.Property<int?>("Y")
                        .HasColumnType("int");

                    b.ToTable("OndutyListLocations");
                });

            modelBuilder.Entity("Data.Migration.Models.OndutyOfAttwDepart", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<DateTime?>("DateSing")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("FrameTime")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable("OndutyOfAttwDepart", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.OndutyOfAttwDepartFrameTime", b =>
                {
                    b.Property<int>("FrameId")
                        .HasColumnType("int")
                        .HasColumnName("FrameID");

                    b.Property<DateTime?>("DatetimeUpdate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time(0)");

                    b.Property<string>("FrameTimeName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time(0)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("FrameId");

                    b.ToTable("OndutyOfAttwDepart_FrameTime", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.OndutySign", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Bgname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BGName");

                    b.Property<DateTime?>("DateSign")
                        .HasColumnType("date");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("EndTimeValid")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTimeValid")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable("OndutySign", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.OndutySignArea", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("AreaName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AreaShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<int?>("ListIndex")
                        .HasColumnType("int");

                    b.ToTable("OndutySign_Area", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.OndutySignForAttwArea", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("AreaName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AreaShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<int?>("ListIndex")
                        .HasColumnType("int");

                    b.ToTable("OndutySignForAttw_Area", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.OndutySignLocationSign", b =>
                {
                    b.Property<string>("DepartMentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<string>("LocationId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LocationID");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("OndutySignId")
                        .HasColumnType("int")
                        .HasColumnName("OndutySignID");

                    b.Property<string>("ReceivedEmpNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ReceivedStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReceivedTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeSign")
                        .HasColumnType("datetime");

                    b.ToTable("OndutySign_LocationSign", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.OndutySignLocationSignHistoryAll", b =>
                {
                    b.Property<string>("DepartMentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<string>("LocationId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LocationID");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("OndutySignId")
                        .HasColumnType("int")
                        .HasColumnName("OndutySignID");

                    b.Property<string>("ReceivedEmpNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ReceivedStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReceivedTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeSign")
                        .HasColumnType("datetime");

                    b.ToTable("OndutySign_LocationSign_HistoryAll", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.OndutySignOfAttwListEmpNo", b =>
                {
                    b.Property<string>("EmpName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("TimeUpdate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable("OndutySignOfAttw_ListEmpNo", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.OtherCarInfo", b =>
                {
                    b.Property<string>("CarColor")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CarType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DocumentsNum")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DriverName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("DriverPhone")
                        .HasColumnType("float");

                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ID");

                    b.ToTable("OtherCarInfo", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Othercar", b =>
                {
                    b.Property<string>("Carcolor")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("carcolor");

                    b.Property<string>("Carnumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("carnumber");

                    b.Property<string>("Cartype")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("cartype");

                    b.Property<string>("Companyname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Documentsnum")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("documentsnum");

                    b.Property<string>("Drivername")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("drivername");

                    b.Property<double?>("Driverphone")
                        .HasColumnType("float")
                        .HasColumnName("driverphone");

                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ID");

                    b.ToTable("othercar", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ParkProfileChart", b =>
                {
                    b.Property<int>("ParkProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ParkProfileID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParkProfileId"));

                    b.Property<string>("ParkProfileArea")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ParkProfileData")
                        .HasColumnType("int");

                    b.Property<string>("ParkProfileName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ParkProfileTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ParkprofileCreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ParkprofileStandby")
                        .HasColumnType("int");

                    b.HasKey("ParkProfileId");

                    b.ToTable("ParkProfileChart", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.PassForm", b =>
                {
                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PartPass")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("PassTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Sta")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable("PassForm", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.PeoPleList", b =>
                {
                    b.Property<int>("Idlist")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDList");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idlist"));

                    b.Property<int?>("CreType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileCreType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FilePre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Idatld")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IDATLD");

                    b.Property<string>("IdcreType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IDCreType");

                    b.Property<string>("Idno")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("IDNo");

                    b.Property<string>("Idpre")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("IDPre");

                    b.Property<string>("ImageAtld")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ImageATLD");

                    b.Property<string>("ImagePeople")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Memo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Idlist");

                    b.ToTable("PeoPleList", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.PersonalDocument", b =>
                {
                    b.Property<string>("PersonalDocumentsGuid")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("PersonalDocumentsGUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("BitImage")
                        .HasColumnType("image");

                    b.Property<string>("CardId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CardID");

                    b.Property<int>("CardType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Creator")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Deletor")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("DepartMent")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("EditTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Editor")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("Idcode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IDCode");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PersonalDocumentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PersonalDocumentsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonalDocumentsId"));

                    b.Property<bool?>("Sex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ValidDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Xszguid")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("XSZGUID");

                    b.Property<int>("Xsztype")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("XSZType")
                        .HasDefaultValueSql("((-1))")
                        .HasComment("行駛證類型：0行駛證反面，1小型車，其它為行駛證正面，默認為2：>0都是正面,-1不是行駛證類型");

                    b.HasKey("PersonalDocumentsGuid")
                        .HasName("PK_PersonalDocuments_1");

                    b.ToTable("PersonalDocuments");
                });

            modelBuilder.Entity("Data.Migration.Models.PersonalItemImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PersionalId")
                        .HasColumnType("int")
                        .HasColumnName("PersionalID");

                    b.ToTable("PersonalItem_Images", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.PersonalItemListItem", b =>
                {
                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ItemsName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PersonItemsFormId")
                        .HasColumnType("int")
                        .HasColumnName("PersonItemsFormID");

                    b.Property<string>("Reason")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToTable("PersonalItem_ListItems", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.PersonalItemsAuthority", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("AuthorityId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("AuthorityID");

                    b.Property<int?>("DepartMentSnid")
                        .HasColumnType("int")
                        .HasColumnName("DepartMentSNID");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeID");

                    b.Property<string>("EmployeeNameT")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.ToTable("PersonalItems_Authority", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.PersonalItemsForm", b =>
                {
                    b.Property<string>("Applicant")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("AssetReturn")
                        .HasColumnType("int");

                    b.Property<string>("BedNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Building")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("CategoryType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DocFile")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeID");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<int?>("KeyReturn")
                        .HasColumnType("int");

                    b.Property<string>("RoomMateId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RoomMateID");

                    b.Property<string>("RoomMateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoomNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimePassKt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimePassMajorPart")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeUse")
                        .HasColumnType("datetime");

                    b.ToTable("PersonalItemsForm", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.PersonalItemsItem", b =>
                {
                    b.Property<string>("Applicant")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("AssetReturn")
                        .HasColumnType("int");

                    b.Property<string>("BedNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Building")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("CategoryType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DocFile")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeID");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("KeyReturn")
                        .HasColumnType("int");

                    b.Property<string>("RoomMateId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RoomMateID");

                    b.Property<string>("RoomMateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoomNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimePassKt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimePassMajorPart")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeUse")
                        .HasColumnType("datetime");

                    b.ToTable((string)null);

                    b.ToView("PersonalItemsItems", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.PersonalItemsSigStatus", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("LevelSigne")
                        .HasColumnType("float");

                    b.Property<string>("Meno")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("PersonalItemsFormId")
                        .HasColumnType("int")
                        .HasColumnName("PersonalItemsFormID");

                    b.Property<string>("SignerId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SignerID");

                    b.Property<string>("SignerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeSigne")
                        .HasColumnType("datetime");

                    b.ToTable("PersonalItems_SigStatus", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.PersonalItemsView", b =>
                {
                    b.Property<string>("Applicant")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("AssetReturn")
                        .HasColumnType("int");

                    b.Property<string>("BedNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Building")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("CategoryType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DocFile")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeID");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("KeyReturn")
                        .HasColumnType("int");

                    b.Property<string>("RoomMateId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RoomMateID");

                    b.Property<string>("RoomMateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoomNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimePassKt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimePassMajorPart")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeUse")
                        .HasColumnType("datetime");

                    b.ToTable((string)null);

                    b.ToView("PersonalItemsView", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.PhotoIdmatch", b =>
                {
                    b.Property<int>("PhotoIdmatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PhotoIDMatchID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhotoIdmatchId"));

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PhotoId")
                        .HasColumnType("int")
                        .HasColumnName("PhotoID");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.HasKey("PhotoIdmatchId");

                    b.ToTable("PhotoIDMatch", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Plapplication", b =>
                {
                    b.Property<int?>("ApplicationTime")
                        .HasColumnType("int");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Bu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BU");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.ToTable("PLApplication", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Pllist", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("CodePl")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CodePL")
                        .IsFixedLength();

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("NamePl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NamePL");

                    b.Property<int?>("SpecificWeight")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength();

                    b.ToTable("PLList", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.PllistOut", b =>
                {
                    b.Property<int>("Idlist")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDList");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idlist"));

                    b.Property<string>("BagId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BagID");

                    b.Property<int?>("Idcode")
                        .HasColumnType("int")
                        .HasColumnName("IDCode");

                    b.Property<int?>("Idpl")
                        .HasColumnType("int")
                        .HasColumnName("IDPL");

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("TimeUp")
                        .HasColumnType("datetime");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("WeightPerson")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Weights")
                        .HasColumnType("int");

                    b.HasKey("Idlist");

                    b.ToTable("PLListOut", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.PllistOutProtectorReset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Idpl")
                        .HasColumnType("int")
                        .HasColumnName("IDPL");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IP");

                    b.Property<DateTime?>("TimeReset")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("PLListOut_ProtectorReset", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.PllistValid", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("CodePl")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CodePL")
                        .IsFixedLength();

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Idlist")
                        .HasColumnType("int")
                        .HasColumnName("IDList");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("NamePl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NamePL");

                    b.Property<int?>("OldId")
                        .HasColumnType("int")
                        .HasColumnName("OldID");

                    b.Property<int?>("SpecificWeight")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.ToTable("PLListValid", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.PosisionCarVip", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("PosisionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("PosisionCarVip", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.PossionCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AppEmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AppEmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumberCar")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PossionCar1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PossionCar");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("TimeApplication")
                        .HasColumnType("datetime");

                    b.Property<string>("TimeIn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TimeOut")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitApplication")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PossionCar", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.PowerAdmin", b =>
                {
                    b.Property<int>("PowerAdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PowerAdminID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PowerAdminId"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<int?>("PowerListId")
                        .HasColumnType("int")
                        .HasColumnName("PowerListID");

                    b.HasKey("PowerAdminId");

                    b.ToTable("PowerAdmin", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.PowerList", b =>
                {
                    b.Property<int>("PowerListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PowerListID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PowerListId"));

                    b.Property<string>("PowerName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PowerNum")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("PowerListId");

                    b.ToTable("PowerList", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.PowerRole", b =>
                {
                    b.Property<int>("PowerRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PowerRoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PowerRoleId"));

                    b.Property<int?>("AdminRoleId")
                        .HasColumnType("int")
                        .HasColumnName("AdminRoleID");

                    b.Property<int?>("PowerListId")
                        .HasColumnType("int")
                        .HasColumnName("PowerListID");

                    b.HasKey("PowerRoleId");

                    b.ToTable("PowerRole", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.PrintCard", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Idprint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDPrint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idprint"));

                    b.Property<string>("NamePrint")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("TimePrint")
                        .HasColumnType("datetime");

                    b.Property<int?>("TypeCard")
                        .HasColumnType("int");

                    b.ToTable("PrintCard", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ProcMer", b =>
                {
                    b.Property<int>("ProcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProcID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcId"));

                    b.Property<string>("Act")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Memo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.HasKey("ProcId");

                    b.ToTable("ProcMer", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ProcessCarPass", b =>
                {
                    b.Property<int>("Idpress")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDPress");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idpress"));

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IP");

                    b.Property<int?>("Leavel")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ParaCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("WorkDate")
                        .HasColumnType("datetime");

                    b.HasKey("Idpress");

                    b.ToTable("ProcessCarPass", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ProductOpportunitiesCust", b =>
                {
                    b.Property<int>("ProductOpportunitiesCustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductOpportunitiesCustID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductOpportunitiesCustId"));

                    b.Property<string>("Other")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("ProductOppId")
                        .HasColumnType("int")
                        .HasColumnName("ProductOppID");

                    b.Property<int?>("VisitCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitCustID");

                    b.HasKey("ProductOpportunitiesCustId");

                    b.ToTable("ProductOpportunitiesCust", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ProductOpportunity", b =>
                {
                    b.Property<int>("ProductOppId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductOppID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductOppId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ProductOpportunitiesName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ProductOppId")
                        .HasName("PK_PRODUCTOPPORTUNITIES");

                    b.ToTable("ProductOpportunities");
                });

            modelBuilder.Entity("Data.Migration.Models.Profier2013051010", b =>
                {
                    b.Property<int>("RowNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RowNumber"));

                    b.Property<string>("ApplicationName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("image");

                    b.Property<int?>("ClientProcessId")
                        .HasColumnType("int")
                        .HasColumnName("ClientProcessID");

                    b.Property<int?>("Cpu")
                        .HasColumnType("int")
                        .HasColumnName("CPU");

                    b.Property<long?>("Duration")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("EventClass")
                        .HasColumnType("int");

                    b.Property<string>("LoginName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("NtuserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("NTUserName");

                    b.Property<long?>("Reads")
                        .HasColumnType("bigint");

                    b.Property<int?>("Spid")
                        .HasColumnType("int")
                        .HasColumnName("SPID");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("TextData")
                        .HasColumnType("ntext");

                    b.Property<long?>("Writes")
                        .HasColumnType("bigint");

                    b.HasKey("RowNumber")
                        .HasName("PK__Profier201305101__5F0DF06A");

                    b.ToTable("Profier2013051010", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Profiler2013050922", b =>
                {
                    b.Property<int>("RowNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RowNumber"));

                    b.Property<string>("ApplicationName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("image");

                    b.Property<int?>("ClientProcessId")
                        .HasColumnType("int")
                        .HasColumnName("ClientProcessID");

                    b.Property<int?>("Cpu")
                        .HasColumnType("int")
                        .HasColumnName("CPU");

                    b.Property<long?>("Duration")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("EventClass")
                        .HasColumnType("int");

                    b.Property<string>("LoginName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("NtuserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("NTUserName");

                    b.Property<long?>("Reads")
                        .HasColumnType("bigint");

                    b.Property<int?>("Spid")
                        .HasColumnType("int")
                        .HasColumnName("SPID");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("TextData")
                        .HasColumnType("ntext");

                    b.Property<long?>("Writes")
                        .HasColumnType("bigint");

                    b.HasKey("RowNumber")
                        .HasName("PK__Profiler20130509__5C3183BF");

                    b.ToTable("Profiler2013050922", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.QiMeiEmployeeExamine", b =>
                {
                    b.Property<int>("TwemployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TWEmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TwemployeeId"));

                    b.Property<string>("Bg")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("BG");

                    b.Property<string>("Bu")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BU");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Dept")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Leavel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Legal")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Post")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("Sex")
                        .HasColumnType("bit");

                    b.Property<string>("Source")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("WhetherJob")
                        .HasColumnType("bit");

                    b.HasKey("TwemployeeId");

                    b.ToTable("QiMeiEmployeeExamine", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.QiMeiTwEmloyeeUpdate", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Dept")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("EmployeeNO");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Leavel")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Legal")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("MingZi")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Post")
                        .HasMaxLength(180)
                        .IsUnicode(false)
                        .HasColumnType("varchar(180)");

                    b.Property<string>("Sex")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("WhetherJob")
                        .HasMaxLength(46)
                        .IsUnicode(false)
                        .HasColumnType("varchar(46)");

                    b.Property<string>("XingShi")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.ToTable("QiMeiTwEmloyeeUpdate", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.QuitApply", b =>
                {
                    b.Property<int>("QuitApplyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QuitApplyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuitApplyId"));

                    b.Property<string>("Annex")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ApplyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ApplyPeople")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Company")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CredNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Department")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("QuitApplyId");

                    b.ToTable("QuitApply", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ReceivingCarPass", b =>
                {
                    b.Property<int>("ReceiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReceiveID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceiveId"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ReceivePeople")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ReceiveTime")
                        .HasColumnType("datetime");

                    b.HasKey("ReceiveId");

                    b.ToTable("ReceivingCarPass", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ReceivingRecord", b =>
                {
                    b.Property<int>("ReceiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReceiveID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceiveId"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ReceivePeople")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ReceiveTime")
                        .HasColumnType("datetime");

                    b.HasKey("ReceiveId")
                        .HasName("PK_RECEIVINGRECORDS");

                    b.ToTable("ReceivingRecords");
                });

            modelBuilder.Entity("Data.Migration.Models.ReceptionProgram", b =>
                {
                    b.Property<int>("ReceptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReceptionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceptionId"));

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReceptionContent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ReceptionPeople")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ReceptionTime")
                        .HasColumnType("datetime");

                    b.Property<int>("VisitNotCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitNotCustID");

                    b.HasKey("ReceptionId")
                        .HasName("PK_RECEPTIONPROGRAM");

                    b.ToTable("ReceptionProgram", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ReceptionProgramGovernment", b =>
                {
                    b.Property<int>("ReceptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReceptionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceptionId"));

                    b.Property<string>("ReceptionManagePosition")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceptionPlace")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ReceptionPosition")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ReceptionTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<int>("VisitGlistId")
                        .HasColumnType("int")
                        .HasColumnName("VisitGListID");

                    b.HasKey("ReceptionId")
                        .HasName("PK_RECEPTIONPROGRAMGOVERNMENT");

                    b.ToTable("ReceptionProgramGovernment", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.RecovertRecord", b =>
                {
                    b.Property<int>("RecovertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecovertID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecovertId"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<int?>("InvalidId")
                        .HasColumnType("int")
                        .HasColumnName("InvalidID");

                    b.Property<string>("Reasons")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("RecovertTime")
                        .HasColumnType("datetime");

                    b.HasKey("RecovertId")
                        .HasName("PK_RECOVERTRECORDS");

                    b.HasIndex("InvalidId");

                    b.ToTable("RecovertRecords");
                });

            modelBuilder.Entity("Data.Migration.Models.Region", b =>
                {
                    b.Property<long?>("RegionId")
                        .HasColumnType("bigint")
                        .HasColumnName("RegionID");

                    b.Property<string>("RegionName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable("Region", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.RegionHouse", b =>
                {
                    b.Property<int>("RegionHouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RegionHouseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegionHouseId"));

                    b.Property<int?>("AreaRegionId")
                        .HasColumnType("int")
                        .HasColumnName("AreaRegionID");

                    b.Property<int?>("BuildingId")
                        .HasColumnType("int")
                        .HasColumnName("BuildingID");

                    b.HasKey("RegionHouseId");

                    b.ToTable("RegionHouse", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.RemandRecord", b =>
                {
                    b.Property<int>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("Dept")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("QuitApplyId")
                        .HasColumnType("int")
                        .HasColumnName("QuitApplyID");

                    b.Property<string>("Reasons")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("RemandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RemandID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RemandId"));

                    b.Property<DateTime?>("RemandTime")
                        .HasColumnType("datetime");

                    b.ToTable("RemandRecords");
                });

            modelBuilder.Entity("Data.Migration.Models.Request114", b =>
                {
                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("BuCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ContentRequest")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("EmpNameApp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNoApp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ExTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NotesApp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Posision")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UnitApp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("Request114", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Request114Sign", b =>
                {
                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.ToTable("Request114Sign", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.RequestProc114", b =>
                {
                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IP");

                    b.Property<string>("Memo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<string>("ParaCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ProcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProcID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcId"));

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<DateTime?>("WorkTime")
                        .HasColumnType("datetime");

                    b.ToTable("RequestProc114", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.RequestStatus114", b =>
                {
                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Ip")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IP");

                    b.Property<string>("Memo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<string>("ParaCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<DateTime?>("WorkTime")
                        .HasColumnType("datetime");

                    b.ToTable("RequestStatus114", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.SchedulePlan", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ScheduleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<string>("Dept")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Preparation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReceptionPeople")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ScheduleTime")
                        .HasColumnType("datetime");

                    b.Property<int>("VisitCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitCustID");

                    b.Property<string>("VisitLeavel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("VisitStress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ScheduleId")
                        .HasName("PK_SCHEDULEPLAN");

                    b.ToTable("SchedulePlan", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ScrapCar", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("BgId")
                        .HasColumnType("int")
                        .HasColumnName("BgID");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CarWeight")
                        .HasColumnType("int");

                    b.Property<int?>("CarWeightsOld")
                        .HasColumnType("int");

                    b.Property<string>("CardChange")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateEmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CreateEmpID");

                    b.Property<string>("CreateName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreatePhoneNum")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateTimeIn")
                        .HasColumnType("datetime");

                    b.Property<string>("DriverId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DriverID");

                    b.Property<string>("DriverName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("EndTimeValid")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LocationDetail")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("StartTimeValid")
                        .HasColumnType("datetime");

                    b.ToTable("ScrapCar", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ScrapCarAuthority", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("BgId")
                        .HasColumnType("int")
                        .HasColumnName("BgID");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpID");

                    b.Property<string>("EmpNameT")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpNameV")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpNoUpdate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Endtime")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("notes");

                    b.Property<string>("ParaCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RuleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ScrapAuthorityId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ScrapAuthorityID");

                    b.ToTable("ScrapCarAuthority", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ScrapCarContructorAuthority", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("AuthorityId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AuthorityID");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("EmLoyeeNameV")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpLoyeeNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IsActive")
                        .HasColumnType("int");

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<string>("NameAbevation")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ZaloId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ZaloID");

                    b.ToTable("ScrapCarContructor_Authority", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ScrapCarGaReject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpNoId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpNoID");

                    b.Property<int?>("Idpl")
                        .HasColumnType("int")
                        .HasColumnName("IDPL");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ScrapCar_GaReject", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ScrapCarHistoryCheckPass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Idpl")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IDPL");

                    b.Property<string>("PartPass")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Passtime")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.ToTable("ScrapCar_HistoryCheckPass", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ScrapCarIn", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("CarImage01")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CardChange")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreaatePhoneNum")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CreateDepartment")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CreateEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreateEmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CreateEmpID");

                    b.Property<string>("CreateName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DatetimeUpdate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DatetimeUse")
                        .HasColumnType("datetime");

                    b.Property<int?>("DayType")
                        .HasColumnType("int");

                    b.Property<string>("DetailLocation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DriverId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DriverID");

                    b.Property<string>("DriverName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("EndTimeValid")
                        .HasColumnType("datetime");

                    b.Property<int?>("HasRejected")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PartParaCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PartPass")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ScrapCarContructorId")
                        .HasColumnType("int")
                        .HasColumnName("ScrapCarContructorID");

                    b.Property<DateTime?>("StartTimeValid")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Weights")
                        .HasColumnType("int");

                    b.Property<string>("WeightsImage01")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("WeightsOld")
                        .HasColumnType("int");

                    b.ToTable("ScrapCarIn", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ScrapContructorIn", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("BgId")
                        .HasColumnType("int");

                    b.Property<int?>("CarCount")
                        .HasColumnType("int");

                    b.Property<string>("ContructorId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ContructorID");

                    b.Property<string>("ContructorName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CreateEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CreateID");

                    b.Property<string>("CreateName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreatePhoneNum")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DatetimeSign")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IpSign")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<string>("NoteSign")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeUse")
                        .HasColumnType("date");

                    b.ToTable("ScrapContructorIn", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ScrapContructorInListDriver", b =>
                {
                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DriverId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DriverID");

                    b.Property<string>("DriverName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ScrapContructorId")
                        .HasColumnType("int")
                        .HasColumnName("ScrapContructorID");

                    b.ToTable("ScrapContructorIn_ListDriver", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ScrapInconstant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmpNameApp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNoApp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FileInc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Idpl")
                        .HasColumnType("int")
                        .HasColumnName("IDPL");

                    b.Property<string>("Memo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeApplication")
                        .HasColumnType("datetime");

                    b.Property<int?>("WeightInc")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ScrapInconstant", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ScrapInconstantAuthor", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<int?>("Leavel")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ParaCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeAdd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeDelete")
                        .HasColumnType("datetime");

                    b.ToTable("ScrapInconstantAuthor", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ScrapList", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Idlist")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDList");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idlist"));

                    b.Property<string>("Plcode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("PLCode")
                        .IsFixedLength();

                    b.Property<string>("Plname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PLName");

                    b.Property<string>("Unit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable("ScrapList", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ScrapOut", b =>
                {
                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndTimePutToScalse")
                        .HasColumnType("datetime");

                    b.Property<string>("FilePdf")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Idin")
                        .HasColumnType("int")
                        .HasColumnName("IDIN");

                    b.Property<int>("Idpl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDPL");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idpl"));

                    b.Property<string>("Image1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image4")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ImageScrap")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTimePutToScale")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserTime")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.ToTable("ScrapOut", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ScrapOutProc", b =>
                {
                    b.Property<int?>("Act")
                        .HasColumnType("int");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<int?>("Idpl")
                        .HasColumnType("int")
                        .HasColumnName("IDPL");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Memo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ProcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProcID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcId"));

                    b.Property<string>("RuleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<DateTime?>("WorkDate")
                        .HasColumnType("datetime");

                    b.ToTable("ScrapOutProc", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ScrapOutStatus", b =>
                {
                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<int?>("Idpl")
                        .HasColumnType("int")
                        .HasColumnName("IDPL");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Leavel")
                        .HasColumnType("int");

                    b.Property<string>("Memo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ParaCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RuleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<DateTime?>("WorkDate")
                        .HasColumnType("datetime");

                    b.ToTable("ScrapOutStatus", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.SeMerTransfer", b =>
                {
                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("SeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeId"));

                    b.Property<DateTime?>("TimeIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeOut")
                        .HasColumnType("datetime");

                    b.ToTable("SeMerTransfer", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.SecuretyTable", b =>
                {
                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("FormType")
                        .HasColumnType("int");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Memo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SecuretyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SecuretyId"));

                    b.Property<DateTime?>("TimeIn")
                        .HasColumnType("datetime");

                    b.ToTable("SecuretyTable", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.SecurityError", b =>
                {
                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Ider")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDEr");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ider"));

                    b.Property<string>("NameEr")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("PeopleWork")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PosisionErr")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SecurityName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeEr")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToTable("SecurityError", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.SecurityInfor", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DateIn")
                        .HasColumnType("datetime");

                    b.Property<string>("FileAtt")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Idpeople")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("IDPeople");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PosisionWork")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToTable("SecurityInfor", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.SecurityList", b =>
                {
                    b.Property<int>("SecurityListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SecurityListID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SecurityListId"));

                    b.Property<string>("AccidentContent")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("AccidentDept")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AccidentPeople")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AccidentPlace")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("AccidentTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("AccidentTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AccidentTypeID");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("Bg")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("BG");

                    b.Property<string>("DealType")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Fileupload")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Information")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Progress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ResponsePeople")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("SecurityListId");

                    b.ToTable("SecurityList", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.SecurityProcess", b =>
                {
                    b.Property<string>("Forfeit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Ider")
                        .HasColumnType("int")
                        .HasColumnName("IDEr");

                    b.Property<int>("Idsol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDSol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idsol"));

                    b.Property<string>("Purpose")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SolutionName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.ToTable("SecurityProcess", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.SecurityReport", b =>
                {
                    b.Property<int>("SecurityReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SecurityReportID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SecurityReportId"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SignMail")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("SignMeno")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SignName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("SignTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("SecurityReportId");

                    b.ToTable("SecurityReport", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.SecurityReportSigner", b =>
                {
                    b.Property<int>("SecurityReportSignerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SecurityReportSignerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SecurityReportSignerId"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Meno")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("SignEmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SignName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("SecurityReportSignerId");

                    b.ToTable("SecurityReportSigner", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.SecurityTrain", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Idtr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDTr");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idtr"));

                    b.Property<string>("PeopleTrain")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeTrain")
                        .HasColumnType("datetime");

                    b.Property<string>("TrainContent")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Type")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToTable("SecurityTrain", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.SendSm", b =>
                {
                    b.Property<string>("Content")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("SendFlag")
                        .HasColumnType("int");

                    b.Property<string>("SendFlagMemo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SendSmsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SendSMSID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SendSmsid"));

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.ToTable("SendSMS", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.SerialNumber", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SerialNumber1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SerialNumber")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.ToTable("SerialNumber", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Sheet1", b =>
                {
                    b.Property<string>("Arearegionid")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("id");

                    b.Property<string>("Meno")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("meno");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("type");

                    b.ToTable("Sheet1$", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ShuttleVisitor", b =>
                {
                    b.Property<int>("ShuttleVisitorsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ShuttleVisitorsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShuttleVisitorsId"));

                    b.Property<string>("Destination")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ShuttleEndTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("ShuttleNum")
                        .HasColumnType("int");

                    b.Property<string>("ShuttlePeople")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ShuttleStartTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ShuttleTime")
                        .HasColumnType("datetime");

                    b.Property<string>("StartJourney")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("VisitCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitCustID");

                    b.HasKey("ShuttleVisitorsId")
                        .HasName("PK_SHUTTLEVISITORS");

                    b.ToTable("ShuttleVisitors");
                });

            modelBuilder.Entity("Data.Migration.Models.SigStatusChemistry", b =>
                {
                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<int>("ChemistryFormId")
                        .HasColumnType("int")
                        .HasColumnName("ChemistryFormID");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("LevelSigne")
                        .HasColumnType("float");

                    b.Property<string>("Meno")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("SignedStDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SignerId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("SignerID");

                    b.Property<string>("SignerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SignerNameV")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.ToTable("SigStatusChemistry", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.SigStatusChemistry1", b =>
                {
                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<int>("ChemistryFormId")
                        .HasColumnType("int")
                        .HasColumnName("ChemistryFormID");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("LevelSigne")
                        .HasColumnType("float");

                    b.Property<string>("Meno")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("SignedStDate")
                        .HasColumnType("date");

                    b.Property<string>("SignerId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("SignerID");

                    b.Property<string>("SignerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.ToTable("SigStatusChemistry", "faceid");
                });

            modelBuilder.Entity("Data.Migration.Models.SignLog", b =>
                {
                    b.Property<int>("SignLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SignLogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SignLogId"));

                    b.Property<int?>("FormstatusId")
                        .HasColumnType("int")
                        .HasColumnName("FormstatusID");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Meno")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("RollbackId")
                        .HasColumnType("int")
                        .HasColumnName("RollbackID");

                    b.Property<DateTime?>("SignDae")
                        .HasColumnType("datetime");

                    b.Property<string>("SignResult")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("SignLogId");

                    b.ToTable("SignLog", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.SignProcess", b =>
                {
                    b.Property<int>("SignProcessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SignProcessID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SignProcessId"));

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUnderWriteFlow")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("SignAct")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("SignMeno")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("SignTime")
                        .HasColumnType("datetime");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.HasKey("SignProcessId")
                        .HasName("PK_SIGNPROCESS");

                    b.HasIndex(new[] { "Id" }, "NIDX_ID01");

                    b.HasIndex(new[] { "IsDeleted" }, "NIDX_IsDeleted01");

                    b.HasIndex(new[] { "IsUnderWriteFlow" }, "NIDX_IsUnderWriteFlow01");

                    b.HasIndex(new[] { "TypeId" }, "NIDX_TypeID01");

                    b.ToTable("SignProcess", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.SignRole", b =>
                {
                    b.Property<int>("SignRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SignRoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SignRoleId"));

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<int?>("FormType")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RoleEmp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RoleName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("SignRoleId");

                    b.ToTable("SignRole", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.SignStatus", b =>
                {
                    b.Property<int>("SignStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SignStatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SignStatusId"));

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("EmployeeNO");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Meno")
                        .HasMaxLength(600)
                        .IsUnicode(false)
                        .HasColumnType("varchar(600)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RandomNum")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("SignPicture")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("SignTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("SignStatusId")
                        .HasName("PK_SIGNSTATUS");

                    b.ToTable("SignStatus", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.SpareCar", b =>
                {
                    b.Property<int>("SpareCarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SpareCarID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpareCarId"));

                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DriverName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("SpareCarId");

                    b.ToTable("SpareCar", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.SpareCarReport", b =>
                {
                    b.Property<int>("SpareCarReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SpareCarReportID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpareCarReportId"));

                    b.Property<DateTime?>("CreatTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("SpareCarId")
                        .HasColumnType("int")
                        .HasColumnName("SpareCarID");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("SpareCarReportId");

                    b.HasIndex("SpareCarId");

                    b.ToTable("SpareCarReport", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.StatusMer", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Memo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("StatusId");

                    b.ToTable("StatusMer", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.SupplementaryInfo", b =>
                {
                    b.Property<int>("SupplementaryInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SupplementaryInfoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplementaryInfoId"));

                    b.Property<DateTime?>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Bu")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BU");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("EmployeeNO");

                    b.Property<string>("EnglishName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Files")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nation")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Type")
                        .HasColumnType("int")
                        .HasComment("1車輛，2為門禁簽核權限");

                    b.HasKey("SupplementaryInfoId");

                    b.HasIndex("Bgid");

                    b.ToTable("SupplementaryInfo", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Supplier", b =>
                {
                    b.Property<byte[]>("BitImage")
                        .HasColumnType("image");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NChNname")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("N_ChNName");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VendorCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("Supplier", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.TempContact", b =>
                {
                    b.Property<string>("ContactBg")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ContactBG");

                    b.Property<string>("ContactPeople")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactUnitExtension")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmergencyContact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmergencyPhone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NewAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NewApplyPhone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Pid")
                        .HasColumnType("int")
                        .HasColumnName("PID");

                    b.Property<int?>("Zid")
                        .HasColumnType("int")
                        .HasColumnName("ZID");

                    b.ToTable("Temp_Contact", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.TemporaryCredential", b =>
                {
                    b.Property<int>("TemporaryCredentialsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TemporaryCredentialsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemporaryCredentialsId"));

                    b.Property<DateTime?>("ApplicationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ApplicationType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("AreaRegionId")
                        .HasColumnType("int")
                        .HasColumnName("AreaRegionID");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Bu")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Build")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("Content")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Dept")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("FactoryDoor")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Floor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LedPeople")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Office")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceptionDept")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ReceptionExt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ReceptionPeople")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Signoff")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UserMemberId")
                        .HasColumnType("int")
                        .HasColumnName("UserMemberID");

                    b.HasKey("TemporaryCredentialsId")
                        .HasName("PK_TemporaryCredentials_1");

                    b.HasIndex("CompanyId");

                    b.ToTable("TemporaryCredentials");
                });

            modelBuilder.Entity("Data.Migration.Models.TestTable", b =>
                {
                    b.Property<string>("Diachi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mathe")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Memo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Sdt")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Thoigian")
                        .HasColumnType("datetime");

                    b.ToTable("Test_table", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.TestTableSentdata1", b =>
                {
                    b.Property<string>("Data")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("data");

                    b.Property<DateTime?>("DataDate")
                        .HasColumnType("datetime")
                        .HasColumnName("dataDate");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IsCoppy")
                        .HasColumnType("int");

                    b.ToTable("Test_Table_Sentdata1", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.TestTableSentdata2", b =>
                {
                    b.Property<string>("Data")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("data");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.ToTable("Test_Table_Sentdata2", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.TestUploadImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("TestImage")
                        .HasColumnType("image");

                    b.ToTable("TestUploadImage", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ToPrint", b =>
                {
                    b.Property<int>("ToPrintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ToPrintID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToPrintId"));

                    b.Property<string>("ApplyMeno")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("SignAction")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("SignDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SignMeno")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.HasKey("ToPrintId");

                    b.ToTable("ToPrint", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.TotalType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"));

                    b.Property<string>("Meno")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("TypeId");

                    b.ToTable("TotalType", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.TroubleImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Idtrouble")
                        .HasColumnType("int")
                        .HasColumnName("IDTrouble");

                    b.Property<string>("ImageTrouble")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable("TroubleImage", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.TroubleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("TroubleNameCn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TroubleNameCN");

                    b.Property<string>("TroubleNameVn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TroubleNameVN");

                    b.ToTable("TroubleType", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.TtCorona2019ByBg", b =>
                {
                    b.Property<string>("Area")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGid");

                    b.Property<string>("Date")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Dvsn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DVSN");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Namvien")
                        .HasColumnType("int");

                    b.Property<int?>("Nhiem")
                        .HasColumnType("int");

                    b.Property<int?>("RaKtx")
                        .HasColumnType("int")
                        .HasColumnName("RaKTX");

                    b.Property<int?>("Ravien")
                        .HasColumnType("int");

                    b.Property<int?>("Sot")
                        .HasColumnType("int");

                    b.Property<int?>("TheodoiKtx")
                        .HasColumnType("int")
                        .HasColumnName("TheodoiKTX");

                    b.ToTable("TT_Corona2019ByBG", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.TtDichCorona2020", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("Date")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Namvien")
                        .HasColumnType("int");

                    b.Property<int?>("Nhiem")
                        .HasColumnType("int");

                    b.Property<int?>("RaKtx")
                        .HasColumnType("int")
                        .HasColumnName("RaKTX");

                    b.Property<int?>("Ravien")
                        .HasColumnType("int");

                    b.Property<int?>("Sot")
                        .HasColumnType("int");

                    b.Property<int?>("TheodoiKtx")
                        .HasColumnType("int")
                        .HasColumnName("TheodoiKTX");

                    b.ToTable("TT_DichCorona2020", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Ttt", b =>
                {
                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("DoorPowerManageId")
                        .HasColumnType("int")
                        .HasColumnName("DoorPowerManageID");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<long?>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    b.Property<int>("Tag")
                        .HasColumnType("int");

                    b.ToTable("TTT", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Twemployee", b =>
                {
                    b.Property<string>("Bg")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("BG");

                    b.Property<string>("Bu")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BU");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Dept")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Leavel")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Legal")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Name")
                        .HasMaxLength(240)
                        .HasColumnType("nvarchar(240)");

                    b.Property<string>("Post")
                        .HasMaxLength(180)
                        .IsUnicode(false)
                        .HasColumnType("varchar(180)");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit");

                    b.Property<string>("Source")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TwemployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TWEmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TwemployeeId"));

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("WhetherJob")
                        .HasColumnType("bit");

                    b.ToTable("TWEmployee", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.TwemployeeBack", b =>
                {
                    b.Property<string>("Bg")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("BG");

                    b.Property<string>("Bu")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BU");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Dept")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Leavel")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Legal")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Name")
                        .HasMaxLength(240)
                        .IsUnicode(false)
                        .HasColumnType("varchar(240)");

                    b.Property<string>("Post")
                        .HasMaxLength(180)
                        .IsUnicode(false)
                        .HasColumnType("varchar(180)");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit");

                    b.Property<string>("Source")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TwemployeeId")
                        .HasColumnType("int")
                        .HasColumnName("TWEmployeeID");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("WhetherJob")
                        .HasColumnType("bit");

                    b.ToTable("TWEmployeeBack", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.TwemployeeUpdate", b =>
                {
                    b.Property<string>("Bg")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("BG");

                    b.Property<string>("Bu")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BU");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Dept")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Leavel")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Legal")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Name")
                        .HasMaxLength(240)
                        .IsUnicode(false)
                        .HasColumnType("varchar(240)");

                    b.Property<string>("Post")
                        .HasMaxLength(180)
                        .IsUnicode(false)
                        .HasColumnType("varchar(180)");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit");

                    b.Property<string>("Source")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TwemployeeId")
                        .HasColumnType("int")
                        .HasColumnName("TWEmployeeID");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("WhetherJob")
                        .HasColumnType("bit");

                    b.ToTable("TWEmployeeUpdate", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.TwemployeeUpdateBack", b =>
                {
                    b.Property<string>("Bg")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("BG");

                    b.Property<string>("Bu")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BU");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Dept")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<DateTime?>("EnterDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Leavel")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Legal")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Name")
                        .HasMaxLength(240)
                        .IsUnicode(false)
                        .HasColumnType("varchar(240)");

                    b.Property<string>("Post")
                        .HasMaxLength(180)
                        .IsUnicode(false)
                        .HasColumnType("varchar(180)");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit");

                    b.Property<string>("Source")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TwemployeeId")
                        .HasColumnType("int")
                        .HasColumnName("TWEmployeeID");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("WhetherJob")
                        .HasColumnType("bit");

                    b.ToTable("TWEmployeeUpdateBack", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.TypeConfig", b =>
                {
                    b.Property<int>("TypeConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TypeConfigID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeConfigId"));

                    b.Property<string>("Meno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TypeConfigName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TypeConfigId");

                    b.ToTable("TypeConfig", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.UnderWriteFlow", b =>
                {
                    b.Property<int>("UnderWriteFlowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UnderWriteFlowID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnderWriteFlowId"));

                    b.Property<string>("CreateEmployeeNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Leavel")
                        .HasColumnType("int")
                        .HasColumnName("leavel");

                    b.Property<string>("Meno")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("order");

                    b.Property<string>("ParameterCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.Property<DateTime?>("UnderWriteDate")
                        .HasColumnType("datetime");

                    b.HasKey("UnderWriteFlowId")
                        .HasName("PK_UNDERWRITEFLOW");

                    b.ToTable("UnderWriteFlow", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.UnderWriteModel", b =>
                {
                    b.Property<int>("UnderWriteModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UnderWriteModelID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnderWriteModelId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModeMeno")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ModelName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("UnderWriteFlowId")
                        .HasColumnType("int")
                        .HasColumnName("UnderWriteFlowID");

                    b.HasKey("UnderWriteModelId");

                    b.ToTable("UnderWriteModel", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.UnderWriteNoClosed", b =>
                {
                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("carNumber");

                    b.Property<int>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("CertifiCateName")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("CertificatesControlStatus")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InureStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.Property<string>("WorkType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("UnderWriteNoClosed", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.UnderWriteRecord", b =>
                {
                    b.Property<int>("UnderWriteRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UnderWriteRecordID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnderWriteRecordId"));

                    b.Property<bool>("IsAvailability")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Meno")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("RecordDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Result")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.Property<int>("UnderWriteFlowId")
                        .HasColumnType("int")
                        .HasColumnName("UnderWriteFlowID");

                    b.HasKey("UnderWriteRecordId");

                    b.ToTable("UnderWriteRecord", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.UnderWriteType", b =>
                {
                    b.Property<int>("UnderWriteTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UnderWriteTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnderWriteTypeId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UnderWriteTypeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UnderWriteTypeId");

                    b.ToTable("UnderWriteType", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Untitled3", b =>
                {
                    b.Property<int>("RowNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RowNumber"));

                    b.Property<string>("ApplicationName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("image");

                    b.Property<int?>("ClientProcessId")
                        .HasColumnType("int")
                        .HasColumnName("ClientProcessID");

                    b.Property<int?>("Cpu")
                        .HasColumnType("int")
                        .HasColumnName("CPU");

                    b.Property<long?>("Duration")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("EventClass")
                        .HasColumnType("int");

                    b.Property<string>("LoginName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("NtuserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("NTUserName");

                    b.Property<long?>("Reads")
                        .HasColumnType("bigint");

                    b.Property<int?>("Spid")
                        .HasColumnType("int")
                        .HasColumnName("SPID");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("TextData")
                        .HasColumnType("ntext");

                    b.Property<long?>("Writes")
                        .HasColumnType("bigint");

                    b.HasKey("RowNumber")
                        .HasName("PK__Untitled - 3__473666D9");

                    b.ToTable("Untitled - 3", "db_owner");
                });

            modelBuilder.Entity("Data.Migration.Models.UpdateScrap", b =>
                {
                    b.Property<string>("EmpNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Idin")
                        .HasColumnType("int")
                        .HasColumnName("IDIn");

                    b.Property<string>("Image1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image4")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeUpdate")
                        .HasColumnType("datetime");

                    b.ToTable("UpdateScrap", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Url", b =>
                {
                    b.Property<int>("UrlLid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UrlLID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrlLid"));

                    b.Property<double?>("Arrangement")
                        .HasColumnType("float");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Url1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Url");

                    b.Property<string>("UrlTitel")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("UrlLid")
                        .HasName("PK_URL");

                    b.ToTable("Url", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.UserBeforeLoding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<int>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Bucode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BUCode");

                    b.Property<int?>("CheckDelete")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Password")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserBeforeLodingId")
                        .HasColumnType("int")
                        .HasColumnName("UserBeforeLodingID");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserBeforeLoding", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Bgid = 0,
                            ConcurrencyStamp = "69683ade-bac6-4fec-a69c-f984dc261cba",
                            CreateTime = new DateTime(2023, 1, 3, 9, 50, 7, 585, DateTimeKind.Local).AddTicks(7186),
                            EmailConfirmed = false,
                            EmployeeName = "Hà",
                            EmployeeNo = "V0515311",
                            IsDeleted = false,
                            LockoutEnabled = false,
                            Notes = "test@gmail.com",
                            Password = "1234567Aa",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserBeforeLodingId = 1
                        });
                });

            modelBuilder.Entity("Data.Migration.Models.UserIdzalo", b =>
                {
                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("UserID");

                    b.ToTable("UserIDZalo", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.UserMember", b =>
                {
                    b.Property<int>("UserMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserMemberID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserMemberId"));

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<string>("Ext")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("RePwdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("UserMemberId");

                    b.ToTable("UserMember", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VCarWhiteInfo", b =>
                {
                    b.Property<string>("CarNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Credentialstype")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("credentialstype");

                    b.ToTable((string)null);

                    b.ToView("V_CarWhiteInfo", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VNewNcarToDriver", b =>
                {
                    b.Property<string>("Carcardid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("carcardid");

                    b.Property<string>("Carcardno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("carcardno");

                    b.Property<string>("Carlicense")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("carlicense");

                    b.Property<string>("Driveridno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("driveridno");

                    b.Property<string>("Drivername")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("drivername");

                    b.Property<int>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("flag");

                    b.Property<byte[]>("Fp1")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("fp1");

                    b.Property<byte[]>("Fp2")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("fp2");

                    b.Property<byte[]>("Fp3")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("fp3");

                    b.Property<int?>("Fp4")
                        .HasColumnType("int")
                        .HasColumnName("fp4");

                    b.Property<string>("Usercardid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usercardid");

                    b.Property<string>("Usercardno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usercardno");

                    b.ToTable((string)null);

                    b.ToView("V_NewNCarToDriver", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VeQuestionnaire", b =>
                {
                    b.Property<int>("QuestionnaireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionnaireId"));

                    b.Property<string>("Area")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AreaName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Building")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DateNumber")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Filepath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("Isdelete")
                        .HasColumnType("int")
                        .HasColumnName("ISDelete");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Result")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("QuestionnaireId");

                    b.ToTable("VeQuestionnaire", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VehicleCardRecord", b =>
                {
                    b.Property<string>("Bak")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BAK");

                    b.Property<string>("CarBrand")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CarType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DriverName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Stime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("VehicleCardRecord", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VehicleImportRecordFstTier", b =>
                {
                    b.Property<string>("Bak")
                        .HasMaxLength(17)
                        .IsUnicode(false)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("BAK");

                    b.Property<string>("CarNum")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("car_num");

                    b.Property<string>("Id")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("ID");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("imagePath");

                    b.Property<int>("Mid")
                        .HasColumnType("int");

                    b.Property<byte?>("OpenState")
                        .HasColumnType("tinyint")
                        .HasColumnName("openState");

                    b.Property<string>("SDir")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("S_DIR");

                    b.Property<string>("Stime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("VehicleImportRecord_FstTier", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VehicleImportRecordFstTierHistory", b =>
                {
                    b.Property<string>("Bak")
                        .HasMaxLength(17)
                        .IsUnicode(false)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("BAK");

                    b.Property<string>("CarNum")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("car_num");

                    b.Property<string>("Id")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("ID");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("imagePath");

                    b.Property<int>("Mid")
                        .HasColumnType("int");

                    b.Property<byte?>("OpenState")
                        .HasColumnType("tinyint")
                        .HasColumnName("openState");

                    b.Property<string>("SDir")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("S_DIR");

                    b.Property<string>("Stime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("VehicleImportRecord_FstTier_History", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VehicleImportRecordFstTierTemp", b =>
                {
                    b.Property<string>("Bak")
                        .HasMaxLength(17)
                        .IsUnicode(false)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("BAK");

                    b.Property<string>("CarNum")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("car_num");

                    b.Property<string>("Id")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("ID");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("imagePath");

                    b.Property<int>("Mid")
                        .HasColumnType("int");

                    b.Property<byte?>("OpenState")
                        .HasColumnType("tinyint")
                        .HasColumnName("openState");

                    b.Property<string>("SDir")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("S_DIR");

                    b.Property<string>("Stime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("VehicleImportRecord_FstTier_Temp", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VehicleImportRecordLhaqdm", b =>
                {
                    b.Property<string>("Bak")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("BAK");

                    b.Property<string>("CarNum")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("car_num");

                    b.Property<string>("Id")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("ID");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("imagePath");

                    b.Property<int>("Mid")
                        .HasColumnType("int");

                    b.Property<byte?>("OpenState")
                        .HasColumnType("tinyint")
                        .HasColumnName("openState");

                    b.Property<string>("SDir")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("S_DIR");

                    b.Property<string>("Stime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("VehicleImportRecord_LHAQDM", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VehiclePeriod", b =>
                {
                    b.Property<int>("VehiclePeriodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VehiclePeriodID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehiclePeriodId"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("IsBeChecked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LotNumberDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VehiclePeriodNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("VehiclePermitId")
                        .HasColumnType("int")
                        .HasColumnName("VehiclePermitID");

                    b.HasKey("VehiclePeriodId");

                    b.ToTable("VehiclePeriod", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VehiclePermit", b =>
                {
                    b.Property<int>("VehiclePermitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VehiclePermitID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehiclePermitId"));

                    b.Property<string>("AreaCard")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AreaID")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ArrangeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ArrangeNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ArrangeTelephone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Caption")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("CarBrand")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CarType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("ContactUnit")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ContractEndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ControlStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CredentialsType")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("DriverEmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DriverName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmergencyContact")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmergencyContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Ext")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("File")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InureStartDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFind")
                        .HasColumnType("bit");

                    b.Property<string>("LicenseNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NameCn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NameCN");

                    b.Property<string>("OrtherContact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PhotoId")
                        .HasColumnType("int")
                        .HasColumnName("PhotoID");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Signoff")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Signoff2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.Property<string>("WorkType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("VehiclePermitId");

                    b.ToTable("VehiclePermit", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VehiclePermitAppend", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("ArrangeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ArrangeNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ArrangeTelephone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Caption")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("CarBrand")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CarType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("ContactUnit")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ContractEndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ControlStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CredentialsType")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("DriverEmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DriverName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmergencyContact")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmergencyContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Ext")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("File")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InureStartDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFind")
                        .HasColumnType("bit");

                    b.Property<string>("LicenseNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OrtherContact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PhotoId")
                        .HasColumnType("int")
                        .HasColumnName("PhotoID");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Signoff")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Signoff2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("VehiclePermitId")
                        .HasColumnType("int")
                        .HasColumnName("VehiclePermitID");

                    b.Property<string>("WorkType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("VehiclePermitAppend", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VehiclePermitEmployee", b =>
                {
                    b.Property<int>("VehiclePermitEid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VehiclePermitEID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehiclePermitEid"));

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("VehiclePermitEid")
                        .HasName("PK_VEHICLEPERMITEMPLOYEE");

                    b.ToTable("VehiclePermitEmployee", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VehiclePermitHistory", b =>
                {
                    b.Property<string>("AreaCard")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("ArrangeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ArrangeNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ArrangeTelephone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Caption")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("CarBrand")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CarType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("ContactUnit")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ContractEndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ControlStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CredentialsType")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("DriverEmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DriverName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmergencyContact")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmergencyContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Ext")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("File")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InureStartDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFind")
                        .HasColumnType("bit");

                    b.Property<string>("LicenseNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NameCn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NameCN");

                    b.Property<string>("OrtherContact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PhotoId")
                        .HasColumnType("int")
                        .HasColumnName("PhotoID");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Signoff")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Signoff2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("VehiclePermitId")
                        .HasColumnType("int")
                        .HasColumnName("VehiclePermitID");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.Property<string>("WorkType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("VehiclePermitHistory", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VehiclePermitPhoto", b =>
                {
                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("PhotoId")
                        .HasColumnType("int")
                        .HasColumnName("PhotoID");

                    b.Property<int?>("VehiclePermitId")
                        .HasColumnType("int")
                        .HasColumnName("VehiclePermitID");

                    b.Property<int>("VehiclePermitPhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VehiclePermitPhotoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehiclePermitPhotoId"));

                    b.ToTable("VehiclePermitPhoto", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VehiclePermitValid", b =>
                {
                    b.Property<string>("AreaCard")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("ArrangeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ArrangeNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ArrangeTelephone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Caption")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("CarBrand")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CarType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CardID")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("ContactUnit")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ContractEndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ControlStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CredentialsType")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("DriverEmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DriverName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmergencyContact")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmergencyContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Ext")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("File")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InureStartDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsFind")
                        .HasColumnType("bit");

                    b.Property<string>("LicenseNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NameCn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NameCN");

                    b.Property<string>("OrtherContact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PhotoId")
                        .HasColumnType("int")
                        .HasColumnName("PhotoID");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Signoff")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Signoff2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("VehiclePermitId")
                        .HasColumnType("int")
                        .HasColumnName("VehiclePermitID");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.Property<string>("WorkType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("VehiclePermitValid", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VehiclePersonnel", b =>
                {
                    b.Property<int>("VehiclePid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VehiclePID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehiclePid"));

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("MatchTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("VehiclePermitId")
                        .HasColumnType("int")
                        .HasColumnName("VehiclePermitID");

                    b.HasKey("VehiclePid")
                        .HasName("PK_VEHICLEPERSONNEL");

                    b.HasIndex("VehiclePermitId");

                    b.ToTable("VehiclePersonnel");
                });

            modelBuilder.Entity("Data.Migration.Models.VehiclesEmployee", b =>
                {
                    b.Property<int>("VehiclesEmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VehiclesEmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehiclesEmployeeId"));

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("VehiclesEmployeeId");

                    b.ToTable("VehiclesEmployee", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VendorCardView", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("Bill")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CarColor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("CarType")
                        .HasColumnType("int");

                    b.Property<string>("CarTypeOther")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CardArea")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CertifiCateName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ExcTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Idpeople")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("IDPeople");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InureStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ItemImage")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NameAbbreviation")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("NameCn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NameCN");

                    b.Property<string>("NameVn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NameVN");

                    b.Property<int?>("RangeCar")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeApplication")
                        .HasColumnType("datetime");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.Property<int?>("WeightCar")
                        .HasColumnType("int");

                    b.Property<string>("WorkTypeName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToTable((string)null);

                    b.ToView("VendorCardView", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViTest", b =>
                {
                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Dept")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Reasons")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("RemandId")
                        .HasColumnType("int")
                        .HasColumnName("RemandID");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vi_Test", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewAllCredential", b =>
                {
                    b.Property<int>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NameAbbreviation")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.ToTable((string)null);

                    b.ToView("View_AllCredentials", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewAreaRegionByCard", b =>
                {
                    b.Property<string>("AreaId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AreaID");

                    b.Property<string>("AreaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("View_AreaRegionByCard", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewAreaRegionByCrendential", b =>
                {
                    b.Property<string>("Aidarid")
                        .HasMaxLength(41)
                        .IsUnicode(false)
                        .HasColumnType("varchar(41)")
                        .HasColumnName("AIDARID");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("ShortRegion")
                        .HasMaxLength(71)
                        .IsUnicode(false)
                        .HasColumnType("varchar(71)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("View_AreaRegionByCrendentials", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewBg", b =>
                {
                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Bgname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BGName");

                    b.ToTable((string)null);

                    b.ToView("View_BG", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewCapassForScrapCaIn", b =>
                {
                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DriverName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("View_CapassForScrapCaIn", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewCarPass", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("Bill")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CarColor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("CarType")
                        .HasColumnType("int");

                    b.Property<string>("CardArea")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CertifiCateName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ExcTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Idpeople")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("IDPeople");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InureStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NameAbbreviation")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("NameCn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NameCN");

                    b.Property<string>("NameVn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NameVN");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeApplication")
                        .HasColumnType("datetime");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.Property<int?>("WeightCar")
                        .HasColumnType("int");

                    b.Property<string>("WorkTypeName")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.ToTable((string)null);

                    b.ToView("ViewCarPass", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewCardChange", b =>
                {
                    b.Property<string>("Applicant")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("AreaCard")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ContactPhoneNum")
                        .HasColumnType("int");

                    b.Property<int>("CredentialdelayNewId")
                        .HasColumnType("int")
                        .HasColumnName("CredentialdelayNewID");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("EndTimeNew")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("ViewCardChange", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewCardNumber", b =>
                {
                    b.Property<string>("CarNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MaDon")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.ToTable((string)null);

                    b.ToView("ViewCardNumber", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewCardWithCardId", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("Bill")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CarColor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("CarType")
                        .HasColumnType("int");

                    b.Property<string>("CardArea")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CertifiCateName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ExcTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Idpeople")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("IDPeople");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InureStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NameAbbreviation")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("NameCn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NameCN");

                    b.Property<string>("NameVn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NameVN");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeApplication")
                        .HasColumnType("datetime");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.Property<int?>("WeightCar")
                        .HasColumnType("int");

                    b.Property<string>("WorkTypeName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToTable((string)null);

                    b.ToView("ViewCardWithCardID", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewColorTypeCard", b =>
                {
                    b.Property<string>("AreaCard")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ColorType")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Idcard")
                        .HasColumnType("int")
                        .HasColumnName("IDCard");

                    b.Property<string>("ImageFile")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameCn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NameCN");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TableType")
                        .HasColumnType("int");

                    b.Property<int>("TypeCard")
                        .HasColumnType("int");

                    b.Property<string>("WorkTypeNameC")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("WorkTypeNameV")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToTable((string)null);

                    b.ToView("View_ColorTypeCard", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewControlCar", b =>
                {
                    b.Property<string>("CarNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ControlName")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("CredentialsNumber")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(511)
                        .IsUnicode(false)
                        .HasColumnType("varchar(511)");

                    b.ToTable((string)null);

                    b.ToView("View_ControlCar", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewControlPerson", b =>
                {
                    b.Property<string>("ControlName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreateTime")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Reason")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("SourceTag")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("source_tag");

                    b.ToTable((string)null);

                    b.ToView("View_ControlPeople", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewContruc", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("ContenAction")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("NameConstruc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Office")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeApplication")
                        .HasColumnType("datetime");

                    b.Property<int>("TypeApp")
                        .HasColumnType("int");

                    b.Property<string>("UnitApplication")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.ToTable((string)null);

                    b.ToView("View_Contruc", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewCredential", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("Bill")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("carNumber");

                    b.Property<int>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("CertifiCateName")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<int>("ControlStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InureStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.Property<string>("WorkType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("View_Credentials", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewCredential1", b =>
                {
                    b.Property<int>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("ComName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NameAbbreviation")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.ToTable((string)null);

                    b.ToView("ViewCredentials", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewCredentialListCardNumAll", b =>
                {
                    b.Property<DateTime?>("AdminCreateCardTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AdminSignTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("AreaCard")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("AreaCardNew")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyNewName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyOldName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CredentialdelayNewId")
                        .HasColumnType("int")
                        .HasColumnName("CredentialdelayNewID");

                    b.Property<DateTime?>("EndTimeNew")
                        .HasColumnType("datetime");

                    b.Property<string>("FileAttack")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("FormType")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("ImageFile")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NotesForSign")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReceivedName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ReceivedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Signer")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TableType")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("View_CredentialListCardNumAll", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewCustWorkCredential", b =>
                {
                    b.Property<int>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<int>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<string>("CensusAddress")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("ContactUnit")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactUnitExtension")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactUnitPerson")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactUnitPhone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ControlStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CustWorkCredentialsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustWorkCredentialsID");

                    b.Property<string>("EmergencyContact")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmergencyContactPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EmployeeNO");

                    b.Property<string>("File")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InureStartDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NowAddress")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit");

                    b.Property<string>("Signoff")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Signoff2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("WorkCaption")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WorkType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("View_CustWorkCredentials", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewCustomerCard", b =>
                {
                    b.Property<byte[]>("BitImage")
                        .HasColumnType("image");

                    b.Property<string>("CertifiCateName")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NameAbbreviation")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("View_CustomerCard", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewDoorPowerManageBguser", b =>
                {
                    b.Property<int>("AdminId")
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    b.Property<int>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Bgname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BGName");

                    b.Property<int?>("BgsetupItemId")
                        .HasColumnType("int")
                        .HasColumnName("BGSetupItemID");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PowerAdminId")
                        .HasColumnType("int")
                        .HasColumnName("PowerAdminID");

                    b.Property<int?>("PowerListId")
                        .HasColumnType("int")
                        .HasColumnName("PowerListID");

                    b.Property<string>("PowerName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PowerNum")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable((string)null);

                    b.ToView("View_DoorPowerManageBGUser", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewDriverCardMatch", b =>
                {
                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPdateTime")
                        .HasDefaultValueSql("(getdate())");

                    b.ToTable("View_DriverCardMatch", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewDriverCardMatch1", b =>
                {
                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("View_DriverCardMatch1", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewDriverCardMatchTemp", b =>
                {
                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("View_DriverCardMatchTemp", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewEmployeeCar", b =>
                {
                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CertifiCateName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NameAbbreviation")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TelPhone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("telPhone");

                    b.ToTable((string)null);

                    b.ToView("View_EmployeeCar", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewExternalCar", b =>
                {
                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("carNumber");

                    b.Property<string>("CertifiCateName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NameAbbreviation")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TelPhone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("telPhone");

                    b.ToTable((string)null);

                    b.ToView("View_ExternalCar", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewIntent", b =>
                {
                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<string>("AuditName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContenAction")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EmpNameApp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Ida")
                        .HasColumnType("int")
                        .HasColumnName("IDA");

                    b.Property<string>("NameAcc")
                        .HasMaxLength(72)
                        .IsUnicode(false)
                        .HasColumnType("varchar(72)");

                    b.Property<string>("NameConstruc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NameVendor")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Office")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Posision")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ProType")
                        .HasColumnType("int");

                    b.Property<int?>("SendMess")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeApplication")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Timesign")
                        .HasColumnType("datetime")
                        .HasColumnName("timesign");

                    b.Property<int>("Typeid")
                        .HasColumnType("int");

                    b.Property<string>("UnitApplication")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToTable((string)null);

                    b.ToView("View_Intent", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewNblacklist", b =>
                {
                    b.Property<string>("Applyname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("applyname");

                    b.Property<string>("Approver")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("approver");

                    b.Property<string>("Blacktype")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("blacktype");

                    b.Property<int>("Blid")
                        .HasColumnType("int")
                        .HasColumnName("blid");

                    b.Property<int?>("Cardid")
                        .HasColumnType("int")
                        .HasColumnName("cardid");

                    b.Property<string>("Cardnumber")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cardnumber");

                    b.Property<string>("Cardnumber1")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cardnumber1");

                    b.Property<string>("Cardtype")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cardtype");

                    b.Property<string>("Cause")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("cause");

                    b.Property<string>("Explain")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("explain");

                    b.Property<string>("Imgurl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("imgurl");

                    b.Property<string>("Inuredate")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("inuredate");

                    b.Property<string>("Isright")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("isright")
                        .IsFixedLength();

                    b.Property<string>("Lasteditby")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("lasteditby");

                    b.Property<DateTime?>("Lasteditdt")
                        .HasColumnType("datetime")
                        .HasColumnName("lasteditdt");

                    b.Property<string>("Oldcardstatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("oldcardstatus");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("remark");

                    b.Property<string>("Sex")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sex");

                    b.Property<string>("SourceTag")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("source_tag");

                    b.ToTable((string)null);

                    b.ToView("View_nblacklist", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewNcarBlackList", b =>
                {
                    b.Property<string>("Approver")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("approver");

                    b.Property<string>("Blacktype")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("blacktype");

                    b.Property<int>("Blid")
                        .HasColumnType("int")
                        .HasColumnName("blid");

                    b.Property<string>("Carcolor")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("carcolor");

                    b.Property<int?>("Cardid")
                        .HasColumnType("int")
                        .HasColumnName("cardid");

                    b.Property<string>("Carlicense")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("carlicense");

                    b.Property<string>("Carmodel")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("carmodel");

                    b.Property<string>("Cause")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cause");

                    b.Property<DateTime?>("Editdate")
                        .HasColumnType("datetime")
                        .HasColumnName("editdate");

                    b.Property<string>("Edituser")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("edituser");

                    b.Property<string>("Explain")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("explain");

                    b.Property<DateTime?>("Inuredate")
                        .HasColumnType("datetime")
                        .HasColumnName("inuredate");

                    b.Property<string>("Isdelete")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("isdelete");

                    b.Property<string>("Iseffective")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("iseffective");

                    b.Property<string>("Oldcardstatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("oldcardstatus");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("remark");

                    b.ToTable((string)null);

                    b.ToView("View_NCarBlackList", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewNote", b =>
                {
                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("ViewNotes", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewOldClcard", b =>
                {
                    b.Property<string>("Cardname")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("cardname");

                    b.Property<string>("Carlicense")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("carlicense");

                    b.Property<string>("Idno")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("idno");

                    b.ToTable((string)null);

                    b.ToView("View_Old_CLCard", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewOldNcomeuser", b =>
                {
                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Cardno")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cardno");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ecardno")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ecardno");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.ToTable("View_Old_ncomeuser", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewOldNcomeuserTemp", b =>
                {
                    b.Property<string>("Cardno")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CARDNO");

                    b.Property<string>("Cardnumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cardnumber");

                    b.Property<string>("Companyname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("companyname");

                    b.Property<string>("Ecardno")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ecardno");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.ToTable((string)null);

                    b.ToView("View_Old_ncomeuserTemp", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewOldNcomeuserTemp1", b =>
                {
                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Cardno")
                        .HasColumnType("int")
                        .HasColumnName("cardno");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ecardno")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ecardno");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.ToTable("View_Old_ncomeuserTemp1", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewOldNcomeuserTemp20141211old", b =>
                {
                    b.Property<string>("Cardno")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CARDNO")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Cardnumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cardnumber");

                    b.Property<string>("Companyname")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("COMPANYNAME");

                    b.Property<string>("Ecardno")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ecardno");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.ToTable((string)null);

                    b.ToView("View_Old_ncomeuserTemp20141211old", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewOldNusercard", b =>
                {
                    b.Property<string>("CardNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Cardno")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cardno");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ecardno")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ecardno");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.ToTable("View_Old_nusercard", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewOldNusercardTemp", b =>
                {
                    b.Property<string>("CardNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Cardno")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cardno");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ecardno")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ecardno");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.ToTable((string)null);

                    b.ToView("View_Old_nusercardTemp", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewOldNusercardTemp1", b =>
                {
                    b.Property<string>("CardNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Cardno")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cardno");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ecardno")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ecardno");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.ToTable("View_Old_nusercardTemp1", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewOldZccard", b =>
                {
                    b.Property<string>("Cardname")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("cardname");

                    b.Property<string>("Idno")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("idno");

                    b.ToTable((string)null);

                    b.ToView("View_Old_ZCCard", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewOndytyApprove", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("AreaShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("FrameTime")
                        .HasColumnType("int");

                    b.Property<int>("Idsign")
                        .HasColumnType("int")
                        .HasColumnName("IDsign");

                    b.Property<string>("LocationDetailName")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("LocationId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LocationID");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RuleDetailName")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("TimeCheck")
                        .HasColumnType("datetime");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.ToTable((string)null);

                    b.ToView("View_OndytyApprove", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewPeopleList", b =>
                {
                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Idno")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("IDNo");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("View_PeopleList", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewPllistScrapOut", b =>
                {
                    b.Property<int?>("Idcode")
                        .HasColumnType("int")
                        .HasColumnName("IDCode");

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ScrapId")
                        .HasColumnType("int")
                        .HasColumnName("ScrapID");

                    b.Property<DateTime?>("TimeUp")
                        .HasColumnType("datetime");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TypeNameAbre")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<string>("Unit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength();

                    b.Property<int?>("Weights")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("View_PLListScrapOut", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewRentalCar", b =>
                {
                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("carNumber");

                    b.Property<string>("CertifiCateName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NameAbbreviation")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TelPhone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("telPhone");

                    b.ToTable((string)null);

                    b.ToView("View_RentalCar", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewSafeCheckHistoryCheck", b =>
                {
                    b.Property<DateTime?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeID");

                    b.Property<int?>("FrameTime")
                        .HasColumnType("int");

                    b.Property<int?>("HistoryCheckbyplantId")
                        .HasColumnType("int")
                        .HasColumnName("HistoryCheckbyplantID");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Image")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("LocationID");

                    b.Property<string>("MacId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MacID");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("View_SafeCheck_HistoryCheck", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewSafeCheckHistorycheckByPlant", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Frametime")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("View_SafeCheck_HistorycheckByPlant", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewSafeCheckResultCheckP", b =>
                {
                    b.Property<int?>("HistoryCheckId")
                        .HasColumnType("int")
                        .HasColumnName("HistoryCheckID");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("NameAbevation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Passed")
                        .HasColumnType("bit");

                    b.Property<int?>("RuleId")
                        .HasColumnType("int")
                        .HasColumnName("RuleID");

                    b.ToTable((string)null);

                    b.ToView("View_SafeCheck_ResultCheckP", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewSafeCheckUser", b =>
                {
                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EditTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmpNoCreate")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("UserType")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("View_SafeCheck_Users", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewScrapCarReceiveMesZalo", b =>
                {
                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int?>("BgId")
                        .HasColumnType("int")
                        .HasColumnName("BgID");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmpID");

                    b.Property<string>("EmpNameT")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpNameV")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("RuleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ScrapAuthorityId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ScrapAuthorityID");

                    b.Property<string>("ZaloId")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ZaloID");

                    b.ToTable((string)null);

                    b.ToView("View_ScrapCarReceiveMesZalo", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewSearchSign", b =>
                {
                    b.Property<string>("EmpNameSign")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpNoSign")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Madon")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeApp")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeSign")
                        .HasColumnType("datetime");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.Property<string>("Typename")
                        .IsRequired()
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)")
                        .HasColumnName("typename");

                    b.ToTable((string)null);

                    b.ToView("ViewSearchSign", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewSmartList", b =>
                {
                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("View_SmartList", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewSupplierCard", b =>
                {
                    b.Property<byte[]>("BitImage")
                        .HasColumnType("image");

                    b.Property<string>("CertifiCateName")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NameAbbreviation")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("View_SupplierCard", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewSwipingCardCheck", b =>
                {
                    b.Property<string>("AreaId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("areaID");

                    b.Property<string>("AreaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("BitImage")
                        .HasColumnType("image");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CardStatus")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyStatus")
                        .HasColumnType("int");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.ToTable("View_SwipingCardCheck", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewSwipingCardCheckTemp", b =>
                {
                    b.Property<string>("AreaId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("areaID");

                    b.Property<string>("AreaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("BitImage")
                        .HasColumnType("image");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CardStatus")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyStatus")
                        .HasColumnType("int");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("View_SwipingCardCheckTemp", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewSwipingCardCheckTemp1", b =>
                {
                    b.Property<string>("AreaId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AreaID");

                    b.Property<string>("AreaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("BitImage")
                        .HasColumnType("image");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CardStatus")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyStatus")
                        .HasColumnType("int");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("View_SwipingCardCheckTemp1", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewTest01kk", b =>
                {
                    b.Property<string>("ComporationId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ComporationID");

                    b.Property<string>("ImExPortProductId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ImExPortProductID");

                    b.Property<int?>("Tatal")
                        .HasColumnType("int")
                        .HasColumnName("tatal");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("View_test01kk", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewTest01kkBuf", b =>
                {
                    b.Property<string>("CarNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ComporationId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ComporationID");

                    b.Property<string>("DriverId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DriverID");

                    b.Property<string>("DriverName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImExPortProductId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ImExPortProductID");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("View_test01kkBuf", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewUser", b =>
                {
                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("ViewUser", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewVehicleCardCheck", b =>
                {
                    b.Property<string>("AreaId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AreaID");

                    b.Property<string>("AreaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CardStatus")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyStatus")
                        .HasColumnType("int");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.ToTable("View_VehicleCardCheck", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewVehicleCardCheck1", b =>
                {
                    b.Property<string>("AreaId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AreaID");

                    b.Property<string>("AreaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CardStatus")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyStatus")
                        .HasColumnType("int");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("View_VehicleCardCheck1", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewVehicleCardCheckTemp", b =>
                {
                    b.Property<string>("AreaId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AreaID");

                    b.Property<string>("AreaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CardStatus")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyStatus")
                        .HasColumnType("int");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("InureEndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("View_VehicleCardCheckTemp", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewVehiclePermitEmployee", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("ViewVehiclePermitEmployee", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewVendorCard", b =>
                {
                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CardArea")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("cardID");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CardType")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("PersonId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PersonID");

                    b.Property<string>("PersonName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tableName");

                    b.Property<int>("TableType")
                        .HasColumnType("int");

                    b.Property<int?>("WorkType")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("View_VendorCard", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViewVipCardApp", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<DateTime?>("VisitEndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("VisitNumber")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("VisitStartTime")
                        .HasColumnType("datetime");

                    b.ToTable((string)null);

                    b.ToView("View_VipCardApp", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.ViheWeight", b =>
                {
                    b.Property<string>("CarNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Weight")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable("ViheWeight", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VipCarIsOpen", b =>
                {
                    b.Property<string>("CarCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("CarType")
                        .HasColumnType("int");

                    b.Property<string>("FormType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int>("Guanlan")
                        .HasColumnType("int");

                    b.Property<string>("IsLimit")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<int>("IsMatch")
                        .HasColumnType("int");

                    b.Property<int>("IsOpen")
                        .HasColumnType("int");

                    b.Property<int?>("LastMath")
                        .HasColumnType("int");

                    b.Property<string>("LastNo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Longhua")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.ToTable((string)null);

                    b.ToView("VipCarIsOpen", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VipCard", b =>
                {
                    b.Property<int>("VipCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VipCardID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VipCardId"));

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("VipCardId");

                    b.ToTable("VipCard", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VipCardNum", b =>
                {
                    b.Property<int>("VipCardNumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VipCardNumID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VipCardNumId"));

                    b.Property<string>("EndNum")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Num")
                        .HasColumnType("int");

                    b.Property<string>("StartNum")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("VipCardId")
                        .HasColumnType("int")
                        .HasColumnName("VipCardID");

                    b.HasKey("VipCardNumId");

                    b.HasIndex("VipCardId");

                    b.ToTable("VipCardNum", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VipCardReceive", b =>
                {
                    b.Property<int>("VipCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VipCardID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VipCardId"));

                    b.Property<string>("Bg")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("BG");

                    b.Property<int?>("CardNum")
                        .HasColumnType("int");

                    b.Property<string>("Extention")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ReceiveCards")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ReceiveTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("VipCardId")
                        .HasName("PK_VIPCARDRECEIVE");

                    b.ToTable("VipCardReceive", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VipDisable", b =>
                {
                    b.Property<int>("VipDisableId")
                        .HasColumnType("int")
                        .HasColumnName("VipDisableID");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeleteReason")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("EmpName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("IsDelete")
                        .HasColumnType("int");

                    b.HasKey("VipDisableId");

                    b.ToTable("VipDisable", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VipOutCall", b =>
                {
                    b.Property<int>("CallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CallID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CallId"));

                    b.Property<DateTime?>("CallTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.HasKey("CallId")
                        .HasName("PK_VipCallOut");

                    b.ToTable("VipOutCall", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VipcardApplication", b =>
                {
                    b.Property<int>("Vipid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VIPID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Vipid"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    b.Property<string>("Extension")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Reason")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReceptionBg")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ReceptionBG");

                    b.Property<string>("ReceptionDept")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReceptionPeople")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VisitEndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("VisitStartTime")
                        .HasColumnType("datetime");

                    b.HasKey("Vipid")
                        .HasName("PK_VIPCARDAPPLICATION");

                    b.ToTable("VIPCardApplication", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VisitArrangement", b =>
                {
                    b.Property<int>("VisitArrangementsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitArrangementsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitArrangementsId"));

                    b.Property<string>("AccessContent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AccessMeno")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("AccessTime")
                        .HasColumnType("datetime");

                    b.Property<string>("AccessUnit")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Area")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<int>("VisitNotCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitNotCustID");

                    b.HasKey("VisitArrangementsId")
                        .HasName("PK_VISITARRANGEMENTS");

                    b.ToTable("VisitArrangements");
                });

            modelBuilder.Entity("Data.Migration.Models.VisitCar", b =>
                {
                    b.Property<int>("VisitCarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitCarID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitCarId"));

                    b.Property<string>("CarCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CarColor")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("CarType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PassNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PassType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int")
                        .HasColumnName("ReportID");

                    b.Property<int?>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("VisitCarId");

                    b.ToTable("VisitCar", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VisitCard", b =>
                {
                    b.Property<int>("VisitorCardId")
                        .HasColumnType("int")
                        .HasColumnName("VisitorCardID");

                    b.Property<string>("CardNum")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("CardStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("Deleteddate")
                        .HasColumnType("datetime")
                        .HasColumnName("deleteddate");

                    b.Property<string>("Deletedseason")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("deletedseason");

                    b.Property<string>("EcardNum")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ECardNum");

                    b.Property<int?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("ReceiveTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ReturnTime")
                        .HasColumnType("datetime");

                    b.HasKey("VisitorCardId");

                    b.ToTable("VisitCard", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VisitCredential", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<DateTime?>("ApplicationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ApplicationName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApplicationType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("AreaRegionId")
                        .HasColumnType("int")
                        .HasColumnName("AreaRegionID");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("Bu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BU");

                    b.Property<string>("Build")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Dept")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EndTime")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Filelist")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Floor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GuideExt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("GuideExt1")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("GuideNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("GuideNo1")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("GuidePeople")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GuidePeople1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Number")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Office")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReasonVisit")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ReceptionDept")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReceptionExt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ReceptionNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ReceptionPeople")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SignMemo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StartTime")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UnitVisit")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ApplicationId");

                    b.ToTable("VisitCredentials");
                });

            modelBuilder.Entity("Data.Migration.Models.VisitCredentialsProc", b =>
                {
                    b.Property<int>("VisitProcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitProcID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitProcId"));

                    b.Property<string>("Act")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    b.Property<string>("Meno")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<DateTime?>("WorkDate")
                        .HasColumnType("datetime");

                    b.HasKey("VisitProcId");

                    b.ToTable("VisitCredentialsProc", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VisitCredentialsStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    b.Property<string>("Emp")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FormMeno")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Leavel")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("VisitId")
                        .HasColumnType("int")
                        .HasColumnName("VisitID");

                    b.Property<DateTime?>("WorkTime")
                        .HasColumnType("datetime");

                    b.HasKey("StatusId");

                    b.ToTable("VisitCredentialsStatus", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VisitCustomer", b =>
                {
                    b.Property<int>("VisitCustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitCustID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitCustId"));

                    b.Property<string>("AdviceItem")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ApplicationUnit")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("BackstageStatus")
                        .HasColumnType("int");

                    b.Property<string>("Filepath")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsNewCust")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Number")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PosisionCar")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ProductOppId")
                        .HasColumnType("int")
                        .HasColumnName("ProductOppID");

                    b.Property<string>("ReceiverNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("ShowAttachment")
                        .HasColumnType("bit");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Traffic")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("VipCardId")
                        .HasColumnType("int")
                        .HasColumnName("VipCardID");

                    b.Property<string>("VisitAim")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("VisitNatureId")
                        .HasColumnType("int")
                        .HasColumnName("VisitNatureID");

                    b.Property<string>("VisitUnits")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("VisitCustId")
                        .HasName("PK_VISITCUSTOMER");

                    b.ToTable("VisitCustomer", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VisitFactory", b =>
                {
                    b.Property<int>("FactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FactID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FactId"));

                    b.Property<string>("Area")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<string>("ControlMeno")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DetailAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FactoryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsControl")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Meno")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("VisitCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitCustID");

                    b.HasKey("FactId")
                        .HasName("PK_VISITFACTORY");

                    b.ToTable("VisitFactory", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VisitGovernment", b =>
                {
                    b.Property<int>("VisitGovernmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitGovernmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitGovernmentId"));

                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ApplicationUnit")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("BackstageStatus")
                        .HasColumnType("int");

                    b.Property<string>("Filepath")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Number")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ReceiverNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SalutatoryContent")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SalutatoryPlace")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("VipCardId")
                        .HasColumnType("int")
                        .HasColumnName("VipCardID");

                    b.Property<string>("VisitAim")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("VisitIssues")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("VisitTime")
                        .HasColumnType("datetime");

                    b.Property<string>("VisitUnits")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("VisitGovernmentId");

                    b.ToTable("VisitGovernment", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VisitGovernmentAdvanced", b =>
                {
                    b.Property<int>("VisitGovernmentAdvancedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitGovernmentAdvancedID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitGovernmentAdvancedId"));

                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ApplicationUnit")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Applicationleavel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("BackstageStatus")
                        .HasColumnType("int");

                    b.Property<string>("DiscussMatters")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Filepath")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("MeetingTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Number")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Problem")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ReceiverNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SalutatoryContent")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SalutatoryPlace")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("VipCardId")
                        .HasColumnType("int")
                        .HasColumnName("VipCardID");

                    b.Property<string>("VisitAim")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("VisitTime")
                        .HasColumnType("datetime");

                    b.Property<string>("VisitUnit")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("VisitGovernmentAdvancedId");

                    b.ToTable("VisitGovernmentAdvanced", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VisitGovernmentAdvancedList", b =>
                {
                    b.Property<int>("VisitGadListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitGAdListID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitGadListId"));

                    b.Property<bool?>("IsFristVisit")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nature")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Position")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("ReceiverID");

                    b.Property<string>("ReceiverNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ReceiverTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("RemandTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("ReturnId")
                        .HasColumnType("int")
                        .HasColumnName("ReturnID");

                    b.Property<string>("ReturnReason")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ReturnTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit");

                    b.Property<string>("VisitAddress")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("VisitGovernmentAdvancedId")
                        .HasColumnType("int")
                        .HasColumnName("VisitGovernmentAdvancedID");

                    b.Property<string>("VisitNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("VisitTime")
                        .HasColumnType("datetime");

                    b.HasKey("VisitGadListId")
                        .HasName("PK_VISITGOVERNMENTADVANCEDLIST");

                    b.ToTable("VisitGovernmentAdvancedList", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VisitGovernmentList", b =>
                {
                    b.Property<int>("VisitGlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitGListID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitGlistId"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Position")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("ReceiverID");

                    b.Property<string>("ReceiverNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ReceiverTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("RemandTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("ReturnId")
                        .HasColumnType("int")
                        .HasColumnName("ReturnID");

                    b.Property<string>("ReturnReason")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ReturnTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit");

                    b.Property<int?>("VisitGovernmentId")
                        .HasColumnType("int")
                        .HasColumnName("VisitGovernmentID");

                    b.Property<string>("VisitNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("VisitGlistId")
                        .HasName("PK_VISITGOVERNMENTLIST");

                    b.ToTable("VisitGovernmentList", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VisitHistory", b =>
                {
                    b.Property<int>("VisitHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitHistoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitHistoryId"));

                    b.Property<string>("UnderstandDegree")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("VisitGovernmentId")
                        .HasColumnType("int")
                        .HasColumnName("VisitGovernmentID");

                    b.Property<string>("VisitInformation")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("VisitHistoryId");

                    b.ToTable("VisitHistory", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VisitList", b =>
                {
                    b.Property<int>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitId"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("AreaID");

                    b.Property<string>("CardNumer")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("CountVisit")
                        .HasColumnType("int");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FileSupplie")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ImageVisit")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LeciId")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("LeciID");

                    b.Property<string>("NumberCar")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("PassPostId")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("PassPostID");

                    b.Property<string>("PeopleId")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("PeopleID");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Prc72")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PRC72");

                    b.Property<string>("ReasonSupp")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Supplie")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("TimeIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeOut")
                        .HasColumnType("datetime");

                    b.Property<string>("VisitName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VisitId");

                    b.ToTable("VisitList", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VisitNature", b =>
                {
                    b.Property<int>("VisitNatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitNatureID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitNatureId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("VisitNatureName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VisitNatureId");

                    b.ToTable("VisitNature", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VisitNatureCust", b =>
                {
                    b.Property<int>("VisitNatureCustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitNatureCustID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitNatureCustId"));

                    b.Property<string>("Other")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("VisitCustId")
                        .HasColumnType("int")
                        .HasColumnName("VisitCustID");

                    b.Property<int?>("VisitNatureId")
                        .HasColumnType("int")
                        .HasColumnName("VisitNatureID");

                    b.HasKey("VisitNatureCustId");

                    b.ToTable("VisitNatureCust", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VisitNotCust", b =>
                {
                    b.Property<int>("VisitNotCustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitNotCustID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitNotCustId"));

                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ApplicationUnit")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("BackstageStatus")
                        .HasColumnType("int");

                    b.Property<string>("Filepath")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Number")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PosisionCar")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ReceiverNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("VipCardId")
                        .HasColumnType("int")
                        .HasColumnName("VipCardID");

                    b.Property<string>("VisitLeavel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("VisitNatureId")
                        .HasColumnType("int")
                        .HasColumnName("VisitNatureID");

                    b.Property<DateTime?>("VisitTime")
                        .HasColumnType("datetime");

                    b.Property<string>("VisitUnits")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("WorkItem")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("WorkResult")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("VisitNotCustId");

                    b.ToTable("VisitNotCust", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VisitStatus", b =>
                {
                    b.Property<int>("VisitStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitStatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitStatusId"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("Leavel")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("VisitMemo")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("WorkTime")
                        .HasColumnType("datetime");

                    b.HasKey("VisitStatusId");

                    b.ToTable("VisitStatus", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VisitTimeOutForm", b =>
                {
                    b.Property<int?>("BackstageStatus")
                        .HasColumnType("int");

                    b.Property<int?>("DiTime")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("ReceptionBg")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ReceptionBG");

                    b.Property<string>("ReceptionDept")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ReceptionPeople")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Vipid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VIPID");

                    b.Property<DateTime?>("VisitStartTime")
                        .HasColumnType("datetime");

                    b.ToTable((string)null);

                    b.ToView("VisitTimeOutForm", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VisitantCertificate", b =>
                {
                    b.Property<int>("VisitantCertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitantCertificateID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitantCertificateId"));

                    b.Property<int?>("Bgid")
                        .HasColumnType("int")
                        .HasColumnName("BGID");

                    b.Property<int?>("CardId")
                        .HasColumnType("int")
                        .HasColumnName("CardID");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("File")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ReceptionDept")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ReceptionExt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ReceptionPeople")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ReceptionPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Signoff")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("VisitingUnits")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("VisitantCertificateId");

                    b.HasIndex("CardId");

                    b.HasIndex("CompanyId");

                    b.ToTable("VisitantCertificate", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Visitor", b =>
                {
                    b.Property<int>("VisitorsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitorsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitorsId"));

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CredentialsNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CredentialsType")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Meno")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("RemandTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SendTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Sex")
                        .HasColumnType("bit");

                    b.Property<int?>("TemporaryCredentialsId")
                        .HasColumnType("int")
                        .HasColumnName("TemporaryCredentialsID");

                    b.Property<string>("VisitorsName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("VisitorsId")
                        .HasName("PK_Visitors_1");

                    b.ToTable("Visitors");
                });

            modelBuilder.Entity("Data.Migration.Models.VwCarInfo", b =>
                {
                    b.Property<string>("CarBrand")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("CAR_BRAND");

                    b.Property<string>("CarColor")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CAR_COLOR");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CardNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CARD_NO");

                    b.Property<string>("CardType")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("CARD_TYPE");

                    b.Property<int?>("Cardtype1")
                        .HasColumnType("int")
                        .HasColumnName("CARDTYPE");

                    b.Property<int>("Controlstatus")
                        .HasColumnType("int")
                        .HasColumnName("CONTROLSTATUS");

                    b.Property<byte[]>("EmpImage")
                        .HasColumnType("image")
                        .HasColumnName("EMP_IMAGE");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMP_NAME");

                    b.Property<string>("EmpTel")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("EMP_TEL");

                    b.ToTable((string)null);

                    b.ToView("vw_car_info", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VwEmpAndCustInfo", b =>
                {
                    b.Property<string>("Bg")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("BG");

                    b.Property<string>("Bu")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BU");

                    b.Property<string>("CarNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CAR_NO");

                    b.Property<string>("CardId")
                        .HasMaxLength(384)
                        .HasColumnType("nvarchar(384)")
                        .HasColumnName("CARD_ID");

                    b.Property<string>("CardNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CARD_NO");

                    b.Property<string>("Company")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("COMPANY");

                    b.Property<int>("Contrulstatus")
                        .HasColumnType("int")
                        .HasColumnName("CONTRULSTATUS");

                    b.Property<string>("Depart")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DEPART");

                    b.Property<string>("EmpName")
                        .HasMaxLength(240)
                        .HasColumnType("nvarchar(240)")
                        .HasColumnName("EMP_NAME");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("EMP_NO");

                    b.Property<string>("EmpSex")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("EMP_SEX");

                    b.Property<string>("EnterReason")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ENTER_REASON");

                    b.Property<string>("Imagedata")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("IMAGEDATA");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("TYPE");

                    b.ToTable((string)null);

                    b.ToView("vw_EmpAndCust_Info", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.VwGuiBingCarInfo", b =>
                {
                    b.Property<string>("CarCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CarColor")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("CarType")
                        .HasColumnType("int");

                    b.Property<string>("Cardno")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cardno");

                    b.Property<string>("Cardnumber")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("cardnumber");

                    b.Property<string>("Company")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("company");

                    b.Property<string>("Ecardno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ecardno");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int")
                        .HasColumnName("ReportID");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.ToTable((string)null);

                    b.ToView("vw_GuiBingCar_info", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.WebVerson", b =>
                {
                    b.Property<int>("WebVersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WebVersonID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WebVersonId"));

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("WebVersonName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WebVersonId");

                    b.ToTable("WebVerson", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.WebVisitRecord", b =>
                {
                    b.Property<int>("WebVisitRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WebVisitRecordID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WebVisitRecordId"));

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IP")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("IsBefore")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLoding")
                        .HasColumnType("bit");

                    b.Property<string>("Mac")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<DateTime?>("VisitDate")
                        .HasColumnType("datetime");

                    b.HasKey("WebVisitRecordId");

                    b.ToTable("WebVisitRecord", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.WeeklyReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileReport")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("TimeUpload")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("WeeklyReport", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.WeiCall", b =>
                {
                    b.Property<int>("WeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WeId"));

                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CallTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ContentWei")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Memo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("Method")
                        .HasColumnType("int");

                    b.Property<string>("NameCall")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("NameLis")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Result")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TypeCall")
                        .HasColumnType("int");

                    b.HasKey("WeId");

                    b.ToTable("WeiCall", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.WeightApi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CarType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Idpl")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("IDPL");

                    b.Property<string>("ImageCar")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ImageCarOverall")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ImageOfScale")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ImagePerson")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("TimeWeight")
                        .HasColumnType("datetime");

                    b.Property<string>("UnitWeight")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UserID");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WeightAPI", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.WeightApi1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CarType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Idpl")
                        .HasColumnType("int")
                        .HasColumnName("IDPL");

                    b.Property<string>("ImageCar")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ImagePerson")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("TimeWeight")
                        .HasColumnType("datetime");

                    b.Property<string>("UnitWeight")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WeightAPI1", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.WeightPo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("TimeAdd")
                        .HasColumnType("datetime");

                    b.Property<int?>("WeightIn")
                        .HasColumnType("int");

                    b.Property<int?>("WeightIncotant")
                        .HasColumnType("int");

                    b.ToTable("WeightPO", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.WorkNote", b =>
                {
                    b.Property<DateTime?>("ApplicationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<string>("EmpName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("WorkTime")
                        .HasColumnType("int");

                    b.ToTable("WorkNotes");
                });

            modelBuilder.Entity("Data.Migration.Models.WorkTypeInFac", b =>
                {
                    b.Property<int?>("Isdeleted")
                        .HasColumnType("int");

                    b.Property<string>("Meno")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int>("WorkTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WorkTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkTypeId"));

                    b.Property<string>("WorkTypeNameC")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("WorkTypeNameV")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToTable("WorkTypeInFac", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.Yhuhu", b =>
                {
                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("YHUHU", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserLogin", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "UserId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Data.Migration.Models.CompanyControlHistory", b =>
                {
                    b.HasOne("Data.Migration.Models.Company", "Company")
                        .WithMany("CompanyControlHistories")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_COMPANYC_REFERENCE_COMPANY");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Data.Migration.Models.CustTravelDetail", b =>
                {
                    b.HasOne("Data.Migration.Models.CustTravel", "CustTravel")
                        .WithMany("CustTravelDetails")
                        .HasForeignKey("CustTravelId")
                        .HasConstraintName("FK_CUSTTRAV_REFERENCE_CUSTTRAV");

                    b.Navigation("CustTravel");
                });

            modelBuilder.Entity("Data.Migration.Models.DispatchRecord", b =>
                {
                    b.HasOne("Data.Migration.Models.SpareCar", "SpareCar")
                        .WithMany("DispatchRecords")
                        .HasForeignKey("SpareCarId")
                        .HasConstraintName("FK_DISPATCH_REFERENCE_SPARECAR");

                    b.Navigation("SpareCar");
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageApplication", b =>
                {
                    b.HasOne("Data.Migration.Models.ApplicationDoor", "Application")
                        .WithMany("DoorPowerManageApplications")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK_DOORPOWE_REFERENCE_APPLICAT");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageArea", b =>
                {
                    b.HasOne("Data.Migration.Models.DoorPowerManage", "DoorPowerManage")
                        .WithMany()
                        .HasForeignKey("DoorPowerManageId")
                        .HasConstraintName("FK_DOORPOWE_TT_DOORPOWE");

                    b.Navigation("DoorPowerManage");
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageAreaApplication", b =>
                {
                    b.HasOne("Data.Migration.Models.DoorPowerManageApplication", "DoorPowerManage")
                        .WithMany()
                        .HasForeignKey("DoorPowerManageId")
                        .HasConstraintName("FK_DOORPOWE_RR_DOORPOWE");

                    b.Navigation("DoorPowerManage");
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageAreaVer", b =>
                {
                    b.HasOne("Data.Migration.Models.DoorPowerManageVer", "DoorPowerManageVer")
                        .WithMany()
                        .HasForeignKey("DoorPowerManageVerId")
                        .HasConstraintName("FK_DOORPOWE_LT_DOORPOWE");

                    b.Navigation("DoorPowerManageVer");
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageBgsignSetupItem", b =>
                {
                    b.HasOne("Data.Migration.Models.DoorPowerManageBgsignSetup", "BgsignSetup")
                        .WithMany("DoorPowerManageBgsignSetupItems")
                        .HasForeignKey("BgsignSetupId")
                        .HasConstraintName("FK_DoorPowerManageBGSignSetupItem_DoorPowerManageBGSignSetup");

                    b.Navigation("BgsignSetup");
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageModifyList", b =>
                {
                    b.HasOne("Data.Migration.Models.DoorPowerManageModify", "DoorPowerManageModify")
                        .WithMany()
                        .HasForeignKey("DoorPowerManageModifyId")
                        .IsRequired()
                        .HasConstraintName("FK_DoorPowerManageModifyList_DoorPowerManageModify");

                    b.Navigation("DoorPowerManageModify");
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageType", b =>
                {
                    b.HasOne("Data.Migration.Models.DoorPowerManage", "DoorPowerManage")
                        .WithMany("DoorPowerManageTypes")
                        .HasForeignKey("DoorPowerManageId")
                        .HasConstraintName("FK_DOORPOWE_UU_DOORPOWE");

                    b.Navigation("DoorPowerManage");
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageTypeApplication", b =>
                {
                    b.HasOne("Data.Migration.Models.DoorPowerManageApplication", "DoorPowerManage")
                        .WithMany("DoorPowerManageTypeApplications")
                        .HasForeignKey("DoorPowerManageId")
                        .HasConstraintName("FK_DOORPOWE_PP_DOORPOWE");

                    b.Navigation("DoorPowerManage");
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageTypeVer", b =>
                {
                    b.HasOne("Data.Migration.Models.DoorPowerManageVer", "DoorPowerManageVer")
                        .WithMany("DoorPowerManageTypeVers")
                        .HasForeignKey("DoorPowerManageVerId")
                        .HasConstraintName("FK_DOORPOWE_PS_DOORPOWE");

                    b.Navigation("DoorPowerManageVer");
                });

            modelBuilder.Entity("Data.Migration.Models.InvalidRecord", b =>
                {
                    b.HasOne("Data.Migration.Models.Card", "Card")
                        .WithMany("InvalidRecords")
                        .HasForeignKey("CardId")
                        .HasConstraintName("FK_INVALIDR_REFERENCE_CARD");

                    b.Navigation("Card");
                });

            modelBuilder.Entity("Data.Migration.Models.OilRecord", b =>
                {
                    b.HasOne("Data.Migration.Models.SpareCar", "SpareCar")
                        .WithMany("OilRecords")
                        .HasForeignKey("SpareCarId")
                        .HasConstraintName("FK_OILRECOR_REFERENCE_SPARECAR");

                    b.Navigation("SpareCar");
                });

            modelBuilder.Entity("Data.Migration.Models.RecovertRecord", b =>
                {
                    b.HasOne("Data.Migration.Models.InvalidRecord", "Invalid")
                        .WithMany("RecovertRecords")
                        .HasForeignKey("InvalidId")
                        .HasConstraintName("FK_RECOVERT_REFERENCE_INVALIDR");

                    b.Navigation("Invalid");
                });

            modelBuilder.Entity("Data.Migration.Models.SpareCarReport", b =>
                {
                    b.HasOne("Data.Migration.Models.SpareCar", "SpareCar")
                        .WithMany("SpareCarReports")
                        .HasForeignKey("SpareCarId")
                        .HasConstraintName("FK_SPARECAR_REFERENCE_SPARECAR");

                    b.Navigation("SpareCar");
                });

            modelBuilder.Entity("Data.Migration.Models.SupplementaryInfo", b =>
                {
                    b.HasOne("Data.Migration.Models.Bg", "Bg")
                        .WithMany("SupplementaryInfos")
                        .HasForeignKey("Bgid")
                        .HasConstraintName("FK_SUPPLEME_REFERENCE_BG");

                    b.Navigation("Bg");
                });

            modelBuilder.Entity("Data.Migration.Models.TemporaryCredential", b =>
                {
                    b.HasOne("Data.Migration.Models.Company", "Company")
                        .WithMany("TemporaryCredentials")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_TEMPORAR_REFERENCE_COMPANY");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Data.Migration.Models.VehiclePersonnel", b =>
                {
                    b.HasOne("Data.Migration.Models.VehiclePermit", "VehiclePermit")
                        .WithMany("VehiclePersonnel")
                        .HasForeignKey("VehiclePermitId")
                        .HasConstraintName("FK_VEHICLEP_REFERENCE_VEHICLEP");

                    b.Navigation("VehiclePermit");
                });

            modelBuilder.Entity("Data.Migration.Models.VipCardNum", b =>
                {
                    b.HasOne("Data.Migration.Models.VipCardReceive", "VipCard")
                        .WithMany("VipCardNums")
                        .HasForeignKey("VipCardId")
                        .IsRequired()
                        .HasConstraintName("FK_VIPCARDN_REFERENCE_VIPCARDR");

                    b.Navigation("VipCard");
                });

            modelBuilder.Entity("Data.Migration.Models.VisitantCertificate", b =>
                {
                    b.HasOne("Data.Migration.Models.Card", "Card")
                        .WithMany("VisitantCertificates")
                        .HasForeignKey("CardId")
                        .HasConstraintName("FK_VISITANT_REFERENCE_CARD");

                    b.HasOne("Data.Migration.Models.Company", "Company")
                        .WithMany("VisitantCertificates")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_VISITANT_REFERENCE_COMPANY");

                    b.Navigation("Card");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Data.Migration.Models.ApplicationDoor", b =>
                {
                    b.Navigation("DoorPowerManageApplications");
                });

            modelBuilder.Entity("Data.Migration.Models.Bg", b =>
                {
                    b.Navigation("SupplementaryInfos");
                });

            modelBuilder.Entity("Data.Migration.Models.Card", b =>
                {
                    b.Navigation("InvalidRecords");

                    b.Navigation("VisitantCertificates");
                });

            modelBuilder.Entity("Data.Migration.Models.Company", b =>
                {
                    b.Navigation("CompanyControlHistories");

                    b.Navigation("TemporaryCredentials");

                    b.Navigation("VisitantCertificates");
                });

            modelBuilder.Entity("Data.Migration.Models.CustTravel", b =>
                {
                    b.Navigation("CustTravelDetails");
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManage", b =>
                {
                    b.Navigation("DoorPowerManageTypes");
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageApplication", b =>
                {
                    b.Navigation("DoorPowerManageTypeApplications");
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageBgsignSetup", b =>
                {
                    b.Navigation("DoorPowerManageBgsignSetupItems");
                });

            modelBuilder.Entity("Data.Migration.Models.DoorPowerManageVer", b =>
                {
                    b.Navigation("DoorPowerManageTypeVers");
                });

            modelBuilder.Entity("Data.Migration.Models.InvalidRecord", b =>
                {
                    b.Navigation("RecovertRecords");
                });

            modelBuilder.Entity("Data.Migration.Models.SpareCar", b =>
                {
                    b.Navigation("DispatchRecords");

                    b.Navigation("OilRecords");

                    b.Navigation("SpareCarReports");
                });

            modelBuilder.Entity("Data.Migration.Models.VehiclePermit", b =>
                {
                    b.Navigation("VehiclePersonnel");
                });

            modelBuilder.Entity("Data.Migration.Models.VipCardReceive", b =>
                {
                    b.Navigation("VipCardNums");
                });
#pragma warning restore 612, 618
        }
    }
}
